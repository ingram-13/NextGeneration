2020-02-21 14:38:19.427  INFO 9044 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 9044 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 14:38:19.442 DEBUG 9044 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 14:38:19.442  INFO 9044 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 14:38:19.505  INFO 9044 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 14:38:19.505  INFO 9044 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 14:38:19.505  INFO 9044 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 14:38:20.942  INFO 9044 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 14:38:20.942  INFO 9044 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 14:38:20.958  INFO 9044 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 18ms. Found 0 JDBC repository interfaces.
2020-02-21 14:38:20.973  INFO 9044 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 14:38:20.973  INFO 9044 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 14:38:20.989  INFO 9044 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4ms. Found 0 JPA repository interfaces.
2020-02-21 14:38:21.489  INFO 9044 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 14:38:22.223  INFO 9044 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 14:38:22.239  INFO 9044 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 14:38:22.239  INFO 9044 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 14:38:22.567  INFO 9044 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 14:38:22.567  INFO 9044 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3062 ms
2020-02-21 14:38:22.879  INFO 9044 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 14:38:23.035  INFO 9044 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 14:38:23.317  INFO 9044 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 14:38:23.488 ERROR 9044 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 14:38:23.504  INFO 9044 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 14:38:23.723  INFO 9044 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 14:38:25.082  INFO 9044 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 14:38:25.082  INFO 9044 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 14:38:25.129  INFO 9044 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 14:38:25.457  WARN 9044 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 14:38:25.722  INFO 9044 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 14:38:26.581  INFO 9044 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 14:38:26.581  INFO 9044 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 8.169 seconds (JVM running for 11.641)
2020-02-21 14:40:17.665  INFO 9044 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 14:40:17.666  INFO 9044 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 14:40:17.698  INFO 9044 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 32 ms
2020-02-21 14:40:23.830  INFO 9044 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/index, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.index, args=[org.apache.catalina.session.StandardSessionFacade@3c776f02, {}])
2020-02-21 14:40:23.917 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.m.TypeMapper.queryTypeByCountsBlog   : ==>  Preparing: SELECT DISTINCT t_type.* FROM t_type,t_blog where t_type.id = type_id Limit ? 
2020-02-21 14:40:23.966 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.m.TypeMapper.queryTypeByCountsBlog   : ==> Parameters: 6(Integer)
2020-02-21 14:40:23.995 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==    Columns: id, name
2020-02-21 14:40:23.996 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 2, 进阶知识
2020-02-21 14:40:24.000 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 14:40:24.001 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 2(Integer)
2020-02-21 14:40:24.004 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:24.008 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 5, 1, 1, <<BLOB>>, 1, 2019-12-20 20:30:42, <<BLOB>>, [TOC], 原创, 1, 1, JSR 303校验, 2019-12-20 20:30:42, 0, 2, 1
2020-02-21 14:40:24.010 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:24.011 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 2(Integer)
2020-02-21 14:40:24.017 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 14:40:24.018 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 2, 进阶知识
2020-02-21 14:40:24.018 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 14:40:24.019 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.020 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 5(Integer)
2020-02-21 14:40:24.022 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 0
2020-02-21 14:40:24.024 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 14:40:24.025 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.026 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 6(Integer)
2020-02-21 14:40:24.028 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 14:40:24.028 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 14:40:24.028 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 14:40:24.028 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 14:40:24.029 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 2
2020-02-21 14:40:24.029 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 3, 实战演练
2020-02-21 14:40:24.030 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 14:40:24.030 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 3(Integer)
2020-02-21 14:40:24.032 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 0
2020-02-21 14:40:24.032 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 30, 认知升级
2020-02-21 14:40:24.034 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 14:40:24.034 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 30(Integer)
2020-02-21 14:40:24.036 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:24.037 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 14:40:24.038 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:24.038 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 30(Integer)
2020-02-21 14:40:24.040 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 14:40:24.041 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 30, 认知升级
2020-02-21 14:40:24.042 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 14:40:24.043 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.043 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 7(Integer)
2020-02-21 14:40:24.045 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 14:40:24.046 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 14:40:24.046 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 7, SpringMVC
2020-02-21 14:40:24.046 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 14:40:24.047 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 14:40:24.049 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.049 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 9(Integer)
2020-02-21 14:40:24.051 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 14:40:24.052 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 14:40:24.052 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 14:40:24.052 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 5, Mybatis
2020-02-21 14:40:24.053 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 3
2020-02-21 14:40:24.053 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 2
2020-02-21 14:40:24.054 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 34, 后端
2020-02-21 14:40:24.055 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 14:40:24.055 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 34(Integer)
2020-02-21 14:40:24.057 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:24.058 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 1, 34, 1
2020-02-21 14:40:24.059 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:24.059 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 34(Integer)
2020-02-21 14:40:24.061 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 14:40:24.061 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 34, 后端
2020-02-21 14:40:24.062 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 14:40:24.062 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.063 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 3(Integer)
2020-02-21 14:40:24.064 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 14:40:24.065 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 1, SpringBoot
2020-02-21 14:40:24.065 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 8, Mysql
2020-02-21 14:40:24.065 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 17, Hibernate
2020-02-21 14:40:24.065 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 3
2020-02-21 14:40:24.066 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 14:40:24.067 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.067 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 10(Integer)
2020-02-21 14:40:24.069 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 14:40:24.070 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 14:40:24.070 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 14:40:24.070 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 5, Mybatis
2020-02-21 14:40:24.070 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 7, SpringMVC
2020-02-21 14:40:24.071 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 4
2020-02-21 14:40:24.072 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 2
2020-02-21 14:40:24.072 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 35, 算法
2020-02-21 14:40:24.072 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 14:40:24.073 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 35(Integer)
2020-02-21 14:40:24.075 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:24.076 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 10, 35, 1
2020-02-21 14:40:24.078 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:24.085 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 35(Integer)
2020-02-21 14:40:24.088 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 14:40:24.088 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 35, 算法
2020-02-21 14:40:24.089 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 14:40:24.090 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.090 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 2(Integer)
2020-02-21 14:40:24.092 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 14:40:24.092 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 1, SpringBoot
2020-02-21 14:40:24.092 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 6, MD5
2020-02-21 14:40:24.093 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 14:40:24.094 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 1
2020-02-21 14:40:24.095 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 41, 工具
2020-02-21 14:40:24.096 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 14:40:24.096 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 41(Integer)
2020-02-21 14:40:24.098 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:24.098 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 14:40:24.099 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:24.100 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 41(Integer)
2020-02-21 14:40:24.103 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 14:40:24.103 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 41, 工具
2020-02-21 14:40:24.104 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 14:40:24.104 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.105 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 4(Integer)
2020-02-21 14:40:24.107 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 14:40:24.107 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 10, git
2020-02-21 14:40:24.108 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 11, github
2020-02-21 14:40:24.108 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 14:40:24.108 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 14:40:24.109 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.109 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 8(Integer)
2020-02-21 14:40:24.112 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 14:40:24.113 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 18, IntelliJ IDEA
2020-02-21 14:40:24.113 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 1
2020-02-21 14:40:24.113 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 2
2020-02-21 14:40:24.114 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==      Total: 6
2020-02-21 14:40:24.117 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.m.TagMapper.queryTagByCountsBlog     : ==>  Preparing: SELECT DISTINCT t_tag.* FROM t_tag,t_blog_tags where id = tags_id Limit ? 
2020-02-21 14:40:24.118 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.m.TagMapper.queryTagByCountsBlog     : ==> Parameters: 9(Integer)
2020-02-21 14:40:24.121 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.TagMapper.queryTagByCountsBlog     : <==    Columns: id, name
2020-02-21 14:40:24.121 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 1, SpringBoot
2020-02-21 14:40:24.122 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 14:40:24.122 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 1(Integer)
2020-02-21 14:40:24.133 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:24.133 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 10, 35, 1
2020-02-21 14:40:24.134 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:24.135 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 35(Integer)
2020-02-21 14:40:24.137 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 14:40:24.137 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 35, 算法
2020-02-21 14:40:24.137 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 14:40:24.138 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.139 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 2(Integer)
2020-02-21 14:40:24.141 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 14:40:24.141 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 1, SpringBoot
2020-02-21 14:40:24.142 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 6, MD5
2020-02-21 14:40:24.142 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 14:40:24.143 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 1, 34, 1
2020-02-21 14:40:24.143 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:24.144 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 34(Integer)
2020-02-21 14:40:24.145 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 14:40:24.149 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 34, 后端
2020-02-21 14:40:24.150 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 14:40:24.150 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.151 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 3(Integer)
2020-02-21 14:40:24.154 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 14:40:24.154 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 1, SpringBoot
2020-02-21 14:40:24.154 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 8, Mysql
2020-02-21 14:40:24.155 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 17, Hibernate
2020-02-21 14:40:24.155 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 3
2020-02-21 14:40:24.155 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 2
2020-02-21 14:40:24.155 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 2, JavaSE
2020-02-21 14:40:24.156 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 14:40:24.157 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 2(Integer)
2020-02-21 14:40:24.161 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:24.161 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 14:40:24.162 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:24.163 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 2(Integer)
2020-02-21 14:40:24.164 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 14:40:24.164 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 2, 进阶知识
2020-02-21 14:40:24.165 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 14:40:24.165 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.166 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 6(Integer)
2020-02-21 14:40:24.167 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 14:40:24.167 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 14:40:24.168 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 14:40:24.168 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 14:40:24.169 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 14:40:24.169 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:24.170 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 30(Integer)
2020-02-21 14:40:24.171 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 14:40:24.171 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 30, 认知升级
2020-02-21 14:40:24.171 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 14:40:24.187 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.188 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 7(Integer)
2020-02-21 14:40:24.190 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 14:40:24.190 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 14:40:24.191 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 7, SpringMVC
2020-02-21 14:40:24.229 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 14:40:24.230 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 14:40:24.231 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.231 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 9(Integer)
2020-02-21 14:40:24.235 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 14:40:24.235 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 14:40:24.236 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 14:40:24.236 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 5, Mybatis
2020-02-21 14:40:24.236 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 3
2020-02-21 14:40:24.237 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 14:40:24.238 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.239 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 10(Integer)
2020-02-21 14:40:24.256 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 14:40:24.256 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 14:40:24.256 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 14:40:24.257 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 5, Mybatis
2020-02-21 14:40:24.257 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 7, SpringMVC
2020-02-21 14:40:24.257 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 4
2020-02-21 14:40:24.258 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 4
2020-02-21 14:40:24.258 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 4, Spring
2020-02-21 14:40:24.258 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 14:40:24.259 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 4(Integer)
2020-02-21 14:40:24.263 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:24.264 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 14:40:24.270 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 14:40:24.271 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 14:40:24.272 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 3
2020-02-21 14:40:24.272 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 5, Mybatis
2020-02-21 14:40:24.273 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 14:40:24.274 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 5(Integer)
2020-02-21 14:40:24.285 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:24.286 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 14:40:24.287 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 14:40:24.287 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 2
2020-02-21 14:40:24.288 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 6, MD5
2020-02-21 14:40:24.288 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 14:40:24.288 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 6(Integer)
2020-02-21 14:40:24.388 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:24.388 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 10, 35, 1
2020-02-21 14:40:24.390 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 1
2020-02-21 14:40:24.392 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 7, SpringMVC
2020-02-21 14:40:24.392 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 14:40:24.393 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 7(Integer)
2020-02-21 14:40:24.403 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:24.404 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 14:40:24.405 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 14:40:24.406 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 2
2020-02-21 14:40:24.406 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 8, Mysql
2020-02-21 14:40:24.407 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 14:40:24.407 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 8(Integer)
2020-02-21 14:40:24.426 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:24.427 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 1, 34, 1
2020-02-21 14:40:24.428 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 1
2020-02-21 14:40:24.428 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 10, git
2020-02-21 14:40:24.429 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 14:40:24.429 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 10(Integer)
2020-02-21 14:40:24.432 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:24.433 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 14:40:24.434 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:24.434 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 41(Integer)
2020-02-21 14:40:24.440 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 14:40:24.441 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 41, 工具
2020-02-21 14:40:24.443 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 14:40:24.444 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.444 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 4(Integer)
2020-02-21 14:40:24.447 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 14:40:24.447 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 10, git
2020-02-21 14:40:24.447 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 11, github
2020-02-21 14:40:24.447 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 14:40:24.448 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 1
2020-02-21 14:40:24.483 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 11, github
2020-02-21 14:40:24.484 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 14:40:24.484 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 11(Integer)
2020-02-21 14:40:24.489 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:24.490 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 14:40:24.492 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 1
2020-02-21 14:40:24.492 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.m.TagMapper.queryTagByCountsBlog     : <==      Total: 9
2020-02-21 14:40:24.507 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 14:40:24.508 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 8(Integer)
2020-02-21 14:40:24.513 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:24.514 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 14:40:24.515 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 14:40:24.516 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 14:40:24.517 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 14:40:24.517 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 14:40:24.520 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 5, 1, 1, <<BLOB>>, 1, 2019-12-20 20:30:42, <<BLOB>>, [TOC], 原创, 1, 1, JSR 303校验, 2019-12-20 20:30:42, 0, 2, 1
2020-02-21 14:40:24.521 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 14:40:24.521 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 1, 34, 1
2020-02-21 14:40:24.522 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 8
2020-02-21 14:40:24.523 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : ==>  Preparing: Select * from t_blog where status = true order by update_time desc 
2020-02-21 14:40:24.524 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : ==> Parameters: 
2020-02-21 14:40:24.531 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:24.532 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 10, 35, 1
2020-02-21 14:40:24.533 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:24.533 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 14:40:24.535 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 14:40:24.535 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 14:40:24.535 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 14:40:24.536 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.536 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 14:40:24.542 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:24.543 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 14:40:24.543 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 14:40:24.543 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 14:40:24.544 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 1, 34, 1
2020-02-21 14:40:24.544 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:24.544 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 34(Integer)
2020-02-21 14:40:24.546 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 14:40:24.546 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 34, 后端
2020-02-21 14:40:24.547 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 14:40:24.547 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.547 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 3(Integer)
2020-02-21 14:40:24.550 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:24.550 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 14:40:24.550 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 8, Mysql
2020-02-21 14:40:24.550 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 17, Hibernate
2020-02-21 14:40:24.550 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 14:40:24.551 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 14:40:24.551 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:24.552 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 41(Integer)
2020-02-21 14:40:24.554 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 14:40:24.554 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 41, 工具
2020-02-21 14:40:24.555 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 14:40:24.555 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.556 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 4(Integer)
2020-02-21 14:40:24.559 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:24.559 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 10, git
2020-02-21 14:40:24.559 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 11, github
2020-02-21 14:40:24.559 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 14:40:24.559 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 5, 1, 1, <<BLOB>>, 1, 2019-12-20 20:30:42, <<BLOB>>, [TOC], 原创, 1, 1, JSR 303校验, 2019-12-20 20:30:42, 0, 2, 1
2020-02-21 14:40:24.560 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:24.561 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 2(Integer)
2020-02-21 14:40:24.562 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 14:40:24.562 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 2, 进阶知识
2020-02-21 14:40:24.563 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 14:40:24.563 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.563 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 5(Integer)
2020-02-21 14:40:24.565 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 0
2020-02-21 14:40:24.566 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 14:40:24.567 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.567 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 10(Integer)
2020-02-21 14:40:24.569 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:24.569 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 14:40:24.569 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 14:40:24.569 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 5, Mybatis
2020-02-21 14:40:24.569 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 7, SpringMVC
2020-02-21 14:40:24.570 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 4
2020-02-21 14:40:24.570 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 14:40:24.571 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:24.571 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 30(Integer)
2020-02-21 14:40:24.575 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 14:40:24.575 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 30, 认知升级
2020-02-21 14:40:24.575 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 14:40:24.576 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.576 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 9(Integer)
2020-02-21 14:40:24.578 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:24.578 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 14:40:24.578 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 14:40:24.579 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 5, Mybatis
2020-02-21 14:40:24.579 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 14:40:24.580 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 14:40:24.581 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.581 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 8(Integer)
2020-02-21 14:40:24.583 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:24.583 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 18, IntelliJ IDEA
2020-02-21 14:40:24.583 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 1
2020-02-21 14:40:24.584 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 14:40:24.585 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.585 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 7(Integer)
2020-02-21 14:40:24.587 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:24.587 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 14:40:24.587 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 7, SpringMVC
2020-02-21 14:40:24.587 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 14:40:24.588 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 14:40:24.589 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.589 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 6(Integer)
2020-02-21 14:40:24.593 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:24.593 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 14:40:24.594 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 14:40:24.595 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 14:40:24.595 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==      Total: 9
2020-02-21 14:40:24.598 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : ==>  Preparing: Select * from t_blog where status = true order by update_time desc 
2020-02-21 14:40:24.599 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : ==> Parameters: 
2020-02-21 14:40:24.631 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:24.632 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 10, 35, 1
2020-02-21 14:40:24.632 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:24.633 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 14:40:24.635 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 14:40:24.636 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 14:40:24.636 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 14:40:24.636 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.637 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 14:40:24.640 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:24.640 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 14:40:24.640 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 14:40:24.640 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 14:40:24.641 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 1, 34, 1
2020-02-21 14:40:24.641 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:24.641 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 34(Integer)
2020-02-21 14:40:24.644 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 14:40:24.644 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 34, 后端
2020-02-21 14:40:24.645 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 14:40:24.645 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.645 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 3(Integer)
2020-02-21 14:40:24.647 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:24.647 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 14:40:24.648 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 8, Mysql
2020-02-21 14:40:24.648 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 17, Hibernate
2020-02-21 14:40:24.648 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 14:40:24.648 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 14:40:24.649 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:24.649 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 41(Integer)
2020-02-21 14:40:24.657 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 14:40:24.657 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 41, 工具
2020-02-21 14:40:24.657 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 14:40:24.657 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.658 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 4(Integer)
2020-02-21 14:40:24.666 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:24.666 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 10, git
2020-02-21 14:40:24.667 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 11, github
2020-02-21 14:40:24.667 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 14:40:24.667 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 5, 1, 1, <<BLOB>>, 1, 2019-12-20 20:30:42, <<BLOB>>, [TOC], 原创, 1, 1, JSR 303校验, 2019-12-20 20:30:42, 0, 2, 1
2020-02-21 14:40:24.668 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:24.668 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 2(Integer)
2020-02-21 14:40:24.669 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 14:40:24.670 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 2, 进阶知识
2020-02-21 14:40:24.670 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 14:40:24.670 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.670 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 5(Integer)
2020-02-21 14:40:24.679 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 0
2020-02-21 14:40:24.680 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 14:40:24.680 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.681 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 10(Integer)
2020-02-21 14:40:24.683 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:24.683 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 14:40:24.683 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 14:40:24.683 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 5, Mybatis
2020-02-21 14:40:24.683 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 7, SpringMVC
2020-02-21 14:40:24.684 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 4
2020-02-21 14:40:24.685 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 14:40:24.685 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:24.685 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 30(Integer)
2020-02-21 14:40:24.689 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 14:40:24.689 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 30, 认知升级
2020-02-21 14:40:24.690 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 14:40:24.690 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.690 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 9(Integer)
2020-02-21 14:40:24.692 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:24.692 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 14:40:24.693 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 14:40:24.693 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 5, Mybatis
2020-02-21 14:40:24.693 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 14:40:24.693 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 14:40:24.694 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.694 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 8(Integer)
2020-02-21 14:40:24.695 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:24.696 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 18, IntelliJ IDEA
2020-02-21 14:40:24.696 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 1
2020-02-21 14:40:24.696 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 14:40:24.696 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.699 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 7(Integer)
2020-02-21 14:40:24.702 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:24.702 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 14:40:24.702 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 7, SpringMVC
2020-02-21 14:40:24.702 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 14:40:24.703 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 14:40:24.703 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:24.704 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 6(Integer)
2020-02-21 14:40:24.710 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:24.710 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 14:40:24.710 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 14:40:24.710 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 14:40:24.710 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==      Total: 9
2020-02-21 14:40:24.714  INFO 9044 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/index
2020-02-21 14:40:25.580  INFO 9044 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 14:40:25.584 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 14:40:25.585 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 14:40:25.594 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:25.594 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 14:40:25.594 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 14:40:25.595 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 14:40:25.595 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 14:40:25.596 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 14:40:25.596 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 14:40:25.599 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:25.599 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 14:40:25.600 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 14:40:25.603 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 14:40:25.603 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 14:40:25.603  INFO 9044 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 14:40:31.253  INFO 9044 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/index, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.index, args=[org.apache.catalina.session.StandardSessionFacade@3c776f02, {}])
2020-02-21 14:40:31.254 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.m.TypeMapper.queryTypeByCountsBlog   : ==>  Preparing: SELECT DISTINCT t_type.* FROM t_type,t_blog where t_type.id = type_id Limit ? 
2020-02-21 14:40:31.255 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.m.TypeMapper.queryTypeByCountsBlog   : ==> Parameters: 6(Integer)
2020-02-21 14:40:31.277 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==    Columns: id, name
2020-02-21 14:40:31.277 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 2, 进阶知识
2020-02-21 14:40:31.277 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 14:40:31.277 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 2(Integer)
2020-02-21 14:40:31.282 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:31.283 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 5, 1, 1, <<BLOB>>, 1, 2019-12-20 20:30:42, <<BLOB>>, [TOC], 原创, 1, 1, JSR 303校验, 2019-12-20 20:30:42, 0, 2, 1
2020-02-21 14:40:31.283 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:31.284 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 2(Integer)
2020-02-21 14:40:31.285 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 14:40:31.286 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 2, 进阶知识
2020-02-21 14:40:31.286 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 14:40:31.286 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.286 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 5(Integer)
2020-02-21 14:40:31.293 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 0
2020-02-21 14:40:31.293 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 14:40:31.294 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.294 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 6(Integer)
2020-02-21 14:40:31.296 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 14:40:31.296 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 14:40:31.296 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 14:40:31.297 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 14:40:31.297 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 2
2020-02-21 14:40:31.297 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 3, 实战演练
2020-02-21 14:40:31.298 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 14:40:31.298 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 3(Integer)
2020-02-21 14:40:31.300 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 0
2020-02-21 14:40:31.300 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 30, 认知升级
2020-02-21 14:40:31.301 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 14:40:31.301 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 30(Integer)
2020-02-21 14:40:31.302 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:31.303 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 14:40:31.303 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:31.304 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 30(Integer)
2020-02-21 14:40:31.333 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 14:40:31.333 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 30, 认知升级
2020-02-21 14:40:31.333 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 14:40:31.334 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.334 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 7(Integer)
2020-02-21 14:40:31.340 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 14:40:31.340 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 14:40:31.340 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 7, SpringMVC
2020-02-21 14:40:31.340 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 14:40:31.340 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 14:40:31.341 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.341 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 9(Integer)
2020-02-21 14:40:31.343 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 14:40:31.343 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 14:40:31.343 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 14:40:31.343 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 5, Mybatis
2020-02-21 14:40:31.343 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 3
2020-02-21 14:40:31.343 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 2
2020-02-21 14:40:31.343 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 34, 后端
2020-02-21 14:40:31.343 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 14:40:31.344 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 34(Integer)
2020-02-21 14:40:31.346 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:31.346 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 1, 34, 1
2020-02-21 14:40:31.346 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:31.347 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 34(Integer)
2020-02-21 14:40:31.348 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 14:40:31.348 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 34, 后端
2020-02-21 14:40:31.348 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 14:40:31.348 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.348 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 3(Integer)
2020-02-21 14:40:31.350 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 14:40:31.350 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 1, SpringBoot
2020-02-21 14:40:31.350 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 8, Mysql
2020-02-21 14:40:31.350 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 17, Hibernate
2020-02-21 14:40:31.350 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 3
2020-02-21 14:40:31.351 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 14:40:31.351 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.352 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 10(Integer)
2020-02-21 14:40:31.356 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 14:40:31.357 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 14:40:31.357 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 14:40:31.357 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 5, Mybatis
2020-02-21 14:40:31.357 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 7, SpringMVC
2020-02-21 14:40:31.357 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 4
2020-02-21 14:40:31.357 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 2
2020-02-21 14:40:31.357 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 35, 算法
2020-02-21 14:40:31.357 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 14:40:31.358 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 35(Integer)
2020-02-21 14:40:31.367 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:31.368 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 10, 35, 1
2020-02-21 14:40:31.368 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:31.368 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 35(Integer)
2020-02-21 14:40:31.371 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 14:40:31.371 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 35, 算法
2020-02-21 14:40:31.371 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 14:40:31.372 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.372 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 2(Integer)
2020-02-21 14:40:31.374 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 14:40:31.374 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 1, SpringBoot
2020-02-21 14:40:31.374 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 6, MD5
2020-02-21 14:40:31.374 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 14:40:31.374 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 1
2020-02-21 14:40:31.374 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 41, 工具
2020-02-21 14:40:31.375 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 14:40:31.375 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 41(Integer)
2020-02-21 14:40:31.377 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:31.377 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 14:40:31.377 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:31.378 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 41(Integer)
2020-02-21 14:40:31.379 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 14:40:31.379 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 41, 工具
2020-02-21 14:40:31.379 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 14:40:31.379 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.380 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 4(Integer)
2020-02-21 14:40:31.381 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 14:40:31.382 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 10, git
2020-02-21 14:40:31.382 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 11, github
2020-02-21 14:40:31.382 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 14:40:31.382 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 14:40:31.382 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.383 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 8(Integer)
2020-02-21 14:40:31.385 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 14:40:31.385 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 18, IntelliJ IDEA
2020-02-21 14:40:31.385 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 1
2020-02-21 14:40:31.385 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 2
2020-02-21 14:40:31.385 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==      Total: 6
2020-02-21 14:40:31.386 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.m.TagMapper.queryTagByCountsBlog     : ==>  Preparing: SELECT DISTINCT t_tag.* FROM t_tag,t_blog_tags where id = tags_id Limit ? 
2020-02-21 14:40:31.386 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.m.TagMapper.queryTagByCountsBlog     : ==> Parameters: 9(Integer)
2020-02-21 14:40:31.391 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.TagMapper.queryTagByCountsBlog     : <==    Columns: id, name
2020-02-21 14:40:31.392 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 1, SpringBoot
2020-02-21 14:40:31.392 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 14:40:31.392 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 1(Integer)
2020-02-21 14:40:31.394 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:31.394 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 10, 35, 1
2020-02-21 14:40:31.395 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:31.395 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 35(Integer)
2020-02-21 14:40:31.397 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 14:40:31.398 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 35, 算法
2020-02-21 14:40:31.398 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 14:40:31.398 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.399 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 2(Integer)
2020-02-21 14:40:31.401 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 14:40:31.402 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 1, SpringBoot
2020-02-21 14:40:31.402 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 6, MD5
2020-02-21 14:40:31.402 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 14:40:31.402 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 1, 34, 1
2020-02-21 14:40:31.402 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:31.403 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 34(Integer)
2020-02-21 14:40:31.407 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 14:40:31.407 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 34, 后端
2020-02-21 14:40:31.407 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 14:40:31.408 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.408 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 3(Integer)
2020-02-21 14:40:31.409 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 14:40:31.409 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 1, SpringBoot
2020-02-21 14:40:31.409 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 8, Mysql
2020-02-21 14:40:31.409 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 17, Hibernate
2020-02-21 14:40:31.409 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 3
2020-02-21 14:40:31.410 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 2
2020-02-21 14:40:31.410 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 2, JavaSE
2020-02-21 14:40:31.410 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 14:40:31.410 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 2(Integer)
2020-02-21 14:40:31.412 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:31.412 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 14:40:31.412 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:31.413 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 2(Integer)
2020-02-21 14:40:31.414 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 14:40:31.414 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 2, 进阶知识
2020-02-21 14:40:31.414 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 14:40:31.414 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.415 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 6(Integer)
2020-02-21 14:40:31.416 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 14:40:31.416 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 14:40:31.417 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 14:40:31.417 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 14:40:31.417 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 14:40:31.417 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:31.418 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 30(Integer)
2020-02-21 14:40:31.419 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 14:40:31.419 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 30, 认知升级
2020-02-21 14:40:31.419 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 14:40:31.419 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.420 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 7(Integer)
2020-02-21 14:40:31.421 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 14:40:31.421 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 14:40:31.421 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 7, SpringMVC
2020-02-21 14:40:31.421 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 14:40:31.421 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 14:40:31.421 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.423 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 9(Integer)
2020-02-21 14:40:31.424 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 14:40:31.424 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 14:40:31.424 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 14:40:31.424 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 5, Mybatis
2020-02-21 14:40:31.424 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 3
2020-02-21 14:40:31.425 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 14:40:31.425 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.426 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 10(Integer)
2020-02-21 14:40:31.427 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 14:40:31.427 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 14:40:31.427 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 14:40:31.427 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 5, Mybatis
2020-02-21 14:40:31.428 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 7, SpringMVC
2020-02-21 14:40:31.428 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 4
2020-02-21 14:40:31.428 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 4
2020-02-21 14:40:31.428 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 4, Spring
2020-02-21 14:40:31.428 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 14:40:31.428 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 4(Integer)
2020-02-21 14:40:31.430 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:31.430 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 14:40:31.431 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 14:40:31.431 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 14:40:31.432 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 3
2020-02-21 14:40:31.432 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 5, Mybatis
2020-02-21 14:40:31.433 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 14:40:31.433 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 5(Integer)
2020-02-21 14:40:31.435 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:31.435 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 14:40:31.436 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 14:40:31.436 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 2
2020-02-21 14:40:31.436 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 6, MD5
2020-02-21 14:40:31.437 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 14:40:31.437 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 6(Integer)
2020-02-21 14:40:31.439 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:31.439 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 10, 35, 1
2020-02-21 14:40:31.440 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 1
2020-02-21 14:40:31.440 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 7, SpringMVC
2020-02-21 14:40:31.440 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 14:40:31.441 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 7(Integer)
2020-02-21 14:40:31.444 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:31.445 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 14:40:31.445 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 14:40:31.446 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 2
2020-02-21 14:40:31.446 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 8, Mysql
2020-02-21 14:40:31.446 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 14:40:31.446 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 8(Integer)
2020-02-21 14:40:31.448 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:31.448 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 1, 34, 1
2020-02-21 14:40:31.449 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 1
2020-02-21 14:40:31.449 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 10, git
2020-02-21 14:40:31.449 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 14:40:31.450 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 10(Integer)
2020-02-21 14:40:31.453 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:31.453 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 14:40:31.453 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:31.454 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 41(Integer)
2020-02-21 14:40:31.461 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 14:40:31.461 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 41, 工具
2020-02-21 14:40:31.461 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 14:40:31.462 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.462 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 4(Integer)
2020-02-21 14:40:31.465 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 14:40:31.465 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 10, git
2020-02-21 14:40:31.465 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 11, github
2020-02-21 14:40:31.466 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 14:40:31.466 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 1
2020-02-21 14:40:31.466 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 11, github
2020-02-21 14:40:31.466 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 14:40:31.466 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 11(Integer)
2020-02-21 14:40:31.502 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:31.502 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 14:40:31.502 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 1
2020-02-21 14:40:31.502 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.m.TagMapper.queryTagByCountsBlog     : <==      Total: 9
2020-02-21 14:40:31.503 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 14:40:31.503 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 8(Integer)
2020-02-21 14:40:31.507 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:31.507 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 14:40:31.508 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 14:40:31.508 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 14:40:31.508 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 14:40:31.508 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 14:40:31.509 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 5, 1, 1, <<BLOB>>, 1, 2019-12-20 20:30:42, <<BLOB>>, [TOC], 原创, 1, 1, JSR 303校验, 2019-12-20 20:30:42, 0, 2, 1
2020-02-21 14:40:31.509 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 14:40:31.517 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 1, 34, 1
2020-02-21 14:40:31.517 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 8
2020-02-21 14:40:31.518 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryBlogIndexPage      : ==>  Preparing: Select * from t_blog where status = true order by update_time desc 
2020-02-21 14:40:31.518 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryBlogIndexPage      : ==> Parameters: 
2020-02-21 14:40:31.542 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryBlogIndexPage      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:31.542 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 10, 35, 1
2020-02-21 14:40:31.543 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:31.543 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 14:40:31.545 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 14:40:31.545 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 14:40:31.545 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 14:40:31.545 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.545 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 14:40:31.547 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:31.547 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 14:40:31.547 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 14:40:31.547 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 14:40:31.548 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 1, 34, 1
2020-02-21 14:40:31.548 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:31.548 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 34(Integer)
2020-02-21 14:40:31.550 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 14:40:31.550 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 34, 后端
2020-02-21 14:40:31.550 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 14:40:31.550 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.551 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 3(Integer)
2020-02-21 14:40:31.556 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:31.557 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 14:40:31.557 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 8, Mysql
2020-02-21 14:40:31.557 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 17, Hibernate
2020-02-21 14:40:31.558 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 14:40:31.558 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 14:40:31.558 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:31.559 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 41(Integer)
2020-02-21 14:40:31.565 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 14:40:31.565 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 41, 工具
2020-02-21 14:40:31.565 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 14:40:31.565 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.566 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 4(Integer)
2020-02-21 14:40:31.569 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:31.569 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 10, git
2020-02-21 14:40:31.569 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 11, github
2020-02-21 14:40:31.569 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 14:40:31.569 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 5, 1, 1, <<BLOB>>, 1, 2019-12-20 20:30:42, <<BLOB>>, [TOC], 原创, 1, 1, JSR 303校验, 2019-12-20 20:30:42, 0, 2, 1
2020-02-21 14:40:31.571 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:31.571 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 2(Integer)
2020-02-21 14:40:31.576 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 14:40:31.577 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 2, 进阶知识
2020-02-21 14:40:31.577 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 14:40:31.577 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.577 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 5(Integer)
2020-02-21 14:40:31.579 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 0
2020-02-21 14:40:31.579 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 14:40:31.579 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.580 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 10(Integer)
2020-02-21 14:40:31.581 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:31.581 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 14:40:31.581 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 14:40:31.581 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 5, Mybatis
2020-02-21 14:40:31.581 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 7, SpringMVC
2020-02-21 14:40:31.581 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 4
2020-02-21 14:40:31.582 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 14:40:31.582 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:31.582 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 30(Integer)
2020-02-21 14:40:31.613 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 14:40:31.613 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 30, 认知升级
2020-02-21 14:40:31.614 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 14:40:31.614 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.614 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 9(Integer)
2020-02-21 14:40:31.618 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:31.618 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 14:40:31.618 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 14:40:31.618 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 5, Mybatis
2020-02-21 14:40:31.618 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 14:40:31.619 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 14:40:31.620 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.620 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 8(Integer)
2020-02-21 14:40:31.637 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:31.638 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 18, IntelliJ IDEA
2020-02-21 14:40:31.638 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 1
2020-02-21 14:40:31.639 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 14:40:31.639 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.713 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 7(Integer)
2020-02-21 14:40:31.746 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:31.746 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 14:40:31.746 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 7, SpringMVC
2020-02-21 14:40:31.746 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 14:40:31.747 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 14:40:31.747 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.747 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 6(Integer)
2020-02-21 14:40:31.749 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:31.749 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 14:40:31.749 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 14:40:31.750 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 14:40:31.750 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryBlogIndexPage      : <==      Total: 9
2020-02-21 14:40:31.750 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryBlogIndexPage      : ==>  Preparing: Select * from t_blog where status = true order by update_time desc 
2020-02-21 14:40:31.750 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryBlogIndexPage      : ==> Parameters: 
2020-02-21 14:40:31.753 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryBlogIndexPage      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:31.753 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 10, 35, 1
2020-02-21 14:40:31.754 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:31.758 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 14:40:31.763 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 14:40:31.763 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 14:40:31.764 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 14:40:31.764 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.764 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 14:40:31.766 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:31.766 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 14:40:31.767 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 14:40:31.767 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 14:40:31.767 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 1, 34, 1
2020-02-21 14:40:31.767 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:31.768 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 34(Integer)
2020-02-21 14:40:31.769 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 14:40:31.769 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 34, 后端
2020-02-21 14:40:31.769 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 14:40:31.769 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.770 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 3(Integer)
2020-02-21 14:40:31.771 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:31.774 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 14:40:31.774 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 8, Mysql
2020-02-21 14:40:31.774 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 17, Hibernate
2020-02-21 14:40:31.774 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 14:40:31.774 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 14:40:31.774 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:31.774 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 41(Integer)
2020-02-21 14:40:31.778 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 14:40:31.778 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 41, 工具
2020-02-21 14:40:31.778 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 14:40:31.778 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.779 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 4(Integer)
2020-02-21 14:40:31.780 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:31.780 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 10, git
2020-02-21 14:40:31.780 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 11, github
2020-02-21 14:40:31.780 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 14:40:31.781 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 5, 1, 1, <<BLOB>>, 1, 2019-12-20 20:30:42, <<BLOB>>, [TOC], 原创, 1, 1, JSR 303校验, 2019-12-20 20:30:42, 0, 2, 1
2020-02-21 14:40:31.781 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:31.781 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 2(Integer)
2020-02-21 14:40:31.783 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 14:40:31.783 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 2, 进阶知识
2020-02-21 14:40:31.783 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 14:40:31.783 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.783 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 5(Integer)
2020-02-21 14:40:31.785 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 0
2020-02-21 14:40:31.785 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 14:40:31.786 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.786 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 10(Integer)
2020-02-21 14:40:31.788 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:31.789 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 14:40:31.789 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 14:40:31.789 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 5, Mybatis
2020-02-21 14:40:31.789 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 7, SpringMVC
2020-02-21 14:40:31.789 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 4
2020-02-21 14:40:31.789 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 14:40:31.789 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:31.790 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 30(Integer)
2020-02-21 14:40:31.794 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 14:40:31.795 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 30, 认知升级
2020-02-21 14:40:31.795 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 14:40:31.795 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.795 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 9(Integer)
2020-02-21 14:40:31.797 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:31.798 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 14:40:31.798 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 14:40:31.798 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 5, Mybatis
2020-02-21 14:40:31.798 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 14:40:31.798 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 14:40:31.798 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.799 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 8(Integer)
2020-02-21 14:40:31.800 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:31.800 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 18, IntelliJ IDEA
2020-02-21 14:40:31.800 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 1
2020-02-21 14:40:31.800 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 14:40:31.801 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.801 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 7(Integer)
2020-02-21 14:40:31.810 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:31.810 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 14:40:31.810 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 7, SpringMVC
2020-02-21 14:40:31.810 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 14:40:31.810 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 14:40:31.811 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:31.811 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 6(Integer)
2020-02-21 14:40:31.812 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:31.813 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 14:40:31.813 TRACE 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 14:40:31.813 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 14:40:31.813 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryBlogIndexPage      : <==      Total: 9
2020-02-21 14:40:31.813  INFO 9044 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/index
2020-02-21 14:40:32.315  INFO 9044 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 14:40:32.316 DEBUG 9044 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 14:40:32.316 DEBUG 9044 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 14:40:32.317 TRACE 9044 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:32.318 TRACE 9044 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 14:40:32.318 TRACE 9044 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 14:40:32.318 TRACE 9044 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 14:40:32.318 DEBUG 9044 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 14:40:32.319 DEBUG 9044 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 14:40:32.319 DEBUG 9044 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 14:40:32.322 TRACE 9044 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:32.322 TRACE 9044 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 14:40:32.323 TRACE 9044 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 14:40:32.323 TRACE 9044 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 14:40:32.323 DEBUG 9044 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 14:40:32.324  INFO 9044 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 14:40:33.979  INFO 9044 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 14:40:33.980 DEBUG 9044 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 14:40:33.980 DEBUG 9044 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 14:40:33.982 TRACE 9044 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:33.982 TRACE 9044 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 10, 35, 1
2020-02-21 14:40:33.983 DEBUG 9044 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:33.983 DEBUG 9044 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 14:40:33.985 TRACE 9044 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 14:40:33.985 TRACE 9044 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 14:40:33.986 DEBUG 9044 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 14:40:33.986 DEBUG 9044 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:33.986 DEBUG 9044 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 14:40:33.988 TRACE 9044 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:33.989 TRACE 9044 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 14:40:33.989 TRACE 9044 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 14:40:33.989 DEBUG 9044 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 14:40:33.989 DEBUG 9044 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 14:40:33.990 DEBUG 9044 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 14:40:33.991 DEBUG 9044 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 14:40:33.997 DEBUG 9044 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 14:40:34.069  INFO 9044 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 14:40:34.642  INFO 9044 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 14:40:34.643 DEBUG 9044 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 14:40:34.643 DEBUG 9044 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 14:40:34.645 TRACE 9044 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:34.645 TRACE 9044 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 14:40:34.645 TRACE 9044 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 14:40:34.646 TRACE 9044 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 14:40:34.646 DEBUG 9044 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 14:40:34.647 DEBUG 9044 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 14:40:34.647 DEBUG 9044 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 14:40:34.649 TRACE 9044 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:34.649 TRACE 9044 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 14:40:34.649 TRACE 9044 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 14:40:34.650 TRACE 9044 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 14:40:34.650 DEBUG 9044 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 14:40:34.650  INFO 9044 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 14:40:39.316  INFO 9044 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 14:40:39.317 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 14:40:39.317 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 14:40:39.321 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:39.321 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 11, 35, 1
2020-02-21 14:40:39.322 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:39.322 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 14:40:39.323 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 14:40:39.323 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 14:40:39.324 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 14:40:39.324 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:39.324 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 14:40:39.325 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:39.325 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 14:40:39.325 TRACE 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 14:40:39.326 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 14:40:39.326 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 14:40:39.326 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 14:40:39.326 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 14:40:39.341 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 14:40:39.343  INFO 9044 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 14:40:39.523  INFO 9044 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 14:40:39.524 DEBUG 9044 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 14:40:39.524 DEBUG 9044 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 14:40:39.527 TRACE 9044 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:39.527 TRACE 9044 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 14:40:39.527 TRACE 9044 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 14:40:39.527 TRACE 9044 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 14:40:39.527 DEBUG 9044 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 14:40:39.528 DEBUG 9044 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 14:40:39.528 DEBUG 9044 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 14:40:39.530 TRACE 9044 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:39.531 TRACE 9044 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 14:40:39.531 TRACE 9044 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 14:40:39.531 TRACE 9044 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 14:40:39.531 DEBUG 9044 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 14:40:39.532  INFO 9044 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 14:40:43.721  INFO 9044 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 14:40:43.723 DEBUG 9044 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 14:40:43.724 DEBUG 9044 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 14:40:43.726 TRACE 9044 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:43.726 TRACE 9044 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 12, 35, 1
2020-02-21 14:40:43.727 DEBUG 9044 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 14:40:43.727 DEBUG 9044 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 14:40:43.738 TRACE 9044 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 14:40:43.738 TRACE 9044 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 14:40:43.738 DEBUG 9044 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 14:40:43.739 DEBUG 9044 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 14:40:43.739 DEBUG 9044 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 14:40:43.741 TRACE 9044 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 14:40:43.741 TRACE 9044 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 14:40:43.742 TRACE 9044 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 14:40:43.742 DEBUG 9044 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 14:40:43.742 DEBUG 9044 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 14:40:43.744 DEBUG 9044 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 14:40:43.744 DEBUG 9044 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 14:40:43.758 DEBUG 9044 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 14:40:43.761  INFO 9044 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 14:40:43.998  INFO 9044 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 14:40:43.998 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 14:40:43.999 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 14:40:44.007 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:44.007 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 14:40:44.008 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 14:40:44.009 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 14:40:44.009 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 14:40:44.010 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 14:40:44.010 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 14:40:44.012 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 14:40:44.012 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 14:40:44.012 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 14:40:44.014 TRACE 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 14:40:44.014 DEBUG 9044 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 14:40:44.014  INFO 9044 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 15:01:24.587  INFO 9044 --- [http-nio-8080-exec-9] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/3, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 3])
2020-02-21 15:01:24.587 DEBUG 9044 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 15:01:24.588 DEBUG 9044 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 3(Integer)
2020-02-21 15:01:24.595 TRACE 9044 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 15:01:24.596 TRACE 9044 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 1, 34, 1
2020-02-21 15:01:24.596 DEBUG 9044 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 15:01:24.597 DEBUG 9044 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 34(Integer)
2020-02-21 15:01:24.600 TRACE 9044 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 15:01:24.601 TRACE 9044 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 34, 后端
2020-02-21 15:01:24.601 DEBUG 9044 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 15:01:24.601 DEBUG 9044 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 15:01:24.601 DEBUG 9044 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 3(Integer)
2020-02-21 15:01:24.631 TRACE 9044 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 15:01:24.631 TRACE 9044 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 15:01:24.631 TRACE 9044 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 8, Mysql
2020-02-21 15:01:24.631 TRACE 9044 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 17, Hibernate
2020-02-21 15:01:24.631 DEBUG 9044 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 15:01:24.631 DEBUG 9044 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 15:01:24.632 DEBUG 9044 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 15:01:24.632 DEBUG 9044 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 3(Integer)
2020-02-21 15:01:24.636 DEBUG 9044 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 15:01:24.637  INFO 9044 --- [http-nio-8080-exec-9] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 15:01:24.879  INFO 9044 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 15:01:24.880 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 15:01:24.880 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 15:01:24.883 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 15:01:24.883 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 15:01:24.883 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 15:01:24.884 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 15:01:24.884 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 15:01:24.885 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 15:01:24.885 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 15:01:24.888 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 15:01:24.888 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 15:01:24.889 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 15:01:24.889 TRACE 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 15:01:24.889 DEBUG 9044 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 15:01:24.890  INFO 9044 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 15:03:11.127  INFO 9044 --- [Thread-17] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 15:03:11.128  INFO 9044 --- [Thread-17] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 15:03:11.136  INFO 9044 --- [Thread-17] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-02-21 15:03:13.009  INFO 9044 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 9044 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 15:03:13.009 DEBUG 9044 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 15:03:13.009  INFO 9044 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 15:03:14.243  INFO 9044 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 15:03:14.243  INFO 9044 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 15:03:14.262  INFO 9044 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15ms. Found 0 JDBC repository interfaces.
2020-02-21 15:03:14.269  INFO 9044 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 15:03:14.269  INFO 9044 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 15:03:14.277  INFO 9044 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 8ms. Found 0 JPA repository interfaces.
2020-02-21 15:14:28.405  INFO 1648 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 1648 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 15:14:28.408 DEBUG 1648 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 15:14:28.409  INFO 1648 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 15:14:28.469  INFO 1648 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 15:14:28.470  INFO 1648 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 15:14:28.470  INFO 1648 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 15:14:29.401  INFO 1648 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 15:14:29.402  INFO 1648 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 15:14:29.446  INFO 1648 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 36ms. Found 0 JDBC repository interfaces.
2020-02-21 15:14:29.473  INFO 1648 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 15:14:29.474  INFO 1648 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 15:14:29.500  INFO 1648 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16ms. Found 0 JPA repository interfaces.
2020-02-21 15:14:30.218  INFO 1648 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 15:14:30.713  INFO 1648 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 15:14:30.723  INFO 1648 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 15:14:30.724  INFO 1648 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 15:14:30.876  INFO 1648 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 15:14:30.876  INFO 1648 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2406 ms
2020-02-21 15:14:31.198  INFO 1648 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 15:14:31.267  INFO 1648 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 15:14:31.370  INFO 1648 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 15:14:31.467 ERROR 1648 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 15:14:31.473  INFO 1648 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 15:14:31.581  INFO 1648 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 15:14:32.489  INFO 1648 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 15:14:32.498  INFO 1648 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 15:14:32.532  INFO 1648 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 15:14:32.927  WARN 1648 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 15:14:33.162  INFO 1648 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 15:14:33.750  INFO 1648 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 15:14:33.753  INFO 1648 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 6.045 seconds (JVM running for 7.633)
2020-02-21 16:05:57.930  INFO 14448 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 14448 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 16:05:57.933 DEBUG 14448 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 16:05:57.934  INFO 14448 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 16:05:58.010  INFO 14448 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 16:05:58.010  INFO 14448 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 16:05:58.010  INFO 14448 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 16:05:58.799  INFO 14448 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 16:05:58.800  INFO 14448 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 16:05:58.822  INFO 14448 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17ms. Found 0 JDBC repository interfaces.
2020-02-21 16:05:58.832  INFO 14448 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 16:05:58.832  INFO 14448 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 16:05:58.841  INFO 14448 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4ms. Found 0 JPA repository interfaces.
2020-02-21 16:05:59.181  INFO 14448 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 16:05:59.631  INFO 14448 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 16:05:59.639  INFO 14448 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 16:05:59.639  INFO 14448 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 16:05:59.885  INFO 14448 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 16:05:59.885  INFO 14448 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1875 ms
2020-02-21 16:06:00.151  INFO 14448 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 16:06:00.213  INFO 14448 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 16:06:00.318  INFO 14448 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 16:06:00.425 ERROR 14448 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 16:06:00.431  INFO 14448 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 16:06:00.540  INFO 14448 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 16:06:01.466  INFO 14448 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 16:06:01.474  INFO 14448 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 16:06:01.511  INFO 14448 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 16:06:01.916  WARN 14448 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 16:06:02.158  INFO 14448 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 16:06:02.763  INFO 14448 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 16:06:02.766  INFO 14448 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 5.928 seconds (JVM running for 7.951)
2020-02-21 16:06:15.802  INFO 14448 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 16:06:15.802  INFO 14448 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 16:06:15.815  INFO 14448 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 13 ms
2020-02-21 16:06:15.902  INFO 14448 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/index, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.index, args=[org.apache.catalina.session.StandardSessionFacade@723570c2, {}])
2020-02-21 16:06:15.930 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.m.TypeMapper.queryTypeByCountsBlog   : ==>  Preparing: SELECT DISTINCT t_type.* FROM t_type,t_blog where t_type.id = type_id Limit ? 
2020-02-21 16:06:16.167 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.m.TypeMapper.queryTypeByCountsBlog   : ==> Parameters: 6(Integer)
2020-02-21 16:06:16.182 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==    Columns: id, name
2020-02-21 16:06:16.182 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 2, 进阶知识
2020-02-21 16:06:16.184 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 16:06:16.185 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 2(Integer)
2020-02-21 16:06:16.186 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:06:16.188 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 5, 1, 1, <<BLOB>>, 1, 2019-12-20 20:30:42, <<BLOB>>, [TOC], 原创, 1, 1, JSR 303校验, 2019-12-20 20:30:42, 0, 2, 1
2020-02-21 16:06:16.189 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 16:06:16.190 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 2(Integer)
2020-02-21 16:06:16.191 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 16:06:16.191 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 2, 进阶知识
2020-02-21 16:06:16.191 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 16:06:16.192 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.192 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 5(Integer)
2020-02-21 16:06:16.194 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 0
2020-02-21 16:06:16.195 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 16:06:16.197 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.198 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 6(Integer)
2020-02-21 16:06:16.199 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 16:06:16.199 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 16:06:16.199 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 16:06:16.199 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 16:06:16.200 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 2
2020-02-21 16:06:16.200 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 3, 实战演练
2020-02-21 16:06:16.201 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 16:06:16.201 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 3(Integer)
2020-02-21 16:06:16.202 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 0
2020-02-21 16:06:16.202 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 30, 认知升级
2020-02-21 16:06:16.203 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 16:06:16.204 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 30(Integer)
2020-02-21 16:06:16.205 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:06:16.205 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 16:06:16.206 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 16:06:16.206 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 30(Integer)
2020-02-21 16:06:16.208 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 16:06:16.208 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 30, 认知升级
2020-02-21 16:06:16.209 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 16:06:16.209 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.209 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 7(Integer)
2020-02-21 16:06:16.210 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 16:06:16.211 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 16:06:16.211 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 7, SpringMVC
2020-02-21 16:06:16.211 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 16:06:16.212 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 16:06:16.214 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.214 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 9(Integer)
2020-02-21 16:06:16.215 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 16:06:16.216 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 16:06:16.216 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 16:06:16.216 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 5, Mybatis
2020-02-21 16:06:16.217 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 3
2020-02-21 16:06:16.217 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 2
2020-02-21 16:06:16.217 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 34, 后端
2020-02-21 16:06:16.218 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 16:06:16.218 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 34(Integer)
2020-02-21 16:06:16.219 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:06:16.220 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 2, 34, 1
2020-02-21 16:06:16.221 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 16:06:16.221 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 34(Integer)
2020-02-21 16:06:16.222 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 16:06:16.223 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 34, 后端
2020-02-21 16:06:16.223 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 16:06:16.224 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.224 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 3(Integer)
2020-02-21 16:06:16.225 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 16:06:16.225 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 1, SpringBoot
2020-02-21 16:06:16.226 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 8, Mysql
2020-02-21 16:06:16.226 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 17, Hibernate
2020-02-21 16:06:16.226 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 3
2020-02-21 16:06:16.226 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 16:06:16.227 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.227 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 10(Integer)
2020-02-21 16:06:16.229 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 16:06:16.229 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 16:06:16.230 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 16:06:16.230 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 5, Mybatis
2020-02-21 16:06:16.230 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 7, SpringMVC
2020-02-21 16:06:16.231 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 4
2020-02-21 16:06:16.231 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 2
2020-02-21 16:06:16.232 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 35, 算法
2020-02-21 16:06:16.232 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 16:06:16.232 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 35(Integer)
2020-02-21 16:06:16.234 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:06:16.234 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 13, 35, 1
2020-02-21 16:06:16.235 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 16:06:16.236 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 35(Integer)
2020-02-21 16:06:16.238 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 16:06:16.238 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 35, 算法
2020-02-21 16:06:16.238 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 16:06:16.239 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.239 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 2(Integer)
2020-02-21 16:06:16.240 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 16:06:16.241 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 1, SpringBoot
2020-02-21 16:06:16.241 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 6, MD5
2020-02-21 16:06:16.242 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 16:06:16.242 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 1
2020-02-21 16:06:16.243 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 41, 工具
2020-02-21 16:06:16.244 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 16:06:16.244 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 41(Integer)
2020-02-21 16:06:16.246 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:06:16.246 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 16:06:16.247 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 16:06:16.247 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 41(Integer)
2020-02-21 16:06:16.248 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 16:06:16.249 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 41, 工具
2020-02-21 16:06:16.249 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 16:06:16.249 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.249 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 4(Integer)
2020-02-21 16:06:16.250 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 16:06:16.250 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 10, git
2020-02-21 16:06:16.251 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 11, github
2020-02-21 16:06:16.251 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 16:06:16.251 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 16:06:16.252 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.252 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 8(Integer)
2020-02-21 16:06:16.253 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 16:06:16.253 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 18, IntelliJ IDEA
2020-02-21 16:06:16.254 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 1
2020-02-21 16:06:16.254 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 2
2020-02-21 16:06:16.254 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==      Total: 6
2020-02-21 16:06:16.256 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.m.TagMapper.queryTagByCountsBlog     : ==>  Preparing: SELECT DISTINCT t_tag.* FROM t_tag,t_blog_tags where id = tags_id Limit ? 
2020-02-21 16:06:16.256 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.m.TagMapper.queryTagByCountsBlog     : ==> Parameters: 9(Integer)
2020-02-21 16:06:16.258 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.TagMapper.queryTagByCountsBlog     : <==    Columns: id, name
2020-02-21 16:06:16.258 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 1, SpringBoot
2020-02-21 16:06:16.259 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 16:06:16.259 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 1(Integer)
2020-02-21 16:06:16.261 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:06:16.262 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 13, 35, 1
2020-02-21 16:06:16.264 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 16:06:16.264 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 35(Integer)
2020-02-21 16:06:16.266 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 16:06:16.266 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 35, 算法
2020-02-21 16:06:16.266 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 16:06:16.266 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.267 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 2(Integer)
2020-02-21 16:06:16.268 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 16:06:16.268 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 1, SpringBoot
2020-02-21 16:06:16.268 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 6, MD5
2020-02-21 16:06:16.268 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 16:06:16.269 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 2, 34, 1
2020-02-21 16:06:16.270 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 16:06:16.270 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 34(Integer)
2020-02-21 16:06:16.271 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 16:06:16.271 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 34, 后端
2020-02-21 16:06:16.272 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 16:06:16.272 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.272 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 3(Integer)
2020-02-21 16:06:16.274 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 16:06:16.274 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 1, SpringBoot
2020-02-21 16:06:16.274 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 8, Mysql
2020-02-21 16:06:16.275 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 17, Hibernate
2020-02-21 16:06:16.275 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 3
2020-02-21 16:06:16.275 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 2
2020-02-21 16:06:16.275 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 2, JavaSE
2020-02-21 16:06:16.276 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 16:06:16.276 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 2(Integer)
2020-02-21 16:06:16.278 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:06:16.279 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 16:06:16.280 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 16:06:16.281 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 2(Integer)
2020-02-21 16:06:16.282 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 16:06:16.283 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 2, 进阶知识
2020-02-21 16:06:16.283 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 16:06:16.284 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.284 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 6(Integer)
2020-02-21 16:06:16.286 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 16:06:16.286 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 16:06:16.286 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 16:06:16.287 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 16:06:16.287 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 16:06:16.288 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 16:06:16.288 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 30(Integer)
2020-02-21 16:06:16.289 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 16:06:16.290 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 30, 认知升级
2020-02-21 16:06:16.290 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 16:06:16.290 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.290 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 7(Integer)
2020-02-21 16:06:16.292 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 16:06:16.292 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 16:06:16.292 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 7, SpringMVC
2020-02-21 16:06:16.292 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 16:06:16.293 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 16:06:16.294 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.294 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 9(Integer)
2020-02-21 16:06:16.296 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 16:06:16.296 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 16:06:16.296 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 16:06:16.296 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 5, Mybatis
2020-02-21 16:06:16.297 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 3
2020-02-21 16:06:16.297 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 16:06:16.299 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.299 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 10(Integer)
2020-02-21 16:06:16.300 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 16:06:16.301 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 16:06:16.301 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 16:06:16.301 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 5, Mybatis
2020-02-21 16:06:16.301 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 7, SpringMVC
2020-02-21 16:06:16.301 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 4
2020-02-21 16:06:16.302 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 4
2020-02-21 16:06:16.302 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 4, Spring
2020-02-21 16:06:16.302 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 16:06:16.303 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 4(Integer)
2020-02-21 16:06:16.304 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:06:16.305 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 16:06:16.310 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 16:06:16.310 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 16:06:16.311 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 3
2020-02-21 16:06:16.311 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 5, Mybatis
2020-02-21 16:06:16.312 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 16:06:16.312 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 5(Integer)
2020-02-21 16:06:16.314 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:06:16.315 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 16:06:16.317 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 16:06:16.317 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 2
2020-02-21 16:06:16.318 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 6, MD5
2020-02-21 16:06:16.318 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 16:06:16.318 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 6(Integer)
2020-02-21 16:06:16.320 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:06:16.320 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 13, 35, 1
2020-02-21 16:06:16.322 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 1
2020-02-21 16:06:16.322 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 7, SpringMVC
2020-02-21 16:06:16.323 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 16:06:16.323 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 7(Integer)
2020-02-21 16:06:16.325 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:06:16.325 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 16:06:16.327 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 16:06:16.327 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 2
2020-02-21 16:06:16.327 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 8, Mysql
2020-02-21 16:06:16.327 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 16:06:16.328 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 8(Integer)
2020-02-21 16:06:16.330 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:06:16.330 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 2, 34, 1
2020-02-21 16:06:16.331 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 1
2020-02-21 16:06:16.331 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 10, git
2020-02-21 16:06:16.332 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 16:06:16.332 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 10(Integer)
2020-02-21 16:06:16.334 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:06:16.334 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 16:06:16.335 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 16:06:16.336 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 41(Integer)
2020-02-21 16:06:16.337 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 16:06:16.337 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 41, 工具
2020-02-21 16:06:16.338 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 16:06:16.339 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.339 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 4(Integer)
2020-02-21 16:06:16.340 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 16:06:16.340 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 10, git
2020-02-21 16:06:16.340 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 11, github
2020-02-21 16:06:16.341 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 16:06:16.341 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 1
2020-02-21 16:06:16.341 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 11, github
2020-02-21 16:06:16.341 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 16:06:16.342 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 11(Integer)
2020-02-21 16:06:16.343 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:06:16.343 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 16:06:16.345 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 1
2020-02-21 16:06:16.345 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.m.TagMapper.queryTagByCountsBlog     : <==      Total: 9
2020-02-21 16:06:16.355 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 16:06:16.356 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 8(Integer)
2020-02-21 16:06:16.358 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:06:16.358 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 16:06:16.359 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 16:06:16.360 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 16:06:16.361 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 16:06:16.363 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 16:06:16.364 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 5, 1, 1, <<BLOB>>, 1, 2019-12-20 20:30:42, <<BLOB>>, [TOC], 原创, 1, 1, JSR 303校验, 2019-12-20 20:30:42, 0, 2, 1
2020-02-21 16:06:16.365 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 16:06:16.365 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 2, 34, 1
2020-02-21 16:06:16.365 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 8
2020-02-21 16:06:16.367 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryBlogIndexPage      : ==>  Preparing: Select * from t_blog where status = true order by update_time desc 
2020-02-21 16:06:16.367 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryBlogIndexPage      : ==> Parameters: 
2020-02-21 16:06:16.369 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryBlogIndexPage      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:06:16.369 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 13, 35, 1
2020-02-21 16:06:16.370 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 16:06:16.370 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 16:06:16.374 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 16:06:16.374 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 16:06:16.374 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 16:06:16.374 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.375 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 16:06:16.377 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 16:06:16.377 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 16:06:16.378 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 16:06:16.379 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 16:06:16.380 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 2, 34, 1
2020-02-21 16:06:16.380 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 16:06:16.381 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 34(Integer)
2020-02-21 16:06:16.383 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 16:06:16.383 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 34, 后端
2020-02-21 16:06:16.384 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 16:06:16.384 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.384 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 3(Integer)
2020-02-21 16:06:16.386 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 16:06:16.420 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 16:06:16.421 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 8, Mysql
2020-02-21 16:06:16.421 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 17, Hibernate
2020-02-21 16:06:16.421 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 16:06:16.421 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 16:06:16.422 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 16:06:16.422 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 41(Integer)
2020-02-21 16:06:16.442 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 16:06:16.442 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 41, 工具
2020-02-21 16:06:16.443 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 16:06:16.443 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.443 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 4(Integer)
2020-02-21 16:06:16.451 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 16:06:16.451 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 10, git
2020-02-21 16:06:16.451 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 11, github
2020-02-21 16:06:16.451 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 16:06:16.452 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 5, 1, 1, <<BLOB>>, 1, 2019-12-20 20:30:42, <<BLOB>>, [TOC], 原创, 1, 1, JSR 303校验, 2019-12-20 20:30:42, 0, 2, 1
2020-02-21 16:06:16.452 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 16:06:16.453 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 2(Integer)
2020-02-21 16:06:16.489 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 16:06:16.489 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 2, 进阶知识
2020-02-21 16:06:16.489 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 16:06:16.490 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.490 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 5(Integer)
2020-02-21 16:06:16.502 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 0
2020-02-21 16:06:16.502 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 16:06:16.503 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.503 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 10(Integer)
2020-02-21 16:06:16.505 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 16:06:16.505 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 16:06:16.505 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 16:06:16.505 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 5, Mybatis
2020-02-21 16:06:16.506 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 7, SpringMVC
2020-02-21 16:06:16.506 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 4
2020-02-21 16:06:16.506 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 16:06:16.507 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 16:06:16.507 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 30(Integer)
2020-02-21 16:06:16.508 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 16:06:16.508 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 30, 认知升级
2020-02-21 16:06:16.508 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 16:06:16.508 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.509 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 9(Integer)
2020-02-21 16:06:16.510 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 16:06:16.510 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 16:06:16.511 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 16:06:16.511 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 5, Mybatis
2020-02-21 16:06:16.511 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 16:06:16.512 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 16:06:16.513 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.513 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 8(Integer)
2020-02-21 16:06:16.515 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 16:06:16.515 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 18, IntelliJ IDEA
2020-02-21 16:06:16.516 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 1
2020-02-21 16:06:16.516 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 16:06:16.517 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.518 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 7(Integer)
2020-02-21 16:06:16.519 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 16:06:16.519 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 16:06:16.520 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 7, SpringMVC
2020-02-21 16:06:16.520 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 16:06:16.520 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 16:06:16.521 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.521 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 6(Integer)
2020-02-21 16:06:16.523 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 16:06:16.523 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 16:06:16.523 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 16:06:16.523 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 16:06:16.523 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryBlogIndexPage      : <==      Total: 9
2020-02-21 16:06:16.527 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryBlogIndexPage      : ==>  Preparing: Select * from t_blog where status = true order by update_time desc 
2020-02-21 16:06:16.527 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryBlogIndexPage      : ==> Parameters: 
2020-02-21 16:06:16.531 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryBlogIndexPage      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:06:16.531 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 13, 35, 1
2020-02-21 16:06:16.533 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 16:06:16.533 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 16:06:16.534 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 16:06:16.534 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 16:06:16.534 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 16:06:16.534 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.535 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 16:06:16.536 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 16:06:16.536 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 16:06:16.537 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 16:06:16.537 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 16:06:16.537 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 2, 34, 1
2020-02-21 16:06:16.538 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 16:06:16.538 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 34(Integer)
2020-02-21 16:06:16.539 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 16:06:16.539 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 34, 后端
2020-02-21 16:06:16.539 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 16:06:16.540 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.540 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 3(Integer)
2020-02-21 16:06:16.542 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 16:06:16.542 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 16:06:16.542 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 8, Mysql
2020-02-21 16:06:16.542 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 17, Hibernate
2020-02-21 16:06:16.542 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 16:06:16.542 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 16:06:16.543 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 16:06:16.543 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 41(Integer)
2020-02-21 16:06:16.546 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 16:06:16.546 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 41, 工具
2020-02-21 16:06:16.546 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 16:06:16.546 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.547 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 4(Integer)
2020-02-21 16:06:16.548 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 16:06:16.548 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 10, git
2020-02-21 16:06:16.548 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 11, github
2020-02-21 16:06:16.549 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 16:06:16.549 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 5, 1, 1, <<BLOB>>, 1, 2019-12-20 20:30:42, <<BLOB>>, [TOC], 原创, 1, 1, JSR 303校验, 2019-12-20 20:30:42, 0, 2, 1
2020-02-21 16:06:16.550 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 16:06:16.550 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 2(Integer)
2020-02-21 16:06:16.551 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 16:06:16.551 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 2, 进阶知识
2020-02-21 16:06:16.551 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 16:06:16.551 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.551 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 5(Integer)
2020-02-21 16:06:16.552 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 0
2020-02-21 16:06:16.553 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 16:06:16.553 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.553 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 10(Integer)
2020-02-21 16:06:16.554 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 16:06:16.555 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 16:06:16.555 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 16:06:16.556 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 5, Mybatis
2020-02-21 16:06:16.556 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 7, SpringMVC
2020-02-21 16:06:16.556 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 4
2020-02-21 16:06:16.556 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 16:06:16.557 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 16:06:16.557 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 30(Integer)
2020-02-21 16:06:16.558 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 16:06:16.559 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 30, 认知升级
2020-02-21 16:06:16.559 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 16:06:16.559 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.559 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 9(Integer)
2020-02-21 16:06:16.561 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 16:06:16.561 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 16:06:16.561 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 16:06:16.561 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 5, Mybatis
2020-02-21 16:06:16.561 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 16:06:16.562 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 16:06:16.562 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.563 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 8(Integer)
2020-02-21 16:06:16.564 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 16:06:16.564 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 18, IntelliJ IDEA
2020-02-21 16:06:16.564 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 1
2020-02-21 16:06:16.564 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 16:06:16.565 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.565 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 7(Integer)
2020-02-21 16:06:16.566 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 16:06:16.566 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 16:06:16.566 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 7, SpringMVC
2020-02-21 16:06:16.566 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 16:06:16.566 TRACE 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 16:06:16.567 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:16.567 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 6(Integer)
2020-02-21 16:06:16.568 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 16:06:16.568 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 16:06:16.568 TRACE 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 16:06:16.569 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 16:06:16.569 DEBUG 14448 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryBlogIndexPage      : <==      Total: 9
2020-02-21 16:06:16.571  INFO 14448 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/index
2020-02-21 16:06:17.381  INFO 14448 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 16:06:17.385 DEBUG 14448 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 16:06:17.386 DEBUG 14448 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 16:06:17.388 TRACE 14448 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:06:17.388 TRACE 14448 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 16:06:17.389 TRACE 14448 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 16:06:17.390 TRACE 14448 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 16:06:17.390 DEBUG 14448 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 16:06:17.391 DEBUG 14448 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 16:06:17.392 DEBUG 14448 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 16:06:17.393 TRACE 14448 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:06:17.394 TRACE 14448 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 16:06:17.395 TRACE 14448 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 16:06:17.396 TRACE 14448 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 16:06:17.397 DEBUG 14448 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 16:06:17.398  INFO 14448 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 16:06:18.375  INFO 14448 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 16:06:18.377 DEBUG 14448 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 16:06:18.377 DEBUG 14448 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 16:06:18.388 TRACE 14448 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:06:18.388 TRACE 14448 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 13, 35, 1
2020-02-21 16:06:18.389 DEBUG 14448 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 16:06:18.389 DEBUG 14448 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 16:06:18.393 TRACE 14448 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 16:06:18.393 TRACE 14448 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 16:06:18.393 DEBUG 14448 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 16:06:18.393 DEBUG 14448 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:18.394 DEBUG 14448 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 16:06:18.401 TRACE 14448 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 16:06:18.401 TRACE 14448 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 16:06:18.402 TRACE 14448 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 16:06:18.402 DEBUG 14448 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 16:06:18.402 DEBUG 14448 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ?; 
2020-02-21 16:06:18.404 DEBUG 14448 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 16:06:18.406 DEBUG 14448 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : <====      Total: 0
2020-02-21 16:06:18.406 DEBUG 14448 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 16:06:18.407 DEBUG 14448 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 16:06:18.407 DEBUG 14448 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 16:06:18.414 DEBUG 14448 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 16:06:18.479  INFO 14448 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 16:06:18.803  INFO 14448 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 16:06:18.804 DEBUG 14448 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 16:06:18.804 DEBUG 14448 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 16:06:18.806 TRACE 14448 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:06:18.806 TRACE 14448 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 16:06:18.807 TRACE 14448 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 16:06:18.807 TRACE 14448 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 16:06:18.808 DEBUG 14448 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 16:06:18.809 DEBUG 14448 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 16:06:18.809 DEBUG 14448 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 16:06:18.814 TRACE 14448 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:06:18.814 TRACE 14448 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 16:06:18.815 TRACE 14448 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 16:06:18.816 TRACE 14448 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 16:06:18.816 DEBUG 14448 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 16:06:18.817  INFO 14448 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 16:06:18.882  INFO 14448 --- [http-nio-8080-exec-7] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 16:06:18.883 DEBUG 14448 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 16:06:18.883 DEBUG 14448 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 16:06:18.884 TRACE 14448 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:06:18.885 TRACE 14448 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 14, 35, 1
2020-02-21 16:06:18.885 DEBUG 14448 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 16:06:18.886 DEBUG 14448 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 16:06:18.887 TRACE 14448 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 16:06:18.887 TRACE 14448 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 16:06:18.887 DEBUG 14448 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 16:06:18.888 DEBUG 14448 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:06:18.888 DEBUG 14448 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 16:06:18.890 TRACE 14448 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 16:06:18.890 TRACE 14448 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 16:06:18.890 TRACE 14448 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 16:06:18.890 DEBUG 14448 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 16:06:18.890 DEBUG 14448 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ?; 
2020-02-21 16:06:18.891 DEBUG 14448 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 16:06:18.892 DEBUG 14448 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : <====      Total: 0
2020-02-21 16:06:18.892 DEBUG 14448 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 16:06:18.892  INFO 14448 --- [http-nio-8080-exec-7] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 16:06:39.054  INFO 14448 --- [Thread-14] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 16:06:39.055  INFO 14448 --- [Thread-14] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 16:06:39.064  INFO 14448 --- [Thread-14] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-02-21 16:06:39.907  INFO 14448 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 14448 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 16:06:39.908 DEBUG 14448 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 16:06:39.908  INFO 14448 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 16:06:40.527  INFO 14448 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 16:06:40.527  INFO 14448 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 16:06:40.589  INFO 14448 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 59ms. Found 0 JDBC repository interfaces.
2020-02-21 16:06:40.605  INFO 14448 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 16:06:40.605  INFO 14448 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 16:06:40.621  INFO 14448 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10ms. Found 0 JPA repository interfaces.
2020-02-21 16:06:40.980  INFO 14448 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 16:06:41.167  WARN 14448 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 16:06:41.398  INFO 14448 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 16:06:41.398  INFO 14448 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 16:06:41.399  INFO 14448 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 16:06:41.447  INFO 14448 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 16:06:41.447  INFO 14448 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1531 ms
2020-02-21 16:06:41.598  INFO 14448 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 16:06:41.607 ERROR 14448 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 16:06:41.609  INFO 14448 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-02-21 16:06:41.624  INFO 14448 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 16:06:41.988  INFO 14448 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 16:06:41.988  INFO 14448 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 16:06:42.003  INFO 14448 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 16:06:42.233  WARN 14448 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 16:06:42.509  INFO 14448 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 16:06:43.452  INFO 14448 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 16:06:43.453  INFO 14448 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 3.685 seconds (JVM running for 48.638)
2020-02-21 16:06:43.456  INFO 14448 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 16:06:46.213  INFO 14448 --- [Thread-24] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 16:06:46.214  INFO 14448 --- [Thread-24] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 16:06:46.216  INFO 14448 --- [Thread-24] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} closed
2020-02-21 16:06:47.312  INFO 14448 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 14448 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 16:06:47.313 DEBUG 14448 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 16:06:47.313  INFO 14448 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 16:06:47.672  INFO 14448 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 16:06:47.672  INFO 14448 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 16:06:47.678  INFO 14448 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6ms. Found 0 JDBC repository interfaces.
2020-02-21 16:06:47.681  INFO 14448 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 16:06:47.681  INFO 14448 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 16:06:47.685  INFO 14448 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3ms. Found 0 JPA repository interfaces.
2020-02-21 16:06:47.741  INFO 14448 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 16:06:47.852  WARN 14448 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 16:06:48.009  INFO 14448 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 16:06:48.010  INFO 14448 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 16:06:48.010  INFO 14448 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 16:06:48.095  INFO 14448 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 16:06:48.095  INFO 14448 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 773 ms
2020-02-21 16:06:48.367  INFO 14448 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 16:06:48.374 ERROR 14448 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 16:06:48.375  INFO 14448 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-3} inited
2020-02-21 16:06:48.384  INFO 14448 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 16:06:48.669  INFO 14448 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 16:06:48.669  INFO 14448 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 16:06:48.691  INFO 14448 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 16:06:48.900  WARN 14448 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 16:06:49.118  INFO 14448 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 16:06:49.842  INFO 14448 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 16:06:49.843  INFO 14448 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 2.603 seconds (JVM running for 55.028)
2020-02-21 16:06:49.845  INFO 14448 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 16:07:01.539  INFO 5668 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 5668 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 16:07:01.543 DEBUG 5668 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 16:07:01.543  INFO 5668 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 16:07:01.652  INFO 5668 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 16:07:01.653  INFO 5668 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 16:07:01.653  INFO 5668 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 16:07:02.539  INFO 5668 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 16:07:02.539  INFO 5668 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 16:07:02.555  INFO 5668 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 23ms. Found 0 JDBC repository interfaces.
2020-02-21 16:07:02.571  INFO 5668 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 16:07:02.571  INFO 5668 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 16:07:02.586  INFO 5668 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6ms. Found 0 JPA repository interfaces.
2020-02-21 16:07:03.077  INFO 5668 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 16:07:04.123  INFO 5668 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 16:07:04.139  INFO 5668 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 16:07:04.155  INFO 5668 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 16:07:04.413  INFO 5668 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 16:07:04.413  INFO 5668 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2760 ms
2020-02-21 16:07:04.786  INFO 5668 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 16:07:04.861  INFO 5668 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 16:07:05.066  INFO 5668 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 16:07:05.193 ERROR 5668 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 16:07:05.199  INFO 5668 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 16:07:05.313  INFO 5668 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 16:07:06.395  INFO 5668 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 16:07:06.406  INFO 5668 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 16:07:06.445  INFO 5668 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 16:07:06.888  WARN 5668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 16:07:07.130  INFO 5668 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 16:07:07.961  INFO 5668 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 16:07:07.964  INFO 5668 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 7.511 seconds (JVM running for 9.116)
2020-02-21 16:08:31.482  INFO 5668 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 16:08:31.482  INFO 5668 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 16:08:31.506  INFO 5668 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 24 ms
2020-02-21 16:08:31.623  INFO 5668 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 16:08:31.661 DEBUG 5668 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 16:08:31.916 DEBUG 5668 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 16:08:31.933 TRACE 5668 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:08:31.935 TRACE 5668 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 14, 35, 1
2020-02-21 16:08:31.938 DEBUG 5668 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 16:08:31.938 DEBUG 5668 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 16:08:31.939 TRACE 5668 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 16:08:31.940 TRACE 5668 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 16:08:31.940 DEBUG 5668 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 16:08:31.941 DEBUG 5668 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:08:31.941 DEBUG 5668 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 16:08:31.942 TRACE 5668 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 16:08:31.942 TRACE 5668 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 16:08:31.942 TRACE 5668 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 16:08:31.943 DEBUG 5668 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 16:08:31.943 DEBUG 5668 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ?; 
2020-02-21 16:08:31.943 DEBUG 5668 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 16:08:31.946 TRACE 5668 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 16:08:31.947 TRACE 5668 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, null, null, null, 老刘, 2, null
2020-02-21 16:08:31.948 DEBUG 5668 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.queryParentComment   : ======>  Preparing: Select * from t_comment where id = ? 
2020-02-21 16:08:31.948 DEBUG 5668 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.queryParentComment   : ======> Parameters: 1(Integer)
2020-02-21 16:08:31.949 TRACE 5668 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.queryParentComment   : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 16:08:31.950 TRACE 5668 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.queryParentComment   : <======        Row: 1, null, null, null, null, 老刘, 2, null
2020-02-21 16:08:31.951 DEBUG 5668 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.queryParentComment   : <======      Total: 1
2020-02-21 16:08:31.951 TRACE 5668 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====        Row: 2, null, null, null, null, 老李, 2, 1
2020-02-21 16:08:31.951 DEBUG 5668 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.queryParentComment   : ======>  Preparing: Select * from t_comment where id = ? 
2020-02-21 16:08:31.952 DEBUG 5668 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.queryParentComment   : ======> Parameters: 2(Integer)
2020-02-21 16:08:31.953 TRACE 5668 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.queryParentComment   : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 16:08:31.953 TRACE 5668 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.queryParentComment   : <======        Row: 2, null, null, null, null, 老李, 2, 1
2020-02-21 16:08:31.954 DEBUG 5668 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.queryParentComment   : <======      Total: 1
2020-02-21 16:08:31.954 DEBUG 5668 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 16:08:31.954 DEBUG 5668 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 16:08:31.955 TRACE 5668 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 16:08:31.956 TRACE 5668 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, null, null, null, 老李, 2, 1
2020-02-21 16:08:31.956 TRACE 5668 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, null, null, 老黄, 1, 1
2020-02-21 16:08:31.956 DEBUG 5668 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 16:08:31.957 DEBUG 5668 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====      Total: 2
2020-02-21 16:08:31.957 DEBUG 5668 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 16:08:31.958 DEBUG 5668 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 16:08:31.959 DEBUG 5668 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 16:08:31.964 DEBUG 5668 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 16:08:32.008  INFO 5668 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 16:08:32.642  INFO 5668 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 16:08:32.655 DEBUG 5668 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 16:08:32.655 DEBUG 5668 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 16:08:32.658 TRACE 5668 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:08:32.659 TRACE 5668 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 16:08:32.660 TRACE 5668 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 16:08:32.665 TRACE 5668 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 16:08:32.666 DEBUG 5668 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 16:08:32.667 DEBUG 5668 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 16:08:32.667 DEBUG 5668 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 16:08:32.669 TRACE 5668 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:08:32.670 TRACE 5668 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 16:08:32.671 TRACE 5668 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 16:08:32.672 TRACE 5668 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 16:08:32.673 DEBUG 5668 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 16:08:32.673  INFO 5668 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 16:08:32.768  INFO 5668 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 16:08:32.769 DEBUG 5668 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 16:08:32.770 DEBUG 5668 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 16:08:32.772 TRACE 5668 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:08:32.772 TRACE 5668 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 15, 35, 1
2020-02-21 16:08:32.774 DEBUG 5668 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 16:08:32.774 DEBUG 5668 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 16:08:32.776 TRACE 5668 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 16:08:32.776 TRACE 5668 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 16:08:32.776 DEBUG 5668 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 16:08:32.777 DEBUG 5668 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:08:32.777 DEBUG 5668 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 16:08:32.780 TRACE 5668 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 16:08:32.780 TRACE 5668 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 16:08:32.780 TRACE 5668 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 16:08:32.781 DEBUG 5668 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 16:08:32.781 DEBUG 5668 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ?; 
2020-02-21 16:08:32.782 DEBUG 5668 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 16:08:32.783 TRACE 5668 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 16:08:32.784 TRACE 5668 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, null, null, null, 老刘, 2, null
2020-02-21 16:08:32.784 DEBUG 5668 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.queryParentComment   : ======>  Preparing: Select * from t_comment where id = ? 
2020-02-21 16:08:32.785 DEBUG 5668 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.queryParentComment   : ======> Parameters: 1(Integer)
2020-02-21 16:08:32.787 TRACE 5668 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.queryParentComment   : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 16:08:32.787 TRACE 5668 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.queryParentComment   : <======        Row: 1, null, null, null, null, 老刘, 2, null
2020-02-21 16:08:32.788 DEBUG 5668 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.queryParentComment   : <======      Total: 1
2020-02-21 16:08:32.788 TRACE 5668 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====        Row: 2, null, null, null, null, 老李, 2, 1
2020-02-21 16:08:32.789 DEBUG 5668 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.queryParentComment   : ======>  Preparing: Select * from t_comment where id = ? 
2020-02-21 16:08:32.791 DEBUG 5668 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.queryParentComment   : ======> Parameters: 2(Integer)
2020-02-21 16:08:32.793 TRACE 5668 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.queryParentComment   : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 16:08:32.793 TRACE 5668 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.queryParentComment   : <======        Row: 2, null, null, null, null, 老李, 2, 1
2020-02-21 16:08:32.794 DEBUG 5668 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.queryParentComment   : <======      Total: 1
2020-02-21 16:08:32.794 DEBUG 5668 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 16:08:32.795 DEBUG 5668 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 16:08:32.797 TRACE 5668 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 16:08:32.798 TRACE 5668 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, null, null, null, 老李, 2, 1
2020-02-21 16:08:32.798 TRACE 5668 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, null, null, 老黄, 1, 1
2020-02-21 16:08:32.799 DEBUG 5668 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 16:08:32.799 DEBUG 5668 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====      Total: 2
2020-02-21 16:08:32.800 DEBUG 5668 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 16:08:32.801  INFO 5668 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 16:12:37.255  INFO 5668 --- [Thread-17] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 16:12:37.256  INFO 5668 --- [Thread-17] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 16:12:37.264  INFO 5668 --- [Thread-17] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-02-21 16:12:38.217  INFO 5668 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 5668 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 16:12:38.218 DEBUG 5668 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 16:12:38.218  INFO 5668 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 16:12:38.810  INFO 5668 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 16:12:38.810  INFO 5668 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 16:12:38.819  INFO 5668 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9ms. Found 0 JDBC repository interfaces.
2020-02-21 16:12:38.824  INFO 5668 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 16:12:38.824  INFO 5668 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 16:12:38.831  INFO 5668 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6ms. Found 0 JPA repository interfaces.
2020-02-21 16:12:38.944  INFO 5668 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 16:12:39.102  WARN 5668 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 16:12:39.198  INFO 5668 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 16:12:39.198  INFO 5668 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 16:12:39.198  INFO 5668 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 16:12:39.240  INFO 5668 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 16:12:39.240  INFO 5668 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1018 ms
2020-02-21 16:12:39.396  INFO 5668 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 16:12:39.402 ERROR 5668 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 16:12:39.403  INFO 5668 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-02-21 16:12:39.410  INFO 5668 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 16:12:39.742  INFO 5668 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 16:12:39.742  INFO 5668 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 16:12:39.761  INFO 5668 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 16:12:40.008  WARN 5668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 16:12:40.249  INFO 5668 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 16:12:40.837  INFO 5668 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 16:12:40.838  INFO 5668 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 2.682 seconds (JVM running for 341.99)
2020-02-21 16:12:40.840  INFO 5668 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 16:12:58.753  INFO 5668 --- [Thread-27] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 16:12:58.754  INFO 5668 --- [Thread-27] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 16:12:58.755  INFO 5668 --- [Thread-27] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} closed
2020-02-21 16:12:59.522  INFO 5668 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 5668 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 16:12:59.522 DEBUG 5668 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 16:12:59.522  INFO 5668 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 16:13:00.108  INFO 5668 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 16:13:00.108  INFO 5668 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 16:13:00.163  INFO 5668 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 53ms. Found 0 JDBC repository interfaces.
2020-02-21 16:13:00.172  INFO 5668 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 16:13:00.172  INFO 5668 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 16:13:00.179  INFO 5668 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6ms. Found 0 JPA repository interfaces.
2020-02-21 16:13:00.274  INFO 5668 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 16:13:00.387  WARN 5668 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 16:13:00.484  INFO 5668 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 16:13:00.486  INFO 5668 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 16:13:00.487  INFO 5668 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 16:13:00.537  INFO 5668 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 16:13:00.537  INFO 5668 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1004 ms
2020-02-21 16:13:00.688  INFO 5668 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 16:13:00.695 ERROR 5668 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 16:13:00.697  INFO 5668 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-3} inited
2020-02-21 16:13:00.706  INFO 5668 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 16:13:00.995  INFO 5668 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 16:13:00.995  INFO 5668 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 16:13:01.012  INFO 5668 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 16:13:01.188  WARN 5668 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 16:13:01.396  INFO 5668 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 16:13:02.155  INFO 5668 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 16:13:02.156  INFO 5668 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 2.721 seconds (JVM running for 363.308)
2020-02-21 16:13:02.159  INFO 5668 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 16:13:08.767  INFO 10860 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 10860 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 16:13:08.780 DEBUG 10860 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 16:13:08.780  INFO 10860 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 16:13:08.851  INFO 10860 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 16:13:08.852  INFO 10860 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 16:13:08.852  INFO 10860 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 16:13:10.034  INFO 10860 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 16:13:10.035  INFO 10860 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 16:13:10.073  INFO 10860 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 30ms. Found 0 JDBC repository interfaces.
2020-02-21 16:13:10.089  INFO 10860 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 16:13:10.090  INFO 10860 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 16:13:10.105  INFO 10860 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9ms. Found 0 JPA repository interfaces.
2020-02-21 16:13:10.550  INFO 10860 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 16:13:11.473  INFO 10860 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 16:13:11.490  INFO 10860 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 16:13:11.491  INFO 10860 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 16:13:11.869  INFO 10860 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 16:13:11.869  INFO 10860 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3017 ms
2020-02-21 16:13:12.273  INFO 10860 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 16:13:12.341  INFO 10860 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 16:13:12.477  INFO 10860 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 16:13:12.585 ERROR 10860 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 16:13:12.593  INFO 10860 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 16:13:12.709  INFO 10860 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 16:13:13.572  INFO 10860 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 16:13:13.579  INFO 10860 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 16:13:13.612  INFO 10860 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 16:13:13.924  WARN 10860 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 16:13:14.154  INFO 10860 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 16:13:14.758  INFO 10860 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 16:13:14.761  INFO 10860 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 7.007 seconds (JVM running for 8.626)
2020-02-21 16:13:30.110  INFO 10860 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 16:13:30.110  INFO 10860 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 16:13:30.121  INFO 10860 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 11 ms
2020-02-21 16:13:30.214  INFO 10860 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 16:13:30.238 DEBUG 10860 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 16:13:30.471 DEBUG 10860 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 16:13:30.494 TRACE 10860 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:13:30.496 TRACE 10860 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 15, 35, 1
2020-02-21 16:13:30.500 DEBUG 10860 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 16:13:30.500 DEBUG 10860 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 16:13:30.502 TRACE 10860 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 16:13:30.502 TRACE 10860 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 16:13:30.502 DEBUG 10860 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 16:13:30.503 DEBUG 10860 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:13:30.504 DEBUG 10860 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 16:13:30.506 TRACE 10860 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 16:13:30.506 TRACE 10860 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 16:13:30.507 TRACE 10860 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 16:13:30.508 DEBUG 10860 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 16:13:30.508 DEBUG 10860 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ?; 
2020-02-21 16:13:30.509 DEBUG 10860 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 16:13:30.510 TRACE 10860 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 16:13:30.510 TRACE 10860 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, null, null, null, 老刘, 2, null
2020-02-21 16:13:30.511 DEBUG 10860 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 16:13:30.511 DEBUG 10860 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 16:13:30.513 TRACE 10860 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 16:13:30.513 TRACE 10860 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, null, null, null, 老李, 2, 1
2020-02-21 16:13:30.514 TRACE 10860 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, null, null, 老黄, 1, 1
2020-02-21 16:13:30.514 DEBUG 10860 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 16:13:30.515 TRACE 10860 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====        Row: 2, null, null, null, null, 老李, 2, 1
2020-02-21 16:13:30.515 DEBUG 10860 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.queryParentComment   : ======>  Preparing: Select * from t_comment where id = ? 
2020-02-21 16:13:30.515 DEBUG 10860 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.queryParentComment   : ======> Parameters: 1(Integer)
2020-02-21 16:13:30.517 TRACE 10860 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.queryParentComment   : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 16:13:30.517 TRACE 10860 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.queryParentComment   : <======        Row: 1, null, null, null, null, 老刘, 2, null
2020-02-21 16:13:30.517 DEBUG 10860 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.queryParentComment   : <======      Total: 1
2020-02-21 16:13:30.518 DEBUG 10860 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 16:13:30.518 DEBUG 10860 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 2(Integer)
2020-02-21 16:13:30.519 DEBUG 10860 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======      Total: 0
2020-02-21 16:13:30.520 DEBUG 10860 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====      Total: 2
2020-02-21 16:13:30.520 DEBUG 10860 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 16:13:30.523 DEBUG 10860 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 16:13:30.524 DEBUG 10860 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 16:13:30.530 DEBUG 10860 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 16:13:30.576  INFO 10860 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 16:13:31.224  INFO 10860 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 16:13:31.234 DEBUG 10860 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 16:13:31.235 DEBUG 10860 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 16:13:31.238 TRACE 10860 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:13:31.239 TRACE 10860 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 16:13:31.240 TRACE 10860 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 16:13:31.242 TRACE 10860 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 16:13:31.243 DEBUG 10860 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 16:13:31.245 DEBUG 10860 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 16:13:31.245 DEBUG 10860 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 16:13:31.248 TRACE 10860 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:13:31.249 TRACE 10860 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 16:13:31.251 TRACE 10860 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 16:13:31.255 TRACE 10860 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 16:13:31.256 DEBUG 10860 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 16:13:31.256  INFO 10860 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 16:13:31.311  INFO 10860 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 16:13:31.312 DEBUG 10860 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 16:13:31.312 DEBUG 10860 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 16:13:31.314 TRACE 10860 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:13:31.315 TRACE 10860 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 16, 35, 1
2020-02-21 16:13:31.316 DEBUG 10860 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 16:13:31.316 DEBUG 10860 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 16:13:31.318 TRACE 10860 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 16:13:31.318 TRACE 10860 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 16:13:31.319 DEBUG 10860 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 16:13:31.320 DEBUG 10860 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:13:31.321 DEBUG 10860 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 16:13:31.323 TRACE 10860 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 16:13:31.323 TRACE 10860 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 16:13:31.324 TRACE 10860 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 16:13:31.324 DEBUG 10860 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 16:13:31.325 DEBUG 10860 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ?; 
2020-02-21 16:13:31.325 DEBUG 10860 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 16:13:31.327 TRACE 10860 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 16:13:31.327 TRACE 10860 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, null, null, null, 老刘, 2, null
2020-02-21 16:13:31.328 DEBUG 10860 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 16:13:31.329 DEBUG 10860 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 16:13:31.331 TRACE 10860 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 16:13:31.331 TRACE 10860 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, null, null, null, 老李, 2, 1
2020-02-21 16:13:31.332 TRACE 10860 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, null, null, 老黄, 1, 1
2020-02-21 16:13:31.332 DEBUG 10860 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 16:13:31.332 TRACE 10860 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====        Row: 2, null, null, null, null, 老李, 2, 1
2020-02-21 16:13:31.333 DEBUG 10860 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.queryParentComment   : ======>  Preparing: Select * from t_comment where id = ? 
2020-02-21 16:13:31.335 DEBUG 10860 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.queryParentComment   : ======> Parameters: 1(Integer)
2020-02-21 16:13:31.337 TRACE 10860 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.queryParentComment   : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 16:13:31.337 TRACE 10860 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.queryParentComment   : <======        Row: 1, null, null, null, null, 老刘, 2, null
2020-02-21 16:13:31.338 DEBUG 10860 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.queryParentComment   : <======      Total: 1
2020-02-21 16:13:31.339 DEBUG 10860 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 16:13:31.339 DEBUG 10860 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 2(Integer)
2020-02-21 16:13:31.342 DEBUG 10860 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======      Total: 0
2020-02-21 16:13:31.342 DEBUG 10860 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====      Total: 2
2020-02-21 16:13:31.343 DEBUG 10860 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 16:13:31.345  INFO 10860 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 16:14:54.494  INFO 10860 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 16:14:54.501 DEBUG 10860 --- [http-nio-8080-exec-10] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 16:14:54.501 DEBUG 10860 --- [http-nio-8080-exec-10] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 16:14:54.504 TRACE 10860 --- [http-nio-8080-exec-10] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:14:54.505 TRACE 10860 --- [http-nio-8080-exec-10] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 16, 35, 1
2020-02-21 16:14:54.506 DEBUG 10860 --- [http-nio-8080-exec-10] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 16:14:54.507 DEBUG 10860 --- [http-nio-8080-exec-10] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 16:14:54.538 TRACE 10860 --- [http-nio-8080-exec-10] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 16:14:54.538 TRACE 10860 --- [http-nio-8080-exec-10] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 16:14:54.539 DEBUG 10860 --- [http-nio-8080-exec-10] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 16:14:54.539 DEBUG 10860 --- [http-nio-8080-exec-10] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:14:54.539 DEBUG 10860 --- [http-nio-8080-exec-10] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 16:14:54.541 TRACE 10860 --- [http-nio-8080-exec-10] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 16:14:54.541 TRACE 10860 --- [http-nio-8080-exec-10] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 16:14:54.541 TRACE 10860 --- [http-nio-8080-exec-10] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 16:14:54.541 DEBUG 10860 --- [http-nio-8080-exec-10] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 16:14:54.541 DEBUG 10860 --- [http-nio-8080-exec-10] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ?; 
2020-02-21 16:14:54.541 DEBUG 10860 --- [http-nio-8080-exec-10] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 16:14:54.543 TRACE 10860 --- [http-nio-8080-exec-10] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 16:14:54.543 TRACE 10860 --- [http-nio-8080-exec-10] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, null, null, null, 老刘, 2, null
2020-02-21 16:14:54.543 DEBUG 10860 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 16:14:54.543 DEBUG 10860 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 16:14:54.545 TRACE 10860 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 16:14:54.545 TRACE 10860 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, null, null, null, 老李, 2, 1
2020-02-21 16:14:54.545 TRACE 10860 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, null, null, 老黄, 2, 1
2020-02-21 16:14:54.546 DEBUG 10860 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 16:14:54.546 TRACE 10860 --- [http-nio-8080-exec-10] p.p.m.C.queryCommentByBlogId             : <====        Row: 2, null, null, null, null, 老李, 2, 1
2020-02-21 16:14:54.546 DEBUG 10860 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.queryParentComment   : ======>  Preparing: Select * from t_comment where id = ? 
2020-02-21 16:14:54.546 DEBUG 10860 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.queryParentComment   : ======> Parameters: 1(Integer)
2020-02-21 16:14:54.547 TRACE 10860 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.queryParentComment   : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 16:14:54.548 TRACE 10860 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.queryParentComment   : <======        Row: 1, null, null, null, null, 老刘, 2, null
2020-02-21 16:14:54.548 DEBUG 10860 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.queryParentComment   : <======      Total: 1
2020-02-21 16:14:54.549 DEBUG 10860 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 16:14:54.549 DEBUG 10860 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 2(Integer)
2020-02-21 16:14:54.550 DEBUG 10860 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : <======      Total: 0
2020-02-21 16:14:54.550 TRACE 10860 --- [http-nio-8080-exec-10] p.p.m.C.queryCommentByBlogId             : <====        Row: 3, null, null, null, null, 老黄, 2, 1
2020-02-21 16:14:54.553 DEBUG 10860 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 16:14:54.554 DEBUG 10860 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 3(Integer)
2020-02-21 16:14:54.555 DEBUG 10860 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : <======      Total: 0
2020-02-21 16:14:54.555 DEBUG 10860 --- [http-nio-8080-exec-10] p.p.m.C.queryCommentByBlogId             : <====      Total: 3
2020-02-21 16:14:54.555 DEBUG 10860 --- [http-nio-8080-exec-10] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 16:14:54.556 DEBUG 10860 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 16:14:54.556 DEBUG 10860 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 16:14:54.562 DEBUG 10860 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 16:14:54.564  INFO 10860 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 16:14:54.780  INFO 10860 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 16:14:54.781 DEBUG 10860 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 16:14:54.781 DEBUG 10860 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 16:14:54.788 TRACE 10860 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:14:54.789 TRACE 10860 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 16:14:54.790 TRACE 10860 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 16:14:54.791 TRACE 10860 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 16:14:54.792 DEBUG 10860 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 16:14:54.792 DEBUG 10860 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 16:14:54.793 DEBUG 10860 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 16:14:54.794 TRACE 10860 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:14:54.795 TRACE 10860 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 16:14:54.796 TRACE 10860 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 16:14:54.797 TRACE 10860 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 16:14:54.800 DEBUG 10860 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 16:14:54.800  INFO 10860 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 16:14:54.915  INFO 10860 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 16:14:54.917 DEBUG 10860 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 16:14:54.917 DEBUG 10860 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 16:14:54.922 TRACE 10860 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 16:14:54.923 TRACE 10860 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 17, 35, 1
2020-02-21 16:14:54.929 DEBUG 10860 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 16:14:54.929 DEBUG 10860 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 16:14:54.931 TRACE 10860 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 16:14:54.931 TRACE 10860 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 16:14:54.931 DEBUG 10860 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 16:14:54.932 DEBUG 10860 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 16:14:54.934 DEBUG 10860 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 16:14:54.939 TRACE 10860 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 16:14:54.940 TRACE 10860 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 16:14:54.940 TRACE 10860 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 16:14:54.940 DEBUG 10860 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 16:14:54.941 DEBUG 10860 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ?; 
2020-02-21 16:14:54.941 DEBUG 10860 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 16:14:54.942 TRACE 10860 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 16:14:54.942 TRACE 10860 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, null, null, null, 老刘, 2, null
2020-02-21 16:14:54.943 DEBUG 10860 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 16:14:54.943 DEBUG 10860 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 16:14:54.945 TRACE 10860 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 16:14:54.945 TRACE 10860 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, null, null, null, 老李, 2, 1
2020-02-21 16:14:54.945 TRACE 10860 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, null, null, 老黄, 2, 1
2020-02-21 16:14:54.946 DEBUG 10860 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 16:14:54.946 TRACE 10860 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====        Row: 2, null, null, null, null, 老李, 2, 1
2020-02-21 16:14:54.946 DEBUG 10860 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.queryParentComment   : ======>  Preparing: Select * from t_comment where id = ? 
2020-02-21 16:14:54.947 DEBUG 10860 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.queryParentComment   : ======> Parameters: 1(Integer)
2020-02-21 16:14:54.950 TRACE 10860 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.queryParentComment   : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 16:14:54.950 TRACE 10860 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.queryParentComment   : <======        Row: 1, null, null, null, null, 老刘, 2, null
2020-02-21 16:14:54.950 DEBUG 10860 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.queryParentComment   : <======      Total: 1
2020-02-21 16:14:54.953 DEBUG 10860 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 16:14:54.954 DEBUG 10860 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 2(Integer)
2020-02-21 16:14:54.955 DEBUG 10860 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======      Total: 0
2020-02-21 16:14:54.956 TRACE 10860 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====        Row: 3, null, null, null, null, 老黄, 2, 1
2020-02-21 16:14:54.956 DEBUG 10860 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 16:14:54.956 DEBUG 10860 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 3(Integer)
2020-02-21 16:14:54.958 DEBUG 10860 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======      Total: 0
2020-02-21 16:14:54.958 DEBUG 10860 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====      Total: 3
2020-02-21 16:14:54.958 DEBUG 10860 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 16:14:54.959  INFO 10860 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 16:24:37.301  INFO 10860 --- [Thread-15] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 16:24:37.302  INFO 10860 --- [Thread-15] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 16:24:37.310  INFO 10860 --- [Thread-15] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-02-21 16:24:38.300  INFO 10860 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 10860 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 16:24:38.300 DEBUG 10860 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 16:24:38.301  INFO 10860 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 16:24:38.813  INFO 10860 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 16:24:38.814  INFO 10860 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 16:24:38.836  INFO 10860 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 21ms. Found 0 JDBC repository interfaces.
2020-02-21 16:24:38.839  INFO 10860 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 16:24:38.839  INFO 10860 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 16:24:38.844  INFO 10860 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4ms. Found 0 JPA repository interfaces.
2020-02-21 16:24:38.965  INFO 10860 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 16:24:39.126  WARN 10860 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 16:24:39.280  INFO 10860 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 16:24:39.281  INFO 10860 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 16:24:39.281  INFO 10860 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 16:24:39.368  INFO 10860 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 16:24:39.368  INFO 10860 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1057 ms
2020-02-21 16:24:39.599  INFO 10860 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 16:24:39.607 ERROR 10860 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 16:24:39.610  INFO 10860 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-02-21 16:24:39.622  INFO 10860 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 16:24:39.894  INFO 10860 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 16:24:39.894  INFO 10860 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 16:24:39.909  INFO 10860 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 16:24:40.175  WARN 10860 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 16:24:40.454  INFO 10860 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:04:29.490  INFO 11144 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 11144 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:04:29.494 DEBUG 11144 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:04:29.494  INFO 11144 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:04:29.565  INFO 11144 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 17:04:29.566  INFO 11144 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 17:04:29.566  INFO 11144 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 17:04:30.253  INFO 11144 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:04:30.254  INFO 11144 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:04:30.275  INFO 11144 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17ms. Found 0 JDBC repository interfaces.
2020-02-21 17:04:30.285  INFO 11144 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:04:30.285  INFO 11144 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:04:30.294  INFO 11144 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4ms. Found 0 JPA repository interfaces.
2020-02-21 17:04:30.634  INFO 11144 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:04:31.088  INFO 11144 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:04:31.095  INFO 11144 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:04:31.096  INFO 11144 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:04:31.242  INFO 11144 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:04:31.242  INFO 11144 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1676 ms
2020-02-21 17:04:31.550  INFO 11144 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:04:31.609  INFO 11144 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 17:04:31.714  INFO 11144 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 17:04:31.816 ERROR 11144 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:04:31.822  INFO 11144 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 17:04:31.926  INFO 11144 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:04:32.817  INFO 11144 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:04:32.824  INFO 11144 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:04:32.852  INFO 11144 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:04:33.174  WARN 11144 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:04:33.375  INFO 11144 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:04:33.967  INFO 11144 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:04:33.970  INFO 11144 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 5.479 seconds (JVM running for 7.078)
2020-02-21 17:04:52.384  INFO 11144 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 17:04:52.384  INFO 11144 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 17:04:52.399  INFO 11144 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 15 ms
2020-02-21 17:04:52.519  INFO 11144 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/3, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 3])
2020-02-21 17:04:52.568 DEBUG 11144 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:04:52.864 DEBUG 11144 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 3(Integer)
2020-02-21 17:04:52.885 TRACE 11144 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:04:52.888 TRACE 11144 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 2, 34, 1
2020-02-21 17:04:52.894 DEBUG 11144 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:04:52.895 DEBUG 11144 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 34(Integer)
2020-02-21 17:04:52.897 TRACE 11144 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:04:52.897 TRACE 11144 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 34, 后端
2020-02-21 17:04:52.897 DEBUG 11144 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:04:52.898 DEBUG 11144 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:04:52.898 DEBUG 11144 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 3(Integer)
2020-02-21 17:04:52.900 TRACE 11144 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:04:52.900 TRACE 11144 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:04:52.900 TRACE 11144 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 8, Mysql
2020-02-21 17:04:52.900 TRACE 11144 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 17, Hibernate
2020-02-21 17:04:52.900 DEBUG 11144 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 17:04:52.901 DEBUG 11144 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ?; 
2020-02-21 17:04:52.901 DEBUG 11144 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 3(Integer)
2020-02-21 17:04:52.903 DEBUG 11144 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====      Total: 0
2020-02-21 17:04:52.903 DEBUG 11144 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:04:52.905 DEBUG 11144 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:04:52.906 DEBUG 11144 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 3(Integer)
2020-02-21 17:04:52.921 DEBUG 11144 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:04:52.982  INFO 11144 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 17:04:53.715  INFO 11144 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:04:53.729 DEBUG 11144 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:04:53.730 DEBUG 11144 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:04:53.731 TRACE 11144 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:04:53.732 TRACE 11144 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:04:53.735 TRACE 11144 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:04:53.738 TRACE 11144 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:04:53.739 DEBUG 11144 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:04:53.742 DEBUG 11144 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:04:53.742 DEBUG 11144 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:04:53.744 TRACE 11144 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:04:53.745 TRACE 11144 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:04:53.747 TRACE 11144 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:04:53.748 TRACE 11144 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:04:53.749 DEBUG 11144 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:04:53.749  INFO 11144 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:04:53.826  INFO 11144 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/3, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[3, {}])
2020-02-21 17:04:53.827 DEBUG 11144 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:04:53.827 DEBUG 11144 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 3(Integer)
2020-02-21 17:04:53.829 TRACE 11144 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:04:53.829 TRACE 11144 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 3, 34, 1
2020-02-21 17:04:53.831 DEBUG 11144 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:04:53.831 DEBUG 11144 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 34(Integer)
2020-02-21 17:04:53.833 TRACE 11144 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:04:53.833 TRACE 11144 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 34, 后端
2020-02-21 17:04:53.834 DEBUG 11144 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:04:53.835 DEBUG 11144 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:04:53.836 DEBUG 11144 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 3(Integer)
2020-02-21 17:04:53.838 TRACE 11144 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:04:53.838 TRACE 11144 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:04:53.839 TRACE 11144 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 8, Mysql
2020-02-21 17:04:53.840 TRACE 11144 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 17, Hibernate
2020-02-21 17:04:53.840 DEBUG 11144 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 17:04:53.841 DEBUG 11144 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ?; 
2020-02-21 17:04:53.842 DEBUG 11144 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 3(Integer)
2020-02-21 17:04:53.843 DEBUG 11144 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : <====      Total: 0
2020-02-21 17:04:53.844 DEBUG 11144 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:04:53.845  INFO 11144 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 17:16:44.367  INFO 11144 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/3, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 3])
2020-02-21 17:16:44.375 DEBUG 11144 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:16:44.376 DEBUG 11144 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 3(Integer)
2020-02-21 17:16:44.379 TRACE 11144 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:16:44.379 TRACE 11144 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 3, 34, 1
2020-02-21 17:16:44.381 DEBUG 11144 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:16:44.381 DEBUG 11144 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 34(Integer)
2020-02-21 17:16:44.390 TRACE 11144 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:16:44.391 TRACE 11144 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 34, 后端
2020-02-21 17:16:44.391 DEBUG 11144 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:16:44.392 DEBUG 11144 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:16:44.392 DEBUG 11144 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 3(Integer)
2020-02-21 17:16:44.394 TRACE 11144 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:16:44.394 TRACE 11144 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:16:44.394 TRACE 11144 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 8, Mysql
2020-02-21 17:16:44.395 TRACE 11144 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 17, Hibernate
2020-02-21 17:16:44.395 DEBUG 11144 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 17:16:44.396 DEBUG 11144 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ?; 
2020-02-21 17:16:44.396 DEBUG 11144 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 3(Integer)
2020-02-21 17:16:44.398 DEBUG 11144 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : <====      Total: 0
2020-02-21 17:16:44.398 DEBUG 11144 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:16:44.400 DEBUG 11144 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:16:44.404 DEBUG 11144 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 3(Integer)
2020-02-21 17:16:44.420 DEBUG 11144 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:16:44.423  INFO 11144 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 17:16:44.740  INFO 11144 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:16:44.741 DEBUG 11144 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:16:44.741 DEBUG 11144 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:16:44.743 TRACE 11144 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:16:44.743 TRACE 11144 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:16:44.745 TRACE 11144 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:16:44.746 TRACE 11144 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:16:44.747 DEBUG 11144 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:16:44.748 DEBUG 11144 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:16:44.748 DEBUG 11144 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:16:44.756 TRACE 11144 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:16:44.756 TRACE 11144 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:16:44.758 TRACE 11144 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:16:44.758 TRACE 11144 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:16:44.759 DEBUG 11144 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:16:44.760  INFO 11144 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:16:44.836  INFO 11144 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/3, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[3, {}])
2020-02-21 17:16:44.837 DEBUG 11144 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:16:44.838 DEBUG 11144 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 3(Integer)
2020-02-21 17:16:44.840 TRACE 11144 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:16:44.840 TRACE 11144 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 4, 34, 1
2020-02-21 17:16:44.847 DEBUG 11144 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:16:44.848 DEBUG 11144 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 34(Integer)
2020-02-21 17:16:44.850 TRACE 11144 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:16:44.851 TRACE 11144 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 34, 后端
2020-02-21 17:16:44.853 DEBUG 11144 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:16:44.854 DEBUG 11144 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:16:44.855 DEBUG 11144 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 3(Integer)
2020-02-21 17:16:44.857 TRACE 11144 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:16:44.857 TRACE 11144 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:16:44.857 TRACE 11144 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 8, Mysql
2020-02-21 17:16:44.858 TRACE 11144 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 17, Hibernate
2020-02-21 17:16:44.858 DEBUG 11144 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 17:16:44.858 DEBUG 11144 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ?; 
2020-02-21 17:16:44.859 DEBUG 11144 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 3(Integer)
2020-02-21 17:16:44.860 DEBUG 11144 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : <====      Total: 0
2020-02-21 17:16:44.861 DEBUG 11144 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:16:44.861  INFO 11144 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 17:17:28.331  INFO 11144 --- [Thread-13] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 17:17:28.332  INFO 11144 --- [Thread-13] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:17:28.343  INFO 11144 --- [Thread-13] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-02-21 17:17:29.499  INFO 11144 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 11144 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:17:29.500 DEBUG 11144 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:17:29.500  INFO 11144 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:17:30.102  INFO 11144 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:17:30.102  INFO 11144 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:17:30.112  INFO 11144 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9ms. Found 0 JDBC repository interfaces.
2020-02-21 17:17:30.117  INFO 11144 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:17:30.117  INFO 11144 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:17:30.124  INFO 11144 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6ms. Found 0 JPA repository interfaces.
2020-02-21 17:17:30.222  INFO 11144 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:17:30.368  WARN 11144 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 17:17:30.462  INFO 11144 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:17:30.463  INFO 11144 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:17:30.463  INFO 11144 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:17:30.503  INFO 11144 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:17:30.504  INFO 11144 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 997 ms
2020-02-21 17:17:30.660  INFO 11144 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:17:30.667 ERROR 11144 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:17:30.670  INFO 11144 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-02-21 17:17:30.677  INFO 11144 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:17:30.996  INFO 11144 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:17:30.997  INFO 11144 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:17:31.019  INFO 11144 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:17:31.282  WARN 11144 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:17:31.628  INFO 11144 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:17:32.360  INFO 11144 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:17:32.360  INFO 11144 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 2.975 seconds (JVM running for 785.471)
2020-02-21 17:17:32.360  INFO 11144 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 17:18:07.276  INFO 8232 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 8232 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:18:07.279 DEBUG 8232 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:18:07.280  INFO 8232 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:18:07.349  INFO 8232 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 17:18:07.349  INFO 8232 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 17:18:07.349  INFO 8232 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 17:18:08.083  INFO 8232 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:18:08.083  INFO 8232 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:18:08.099  INFO 8232 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17ms. Found 0 JDBC repository interfaces.
2020-02-21 17:18:08.114  INFO 8232 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:18:08.114  INFO 8232 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:18:08.114  INFO 8232 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4ms. Found 0 JPA repository interfaces.
2020-02-21 17:18:08.442  INFO 8232 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:18:08.926  INFO 8232 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:18:08.926  INFO 8232 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:18:08.926  INFO 8232 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:18:09.083  INFO 8232 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:18:09.083  INFO 8232 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1734 ms
2020-02-21 17:18:09.438  INFO 8232 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:18:09.496  INFO 8232 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 17:18:09.601  INFO 8232 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 17:18:09.696 ERROR 8232 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:18:09.704  INFO 8232 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 17:18:09.818  INFO 8232 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:18:27.847  INFO 11568 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 11568 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:18:27.851 DEBUG 11568 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:18:27.852  INFO 11568 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:18:27.943  INFO 11568 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 17:18:27.944  INFO 11568 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 17:18:27.944  INFO 11568 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 17:18:28.731  INFO 11568 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:18:28.732  INFO 11568 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:18:28.753  INFO 11568 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17ms. Found 0 JDBC repository interfaces.
2020-02-21 17:18:28.763  INFO 11568 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:18:28.764  INFO 11568 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:18:28.773  INFO 11568 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4ms. Found 0 JPA repository interfaces.
2020-02-21 17:18:29.093  INFO 11568 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:18:29.558  INFO 11568 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:18:29.570  INFO 11568 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:18:29.571  INFO 11568 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:18:29.721  INFO 11568 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:18:29.722  INFO 11568 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1777 ms
2020-02-21 17:18:30.028  INFO 11568 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:18:30.088  INFO 11568 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 17:18:30.199  INFO 11568 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 17:18:30.327 ERROR 11568 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:18:30.334  INFO 11568 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 17:18:30.464  INFO 11568 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:18:31.317  INFO 11568 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:18:31.323  INFO 11568 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:18:31.349  INFO 11568 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:18:31.663  WARN 11568 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:18:31.870  INFO 11568 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:18:32.524  INFO 11568 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:18:32.527  INFO 11568 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 5.867 seconds (JVM running for 7.303)
2020-02-21 17:18:35.011  INFO 11568 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 17:18:35.012  INFO 11568 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 17:18:35.024  INFO 11568 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 12 ms
2020-02-21 17:18:35.137  INFO 11568 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/3, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 3])
2020-02-21 17:18:35.170 DEBUG 11568 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:18:35.450 DEBUG 11568 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 3(Integer)
2020-02-21 17:18:35.470 TRACE 11568 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:18:35.474 TRACE 11568 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 4, 34, 1
2020-02-21 17:18:35.480 DEBUG 11568 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:18:35.480 DEBUG 11568 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 34(Integer)
2020-02-21 17:18:35.481 TRACE 11568 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:18:35.482 TRACE 11568 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 34, 后端
2020-02-21 17:18:35.482 DEBUG 11568 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:18:35.483 DEBUG 11568 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:18:35.484 DEBUG 11568 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 3(Integer)
2020-02-21 17:18:35.486 TRACE 11568 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:18:35.486 TRACE 11568 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:18:35.486 TRACE 11568 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 8, Mysql
2020-02-21 17:18:35.487 TRACE 11568 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 17, Hibernate
2020-02-21 17:18:35.487 DEBUG 11568 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 17:18:35.488 DEBUG 11568 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ?; 
2020-02-21 17:18:35.489 DEBUG 11568 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 3(Integer)
2020-02-21 17:18:35.493 DEBUG 11568 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====      Total: 0
2020-02-21 17:18:35.494 DEBUG 11568 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:18:35.497 DEBUG 11568 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:18:35.497 DEBUG 11568 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 3(Integer)
2020-02-21 17:18:35.502 DEBUG 11568 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:18:35.554  INFO 11568 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 17:18:36.265  INFO 11568 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:18:36.276 DEBUG 11568 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:18:36.277 DEBUG 11568 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:18:36.278 TRACE 11568 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:18:36.279 TRACE 11568 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:18:36.280 TRACE 11568 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:18:36.282 TRACE 11568 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:18:36.282 DEBUG 11568 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:18:36.283  INFO 11568 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:18:36.364  INFO 11568 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/3, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[3, {}])
2020-02-21 17:18:36.365 DEBUG 11568 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:18:36.365 DEBUG 11568 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 3(Integer)
2020-02-21 17:18:36.369 TRACE 11568 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:18:36.369 TRACE 11568 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 5, 34, 1
2020-02-21 17:18:36.371 DEBUG 11568 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:18:36.371 DEBUG 11568 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 34(Integer)
2020-02-21 17:18:36.376 TRACE 11568 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:18:36.376 TRACE 11568 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 34, 后端
2020-02-21 17:18:36.377 DEBUG 11568 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:18:36.378 DEBUG 11568 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:18:36.379 DEBUG 11568 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 3(Integer)
2020-02-21 17:18:36.381 TRACE 11568 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:18:36.381 TRACE 11568 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:18:36.381 TRACE 11568 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 8, Mysql
2020-02-21 17:18:36.381 TRACE 11568 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 17, Hibernate
2020-02-21 17:18:36.382 DEBUG 11568 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 17:18:36.382 DEBUG 11568 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ?; 
2020-02-21 17:18:36.383 DEBUG 11568 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 3(Integer)
2020-02-21 17:18:36.385 DEBUG 11568 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : <====      Total: 0
2020-02-21 17:18:36.385 DEBUG 11568 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:18:36.386  INFO 11568 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 17:19:00.080  INFO 11568 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 17:19:00.081 DEBUG 11568 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:19:00.082 DEBUG 11568 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:19:00.086 TRACE 11568 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:19:00.087 TRACE 11568 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 17, 35, 1
2020-02-21 17:19:00.089 DEBUG 11568 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:19:00.089 DEBUG 11568 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:19:00.103 TRACE 11568 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:19:00.103 TRACE 11568 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:19:00.104 DEBUG 11568 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:19:00.104 DEBUG 11568 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:19:00.105 DEBUG 11568 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:19:00.107 TRACE 11568 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:19:00.107 TRACE 11568 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:19:00.107 TRACE 11568 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:19:00.107 DEBUG 11568 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:19:00.108 DEBUG 11568 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ?; 
2020-02-21 17:19:00.108 DEBUG 11568 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:19:00.110 TRACE 11568 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:19:00.110 TRACE 11568 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:19:00.111 DEBUG 11568 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:19:00.111 DEBUG 11568 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:19:00.113 TRACE 11568 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:19:00.113 TRACE 11568 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:19:00.114 TRACE 11568 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:19:00.114 DEBUG 11568 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:19:00.115 TRACE 11568 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : <====        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:19:00.117 DEBUG 11568 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.queryParentComment   : ======>  Preparing: Select * from t_comment where id = ? 
2020-02-21 17:19:00.121 DEBUG 11568 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.queryParentComment   : ======> Parameters: 1(Integer)
2020-02-21 17:19:00.124 TRACE 11568 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.queryParentComment   : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:19:00.125 TRACE 11568 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.queryParentComment   : <======        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:19:00.125 DEBUG 11568 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.queryParentComment   : <======      Total: 1
2020-02-21 17:19:00.126 DEBUG 11568 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:19:00.126 DEBUG 11568 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 2(Integer)
2020-02-21 17:19:00.129 DEBUG 11568 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======      Total: 0
2020-02-21 17:19:00.129 TRACE 11568 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : <====        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:19:00.130 DEBUG 11568 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:19:00.131 DEBUG 11568 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 3(Integer)
2020-02-21 17:19:00.132 DEBUG 11568 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======      Total: 0
2020-02-21 17:19:00.135 DEBUG 11568 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : <====      Total: 3
2020-02-21 17:19:00.137 DEBUG 11568 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:19:00.139 DEBUG 11568 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:19:00.139 DEBUG 11568 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 17:19:00.144 DEBUG 11568 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:19:00.148  INFO 11568 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 17:19:00.344  INFO 11568 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:19:00.345 DEBUG 11568 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:19:00.346 DEBUG 11568 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:19:00.348 TRACE 11568 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:19:00.348 TRACE 11568 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:19:00.354 TRACE 11568 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:19:00.355 TRACE 11568 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:19:00.355 DEBUG 11568 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:19:00.356  INFO 11568 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:19:00.464  INFO 11568 --- [http-nio-8080-exec-7] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 17:19:00.465 DEBUG 11568 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:19:00.465 DEBUG 11568 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:19:00.471 TRACE 11568 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:19:00.471 TRACE 11568 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 18, 35, 1
2020-02-21 17:19:00.473 DEBUG 11568 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:19:00.473 DEBUG 11568 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:19:00.474 TRACE 11568 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:19:00.475 TRACE 11568 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:19:00.475 DEBUG 11568 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:19:00.475 DEBUG 11568 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:19:00.476 DEBUG 11568 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:19:00.478 TRACE 11568 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:19:00.478 TRACE 11568 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:19:00.479 TRACE 11568 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:19:00.479 DEBUG 11568 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:19:00.480 DEBUG 11568 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ?; 
2020-02-21 17:19:00.480 DEBUG 11568 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:19:00.482 TRACE 11568 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:19:00.482 TRACE 11568 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:19:00.485 DEBUG 11568 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:19:00.487 DEBUG 11568 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:19:00.490 TRACE 11568 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:19:00.490 TRACE 11568 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:19:00.491 TRACE 11568 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:19:00.492 DEBUG 11568 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:19:00.492 TRACE 11568 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : <====        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:19:00.493 DEBUG 11568 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.queryParentComment   : ======>  Preparing: Select * from t_comment where id = ? 
2020-02-21 17:19:00.493 DEBUG 11568 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.queryParentComment   : ======> Parameters: 1(Integer)
2020-02-21 17:19:00.495 TRACE 11568 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.queryParentComment   : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:19:00.496 TRACE 11568 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.queryParentComment   : <======        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:19:00.496 DEBUG 11568 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.queryParentComment   : <======      Total: 1
2020-02-21 17:19:00.497 DEBUG 11568 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:19:00.497 DEBUG 11568 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 2(Integer)
2020-02-21 17:19:00.500 DEBUG 11568 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : <======      Total: 0
2020-02-21 17:19:00.504 TRACE 11568 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : <====        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:19:00.505 DEBUG 11568 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:19:00.506 DEBUG 11568 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 3(Integer)
2020-02-21 17:19:00.508 DEBUG 11568 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : <======      Total: 0
2020-02-21 17:19:00.509 DEBUG 11568 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : <====      Total: 3
2020-02-21 17:19:00.510 DEBUG 11568 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:19:00.510  INFO 11568 --- [http-nio-8080-exec-7] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 17:19:00.544 ERROR 11568 --- [http-nio-8080-exec-7] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-7] Exception processing template "public/blog::[commentList]": An error happened during template parsing (template: "class path resource [templates/public/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/public/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Could not parse as expression: "${}" (template: "public/blog" - line 89, col 54)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as expression: "${}" (template: "public/blog" - line 89, col 54)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:131)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:62)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:44)
	at org.thymeleaf.engine.EngineEventUtils.parseAttributeExpression(EngineEventUtils.java:220)
	at org.thymeleaf.engine.EngineEventUtils.computeAttributeExpression(EngineEventUtils.java:207)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:125)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.select.BlockSelectorMarkupHandler.handleCloseElementEnd(BlockSelectorMarkupHandler.java:1178)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted

2020-02-21 17:19:00.547 ERROR 11568 --- [http-nio-8080-exec-7] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/public/blog.html]")] with root cause

org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as expression: "${}" (template: "public/blog" - line 89, col 54)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:131)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:62)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:44)
	at org.thymeleaf.engine.EngineEventUtils.parseAttributeExpression(EngineEventUtils.java:220)
	at org.thymeleaf.engine.EngineEventUtils.computeAttributeExpression(EngineEventUtils.java:207)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:125)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.select.BlockSelectorMarkupHandler.handleCloseElementEnd(BlockSelectorMarkupHandler.java:1178)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-21 17:21:49.935  INFO 11568 --- [Thread-14] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 17:21:49.935  INFO 11568 --- [Thread-14] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:21:49.951  INFO 11568 --- [Thread-14] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-02-21 17:21:50.864  INFO 11568 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 11568 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:21:50.864 DEBUG 11568 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:21:50.865  INFO 11568 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:21:51.408  INFO 11568 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:21:51.409  INFO 11568 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:21:51.427  INFO 11568 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 18ms. Found 0 JDBC repository interfaces.
2020-02-21 17:21:51.434  INFO 11568 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:21:51.434  INFO 11568 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:21:51.442  INFO 11568 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7ms. Found 0 JPA repository interfaces.
2020-02-21 17:21:51.599  INFO 11568 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:23:33.778  INFO 13892 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 13892 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:23:33.782 DEBUG 13892 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:23:33.783  INFO 13892 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:23:33.871  INFO 13892 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 17:23:33.872  INFO 13892 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 17:23:33.872  INFO 13892 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 17:23:35.149  INFO 13892 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:23:35.150  INFO 13892 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:23:35.184  INFO 13892 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 28ms. Found 0 JDBC repository interfaces.
2020-02-21 17:23:35.200  INFO 13892 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:23:35.200  INFO 13892 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:23:35.217  INFO 13892 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10ms. Found 0 JPA repository interfaces.
2020-02-21 17:23:35.821  INFO 13892 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:23:37.313  INFO 13892 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:23:37.341  INFO 13892 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:23:37.342  INFO 13892 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:23:37.639  INFO 13720 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 13720 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:23:37.646 DEBUG 13720 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:23:37.647  INFO 13720 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:23:37.719  INFO 13892 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:23:37.720  INFO 13892 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3848 ms
2020-02-21 17:23:37.737  INFO 13720 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 17:23:37.737  INFO 13720 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 17:23:37.738  INFO 13720 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 17:23:38.196  INFO 13892 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:23:38.270  INFO 13892 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 17:23:38.441  INFO 13892 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 17:23:38.598 ERROR 13892 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:23:38.613  INFO 13892 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 17:23:38.723  INFO 13720 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:23:38.738  INFO 13720 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:23:38.754  INFO 13720 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 23ms. Found 0 JDBC repository interfaces.
2020-02-21 17:23:38.769  INFO 13892 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:23:38.769  INFO 13720 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:23:38.769  INFO 13720 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:23:38.785  INFO 13720 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5ms. Found 0 JPA repository interfaces.
2020-02-21 17:23:39.301  INFO 13720 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:23:40.158  INFO 13720 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:23:40.170  INFO 13720 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:23:40.171  INFO 13720 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:23:40.287  INFO 13892 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:23:40.296  INFO 13892 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:23:40.333  INFO 13892 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:23:40.351  INFO 13720 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:23:40.351  INFO 13720 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2613 ms
2020-02-21 17:23:40.791  INFO 13720 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:23:40.804  WARN 13892 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:23:40.878  INFO 13720 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 17:23:41.042  INFO 13720 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 17:23:41.073  INFO 13892 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:23:41.167 ERROR 13720 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:23:41.182  INFO 13720 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 17:23:41.330  INFO 13720 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:23:41.882  INFO 13892 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:23:41.885  INFO 13892 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 9.395 seconds (JVM running for 11.106)
2020-02-21 17:23:42.573  INFO 13720 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:23:42.583  INFO 13720 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:23:42.625  WARN 13720 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : Unable to start LiveReload server
2020-02-21 17:23:43.017  WARN 13720 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:23:43.345  INFO 13720 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:23:44.003  INFO 13720 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2020-02-21 17:23:44.009  INFO 13720 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-02-21 17:23:44.015 ERROR 13720 --- [restartedMain] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8080 was already in use.

Action:

Identify and stop the process that's listening on port 8080 or configure this application to listen on another port.

2020-02-21 17:23:44.018  INFO 13720 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 17:23:44.019  INFO 13720 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:23:44.025  INFO 13720 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-02-21 17:23:57.560  INFO 5308 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 5308 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:23:57.564 DEBUG 5308 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:23:57.564  INFO 5308 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:23:57.717  INFO 5308 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 17:23:57.718  INFO 5308 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 17:23:57.718  INFO 5308 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 17:23:58.466  INFO 5308 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:23:58.466  INFO 5308 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:23:58.488  INFO 5308 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 18ms. Found 0 JDBC repository interfaces.
2020-02-21 17:23:58.499  INFO 5308 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:23:58.499  INFO 5308 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:23:58.508  INFO 5308 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4ms. Found 0 JPA repository interfaces.
2020-02-21 17:23:58.838  INFO 5308 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:23:59.297  INFO 5308 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:23:59.306  INFO 5308 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:23:59.306  INFO 5308 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:23:59.455  INFO 5308 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:23:59.455  INFO 5308 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1737 ms
2020-02-21 17:23:59.791  INFO 5308 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:24:00.004  INFO 5308 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 17:24:00.240  INFO 5308 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 17:24:00.352 ERROR 5308 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:24:00.358  INFO 5308 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 17:24:00.475  INFO 5308 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:24:01.355  INFO 5308 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:24:01.362  INFO 5308 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:24:01.390  INFO 5308 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:24:01.707  WARN 5308 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:24:01.919  INFO 5308 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:24:02.568  INFO 5308 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:24:02.571  INFO 5308 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 6.231 seconds (JVM running for 7.856)
2020-02-21 17:24:05.711  INFO 5308 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 17:24:05.711  INFO 5308 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 17:24:05.725  INFO 5308 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2020-02-21 17:24:05.834  INFO 5308 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 17:24:05.867 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:24:06.121 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:24:06.137 TRACE 5308 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:24:06.139 TRACE 5308 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 18, 35, 1
2020-02-21 17:24:06.146 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:24:06.146 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:24:06.147 TRACE 5308 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:24:06.148 TRACE 5308 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:24:06.148 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:24:06.149 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:24:06.149 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:24:06.150 TRACE 5308 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:24:06.150 TRACE 5308 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:24:06.151 TRACE 5308 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:24:06.151 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:24:06.151 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:24:06.151 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:24:06.152 TRACE 5308 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:24:06.153 TRACE 5308 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:24:06.153 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:24:06.154 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:24:06.155 TRACE 5308 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:24:06.155 TRACE 5308 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:24:06.156 TRACE 5308 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:24:06.157 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:24:06.157 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:24:06.157 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:24:06.160 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:24:06.161 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 17:24:06.166 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:24:06.218  INFO 5308 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 17:24:06.899  INFO 5308 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:24:06.906 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:24:06.907 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:24:06.913 TRACE 5308 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:24:06.914 TRACE 5308 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:24:06.915 TRACE 5308 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:24:06.915 TRACE 5308 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:24:06.916 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:24:06.917  INFO 5308 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:24:06.993  INFO 5308 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 17:24:06.995 DEBUG 5308 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:24:06.995 DEBUG 5308 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:24:06.997 TRACE 5308 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:24:06.998 TRACE 5308 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 19, 35, 1
2020-02-21 17:24:06.999 DEBUG 5308 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:24:07.000 DEBUG 5308 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:24:07.001 TRACE 5308 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:24:07.002 TRACE 5308 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:24:07.002 DEBUG 5308 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:24:07.003 DEBUG 5308 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:24:07.004 DEBUG 5308 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:24:07.005 TRACE 5308 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:24:07.005 TRACE 5308 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:24:07.006 TRACE 5308 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:24:07.006 DEBUG 5308 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:24:07.007 DEBUG 5308 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:24:07.009 DEBUG 5308 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:24:07.014 TRACE 5308 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:24:07.015 TRACE 5308 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:24:07.016 DEBUG 5308 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:24:07.016 DEBUG 5308 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:24:07.018 TRACE 5308 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:24:07.019 TRACE 5308 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:24:07.020 TRACE 5308 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:24:07.020 DEBUG 5308 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:24:07.021 DEBUG 5308 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:24:07.022 DEBUG 5308 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:24:07.023  INFO 5308 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 17:24:07.149 ERROR 5308 --- [http-nio-8080-exec-6] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-6] Exception processing template "public/blog::[commentList]": An error happened during template parsing (template: "class path resource [templates/public/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/public/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "comment.nickname" (template: "public/blog" - line 90, col 57)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "comment.nickname" (template: "public/blog" - line 90, col 57)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.select.BlockSelectorMarkupHandler.handleCloseElementEnd(BlockSelectorMarkupHandler.java:1178)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'nickname' cannot be found on object of type 'personal.personalblogreturn.pojo.Comment' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 76 common frames omitted

2020-02-21 17:24:07.153 ERROR 5308 --- [http-nio-8080-exec-6] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/public/blog.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'nickname' cannot be found on object of type 'personal.personalblogreturn.pojo.Comment' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.select.BlockSelectorMarkupHandler.handleCloseElementEnd(BlockSelectorMarkupHandler.java:1178)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-21 17:25:00.538  INFO 5308 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 17:25:00.539 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:25:00.539 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:25:00.572 TRACE 5308 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:25:00.572 TRACE 5308 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 19, 35, 1
2020-02-21 17:25:00.573 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:25:00.574 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:25:00.582 TRACE 5308 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:25:00.582 TRACE 5308 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:25:00.582 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:25:00.583 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:25:00.583 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:25:00.594 TRACE 5308 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:25:00.596 TRACE 5308 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:25:00.596 TRACE 5308 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:25:00.597 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:25:00.598 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:25:00.599 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:25:00.603 TRACE 5308 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:25:00.604 TRACE 5308 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:25:00.604 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:25:00.605 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:25:00.626 TRACE 5308 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:25:00.626 TRACE 5308 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:25:00.629 TRACE 5308 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:25:00.629 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:25:00.630 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:25:00.631 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:25:00.632 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:25:00.633 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 17:25:00.656 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:25:00.659  INFO 5308 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 17:25:00.970  INFO 5308 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:25:00.971 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:25:00.971 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:25:00.974 TRACE 5308 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:25:00.975 TRACE 5308 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:25:00.976 TRACE 5308 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:25:00.978 TRACE 5308 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:25:00.980 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:25:00.981  INFO 5308 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:25:01.369  INFO 5308 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 17:25:01.369 DEBUG 5308 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:25:01.369 DEBUG 5308 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:25:01.407 TRACE 5308 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:25:01.408 TRACE 5308 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 20, 35, 1
2020-02-21 17:25:01.409 DEBUG 5308 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:25:01.409 DEBUG 5308 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:25:01.451 TRACE 5308 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:25:01.451 TRACE 5308 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:25:01.451 DEBUG 5308 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:25:01.452 DEBUG 5308 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:25:01.454 DEBUG 5308 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:25:01.465 TRACE 5308 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:25:01.465 TRACE 5308 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:25:01.466 TRACE 5308 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:25:01.466 DEBUG 5308 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:25:01.466 DEBUG 5308 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:25:01.467 DEBUG 5308 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:25:01.469 TRACE 5308 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:25:01.469 TRACE 5308 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:25:01.470 DEBUG 5308 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:25:01.471 DEBUG 5308 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:25:01.473 TRACE 5308 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:25:01.473 TRACE 5308 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:25:01.474 TRACE 5308 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:25:01.474 DEBUG 5308 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:25:01.474 DEBUG 5308 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:25:01.475 DEBUG 5308 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:25:01.475  INFO 5308 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 17:25:01.481 ERROR 5308 --- [http-nio-8080-exec-4] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-4] Exception processing template "public/blog::[commentList]": An error happened during template parsing (template: "class path resource [templates/public/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/public/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "comment.nickname" (template: "public/blog" - line 90, col 57)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "comment.nickname" (template: "public/blog" - line 90, col 57)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.select.BlockSelectorMarkupHandler.handleCloseElementEnd(BlockSelectorMarkupHandler.java:1178)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'nickname' cannot be found on object of type 'personal.personalblogreturn.pojo.Comment' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 76 common frames omitted

2020-02-21 17:25:01.482 ERROR 5308 --- [http-nio-8080-exec-4] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/public/blog.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'nickname' cannot be found on object of type 'personal.personalblogreturn.pojo.Comment' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.select.BlockSelectorMarkupHandler.handleCloseElementEnd(BlockSelectorMarkupHandler.java:1178)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-21 17:25:09.282  INFO 5308 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 17:25:09.282 DEBUG 5308 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:25:09.283 DEBUG 5308 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:25:09.287 TRACE 5308 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:25:09.287 TRACE 5308 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 20, 35, 1
2020-02-21 17:25:09.288 DEBUG 5308 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:25:09.289 DEBUG 5308 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:25:09.292 TRACE 5308 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:25:09.292 TRACE 5308 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:25:09.293 DEBUG 5308 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:25:09.295 DEBUG 5308 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:25:09.295 DEBUG 5308 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:25:09.298 TRACE 5308 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:25:09.298 TRACE 5308 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:25:09.299 TRACE 5308 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:25:09.299 DEBUG 5308 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:25:09.300 DEBUG 5308 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:25:09.300 DEBUG 5308 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:25:09.302 TRACE 5308 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:25:09.303 TRACE 5308 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:25:09.304 DEBUG 5308 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:25:09.306 DEBUG 5308 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:25:09.308 TRACE 5308 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:25:09.308 TRACE 5308 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:25:09.309 TRACE 5308 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:25:09.312 DEBUG 5308 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:25:09.313 DEBUG 5308 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:25:09.313 DEBUG 5308 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:25:09.314 DEBUG 5308 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:25:09.314 DEBUG 5308 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 17:25:09.320 DEBUG 5308 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:25:09.322  INFO 5308 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 17:25:09.474  INFO 5308 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:25:09.479 DEBUG 5308 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:25:09.480 DEBUG 5308 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:25:09.481 TRACE 5308 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:25:09.482 TRACE 5308 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:25:09.482 TRACE 5308 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:25:09.483 TRACE 5308 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:25:09.483 DEBUG 5308 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:25:09.483  INFO 5308 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:25:09.655  INFO 5308 --- [http-nio-8080-exec-7] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 17:25:09.656 DEBUG 5308 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:25:09.656 DEBUG 5308 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:25:09.658 TRACE 5308 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:25:09.658 TRACE 5308 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 21, 35, 1
2020-02-21 17:25:09.663 DEBUG 5308 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:25:09.664 DEBUG 5308 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:25:09.665 TRACE 5308 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:25:09.666 TRACE 5308 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:25:09.666 DEBUG 5308 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:25:09.666 DEBUG 5308 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:25:09.667 DEBUG 5308 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:25:09.668 TRACE 5308 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:25:09.669 TRACE 5308 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:25:09.669 TRACE 5308 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:25:09.669 DEBUG 5308 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:25:09.670 DEBUG 5308 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:25:09.670 DEBUG 5308 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:25:09.672 TRACE 5308 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:25:09.672 TRACE 5308 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:25:09.674 DEBUG 5308 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:25:09.674 DEBUG 5308 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:25:09.680 TRACE 5308 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:25:09.681 TRACE 5308 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:25:09.682 TRACE 5308 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:25:09.682 DEBUG 5308 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:25:09.682 DEBUG 5308 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:25:09.683 DEBUG 5308 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:25:09.683  INFO 5308 --- [http-nio-8080-exec-7] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 17:25:09.688 ERROR 5308 --- [http-nio-8080-exec-7] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-7] Exception processing template "public/blog::[commentList]": An error happened during template parsing (template: "class path resource [templates/public/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/public/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "comment.nickname" (template: "public/blog" - line 90, col 57)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "comment.nickname" (template: "public/blog" - line 90, col 57)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.select.BlockSelectorMarkupHandler.handleCloseElementEnd(BlockSelectorMarkupHandler.java:1178)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'nickname' cannot be found on object of type 'personal.personalblogreturn.pojo.Comment' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 76 common frames omitted

2020-02-21 17:25:09.697 ERROR 5308 --- [http-nio-8080-exec-7] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/public/blog.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'nickname' cannot be found on object of type 'personal.personalblogreturn.pojo.Comment' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:144)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.select.BlockSelectorMarkupHandler.handleCloseElementEnd(BlockSelectorMarkupHandler.java:1178)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-21 17:25:37.447  INFO 5308 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 17:25:37.448 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:25:37.449 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:25:37.459 TRACE 5308 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:25:37.460 TRACE 5308 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 21, 35, 1
2020-02-21 17:25:37.466 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:25:37.467 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:25:37.480 TRACE 5308 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:25:37.480 TRACE 5308 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:25:37.480 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:25:37.480 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:25:37.481 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:25:37.483 TRACE 5308 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:25:37.483 TRACE 5308 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:25:37.483 TRACE 5308 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:25:37.484 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:25:37.484 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:25:37.484 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:25:37.490 TRACE 5308 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:25:37.490 TRACE 5308 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:25:37.491 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:25:37.492 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:25:37.494 TRACE 5308 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:25:37.494 TRACE 5308 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:25:37.495 TRACE 5308 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:25:37.495 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:25:37.495 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:25:37.495 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:25:37.496 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:25:37.496 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 17:25:37.504 DEBUG 5308 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:25:37.506  INFO 5308 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 17:25:37.757  INFO 5308 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:25:37.757 DEBUG 5308 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:25:37.758 DEBUG 5308 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:25:37.762 TRACE 5308 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:25:37.762 TRACE 5308 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:25:37.763 TRACE 5308 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:25:37.764 TRACE 5308 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:25:37.765 DEBUG 5308 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:25:37.765  INFO 5308 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:25:38.031  INFO 5308 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 17:25:38.032 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:25:38.032 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:25:38.045 TRACE 5308 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:25:38.045 TRACE 5308 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 22, 35, 1
2020-02-21 17:25:38.046 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:25:38.047 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:25:38.053 TRACE 5308 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:25:38.055 TRACE 5308 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:25:38.057 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:25:38.058 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:25:38.058 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:25:38.064 TRACE 5308 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:25:38.064 TRACE 5308 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:25:38.065 TRACE 5308 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:25:38.066 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:25:38.066 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:25:38.067 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:25:38.074 TRACE 5308 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:25:38.075 TRACE 5308 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:25:38.076 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:25:38.076 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:25:38.079 TRACE 5308 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:25:38.079 TRACE 5308 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:25:38.080 TRACE 5308 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:25:38.080 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:25:38.080 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:25:38.081 DEBUG 5308 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:25:38.082  INFO 5308 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 17:31:36.598  INFO 5308 --- [Thread-14] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 17:31:36.598  INFO 5308 --- [Thread-14] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:31:36.614  INFO 5308 --- [Thread-14] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-02-21 17:31:37.631  INFO 5308 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 5308 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:31:37.631 DEBUG 5308 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:31:37.631  INFO 5308 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:31:37.969  INFO 5308 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:31:37.969  INFO 5308 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:31:37.979  INFO 5308 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9ms. Found 0 JDBC repository interfaces.
2020-02-21 17:31:37.982  INFO 5308 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:31:37.982  INFO 5308 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:31:37.988  INFO 5308 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5ms. Found 0 JPA repository interfaces.
2020-02-21 17:31:38.086  INFO 5308 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:31:38.192  WARN 5308 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 17:31:38.318  INFO 5308 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:31:38.319  INFO 5308 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:31:38.319  INFO 5308 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:31:38.364  INFO 5308 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:31:38.364  INFO 5308 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 718 ms
2020-02-21 17:31:38.529  INFO 5308 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:31:38.537 ERROR 5308 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:31:38.540  INFO 5308 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-02-21 17:31:38.548  INFO 5308 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:31:38.891  INFO 5308 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:31:38.891  INFO 5308 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:31:38.915  INFO 5308 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:31:39.171  WARN 5308 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:31:39.442  INFO 5308 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:31:40.292  INFO 5308 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:31:40.292  INFO 5308 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 2.715 seconds (JVM running for 465.577)
2020-02-21 17:31:40.296  INFO 5308 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 17:32:06.889  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 524 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:32:06.905 DEBUG 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:32:06.905  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:32:06.952  INFO 524 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 17:32:06.952  INFO 524 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 17:32:06.952  INFO 524 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 17:32:08.085  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:32:08.086  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:32:08.133  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 34ms. Found 0 JDBC repository interfaces.
2020-02-21 17:32:08.162  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:32:08.163  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:32:08.180  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10ms. Found 0 JPA repository interfaces.
2020-02-21 17:32:08.810  INFO 524 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:32:09.450  INFO 524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:32:09.462  INFO 524 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:32:09.463  INFO 524 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:32:09.688  INFO 524 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:32:09.688  INFO 524 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2736 ms
2020-02-21 17:32:10.234  INFO 524 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:32:10.343  INFO 524 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 17:32:10.468  INFO 524 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 17:32:10.577 ERROR 524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:32:10.577  INFO 524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 17:32:10.734  INFO 524 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:32:12.378  INFO 524 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:32:12.387  INFO 524 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:32:12.424  INFO 524 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:32:12.739  WARN 524 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:32:12.942  INFO 524 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:32:13.492  INFO 524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:32:13.494  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 7.285 seconds (JVM running for 9.133)
2020-02-21 17:32:20.068  INFO 524 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 17:32:20.068  INFO 524 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 17:32:20.082  INFO 524 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2020-02-21 17:32:20.179  INFO 524 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 17:32:20.210 DEBUG 524 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:32:20.469 DEBUG 524 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:32:20.491 TRACE 524 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:32:20.495 TRACE 524 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 22, 35, 1
2020-02-21 17:32:20.499 DEBUG 524 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:32:20.499 DEBUG 524 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:32:20.500 TRACE 524 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:32:20.500 TRACE 524 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:32:20.501 DEBUG 524 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:32:20.502 DEBUG 524 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:32:20.502 DEBUG 524 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:32:20.504 TRACE 524 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:32:20.505 TRACE 524 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:32:20.506 TRACE 524 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:32:20.507 DEBUG 524 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:32:20.507 DEBUG 524 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:32:20.508 DEBUG 524 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:32:20.510 TRACE 524 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:32:20.511 TRACE 524 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:32:20.511 DEBUG 524 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:32:20.512 DEBUG 524 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:32:20.513 TRACE 524 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:32:20.513 TRACE 524 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:32:20.514 TRACE 524 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:32:20.514 DEBUG 524 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:32:20.515 DEBUG 524 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:32:20.515 DEBUG 524 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:32:20.517 DEBUG 524 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:32:20.517 DEBUG 524 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 17:32:20.523 DEBUG 524 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:32:20.595  INFO 524 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 17:32:21.297  INFO 524 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:32:21.307 DEBUG 524 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:32:21.308 DEBUG 524 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:32:21.309 TRACE 524 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:32:21.310 TRACE 524 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:32:21.312 TRACE 524 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:32:21.312 TRACE 524 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:32:21.314 DEBUG 524 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:32:21.314  INFO 524 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:32:21.384  INFO 524 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 17:32:21.385 DEBUG 524 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:32:21.385 DEBUG 524 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:32:21.390 TRACE 524 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:32:21.390 TRACE 524 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 23, 35, 1
2020-02-21 17:32:21.392 DEBUG 524 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:32:21.393 DEBUG 524 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:32:21.394 TRACE 524 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:32:21.395 TRACE 524 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:32:21.395 DEBUG 524 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:32:21.396 DEBUG 524 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:32:21.396 DEBUG 524 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:32:21.397 TRACE 524 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:32:21.398 TRACE 524 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:32:21.398 TRACE 524 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:32:21.398 DEBUG 524 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:32:21.399 DEBUG 524 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:32:21.399 DEBUG 524 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:32:21.401 TRACE 524 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:32:21.401 TRACE 524 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:32:21.402 DEBUG 524 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:32:21.403 DEBUG 524 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:32:21.406 TRACE 524 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:32:21.407 TRACE 524 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:32:21.408 TRACE 524 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:32:21.409 DEBUG 524 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:32:21.410 DEBUG 524 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:32:21.411 DEBUG 524 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:32:21.412  INFO 524 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 17:32:21.429 ERROR 524 --- [http-nio-8080-exec-2] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-2] Exception processing template "public/blog::[commentList]": An error happened during template parsing (template: "class path resource [templates/public/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/public/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Could not parse as expression: "${${#dates.format(comment.createDate,'yyyy-MM-dd')}" (template: "public/blog" - line 92, col 62)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as expression: "${${#dates.format(comment.createDate,'yyyy-MM-dd')}" (template: "public/blog" - line 92, col 62)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:131)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:62)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:44)
	at org.thymeleaf.engine.EngineEventUtils.parseAttributeExpression(EngineEventUtils.java:220)
	at org.thymeleaf.engine.EngineEventUtils.computeAttributeExpression(EngineEventUtils.java:207)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:125)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.select.BlockSelectorMarkupHandler.handleCloseElementEnd(BlockSelectorMarkupHandler.java:1178)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted

2020-02-21 17:32:21.440 ERROR 524 --- [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/public/blog.html]")] with root cause

org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as expression: "${${#dates.format(comment.createDate,'yyyy-MM-dd')}" (template: "public/blog" - line 92, col 62)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:131)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:62)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:44)
	at org.thymeleaf.engine.EngineEventUtils.parseAttributeExpression(EngineEventUtils.java:220)
	at org.thymeleaf.engine.EngineEventUtils.computeAttributeExpression(EngineEventUtils.java:207)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:125)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.select.BlockSelectorMarkupHandler.handleCloseElementEnd(BlockSelectorMarkupHandler.java:1178)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-21 17:33:13.863  INFO 524 --- [Thread-17] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 17:33:13.878  INFO 524 --- [Thread-17] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:33:13.878  INFO 524 --- [Thread-17] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-02-21 17:33:14.692  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 524 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:33:14.693 DEBUG 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:33:14.693  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:33:15.215  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:33:15.215  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:33:15.226  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 11ms. Found 0 JDBC repository interfaces.
2020-02-21 17:33:15.231  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:33:15.231  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:33:15.236  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4ms. Found 0 JPA repository interfaces.
2020-02-21 17:33:15.333  INFO 524 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:33:15.441  WARN 524 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 17:33:15.543  INFO 524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:33:15.543  INFO 524 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:33:15.543  INFO 524 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:33:15.590  INFO 524 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:33:15.590  INFO 524 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 892 ms
2020-02-21 17:33:15.769  INFO 524 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:33:15.776 ERROR 524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:33:15.778  INFO 524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-02-21 17:33:15.787  INFO 524 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:33:16.100  INFO 524 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:33:16.100  INFO 524 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:33:16.118  INFO 524 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:33:16.344  WARN 524 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:33:16.537  INFO 524 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:33:17.488  INFO 524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:33:17.489  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 2.919 seconds (JVM running for 73.128)
2020-02-21 17:33:17.493  INFO 524 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 17:33:41.649  INFO 524 --- [Thread-27] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 17:33:41.651  INFO 524 --- [Thread-27] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:33:41.652  INFO 524 --- [Thread-27] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} closed
2020-02-21 17:33:42.623  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 524 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:33:42.624 DEBUG 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:33:42.624  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:33:42.984  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:33:42.984  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:33:42.990  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5ms. Found 0 JDBC repository interfaces.
2020-02-21 17:33:42.994  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:33:42.994  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:33:42.998  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3ms. Found 0 JPA repository interfaces.
2020-02-21 17:33:43.048  INFO 524 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:33:43.122  WARN 524 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 17:33:43.193  INFO 524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:33:43.194  INFO 524 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:33:43.194  INFO 524 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:33:43.236  INFO 524 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:33:43.236  INFO 524 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 607 ms
2020-02-21 17:33:43.406  INFO 524 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:33:43.413 ERROR 524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:33:43.416  INFO 524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-3} inited
2020-02-21 17:33:43.424  INFO 524 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:33:43.794  INFO 524 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:33:43.794  INFO 524 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:33:43.812  INFO 524 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:33:44.028  WARN 524 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:33:44.207  INFO 524 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:33:44.691  INFO 524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:33:44.691  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 2.135 seconds (JVM running for 100.333)
2020-02-21 17:33:44.691  INFO 524 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 17:33:47.619  INFO 524 --- [Thread-32] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 17:33:47.619  INFO 524 --- [Thread-32] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:33:47.621  INFO 524 --- [Thread-32] com.alibaba.druid.pool.DruidDataSource   : {dataSource-3} closed
2020-02-21 17:33:48.285  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 524 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:33:48.285 DEBUG 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:33:48.285  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:33:48.879  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:33:48.879  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:33:48.894  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9ms. Found 0 JDBC repository interfaces.
2020-02-21 17:33:48.941  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:33:48.941  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:33:48.941  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5ms. Found 0 JPA repository interfaces.
2020-02-21 17:33:49.207  INFO 524 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:33:49.397  WARN 524 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 17:33:49.522  INFO 524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:33:49.523  INFO 524 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:33:49.524  INFO 524 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:33:49.571  INFO 524 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:33:49.571  INFO 524 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1286 ms
2020-02-21 17:33:49.719  INFO 524 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:33:49.725 ERROR 524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:33:49.726  INFO 524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-4} inited
2020-02-21 17:33:49.741  INFO 524 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:33:50.000  INFO 524 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:33:50.000  INFO 524 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:33:50.021  INFO 524 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:33:50.236  WARN 524 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:33:50.432  INFO 524 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:33:51.037  INFO 524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:33:51.037  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 2.794 seconds (JVM running for 106.676)
2020-02-21 17:33:51.039  INFO 524 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 17:33:53.884  INFO 524 --- [Thread-37] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 17:33:53.885  INFO 524 --- [Thread-37] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:33:53.887  INFO 524 --- [Thread-37] com.alibaba.druid.pool.DruidDataSource   : {dataSource-4} closed
2020-02-21 17:33:54.523  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 524 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:33:54.523 DEBUG 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:33:54.523  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:33:55.007  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:33:55.007  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:33:55.019  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 11ms. Found 0 JDBC repository interfaces.
2020-02-21 17:33:55.027  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:33:55.027  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:33:55.037  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10ms. Found 0 JPA repository interfaces.
2020-02-21 17:33:55.179  INFO 524 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:33:55.408  WARN 524 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 17:33:55.589  INFO 524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:33:55.591  INFO 524 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:33:55.591  INFO 524 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:33:55.661  INFO 524 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:33:55.661  INFO 524 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1133 ms
2020-02-21 17:33:55.803  INFO 524 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:33:55.808 ERROR 524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:33:55.810  INFO 524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-5} inited
2020-02-21 17:33:55.816  INFO 524 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:33:56.110  INFO 524 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:33:56.110  INFO 524 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:33:56.126  INFO 524 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:33:56.298  WARN 524 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:33:56.529  INFO 524 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:33:57.174  INFO 524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:33:57.175  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 2.702 seconds (JVM running for 112.813)
2020-02-21 17:33:57.185  INFO 524 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 17:34:11.709  INFO 524 --- [Thread-42] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 17:34:11.710  INFO 524 --- [Thread-42] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:34:11.712  INFO 524 --- [Thread-42] com.alibaba.druid.pool.DruidDataSource   : {dataSource-5} closed
2020-02-21 17:34:13.042  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 524 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:34:13.043 DEBUG 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:34:13.043  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:34:13.589  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:34:13.589  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:34:13.604  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14ms. Found 0 JDBC repository interfaces.
2020-02-21 17:34:13.610  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:34:13.611  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:34:13.616  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5ms. Found 0 JPA repository interfaces.
2020-02-21 17:34:13.737  INFO 524 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:34:13.828  WARN 524 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 17:34:13.913  INFO 524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:34:13.914  INFO 524 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:34:13.914  INFO 524 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:34:13.955  INFO 524 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:34:13.955  INFO 524 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 906 ms
2020-02-21 17:34:14.160  INFO 524 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:34:14.171 ERROR 524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:34:14.173  INFO 524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-6} inited
2020-02-21 17:34:14.182  INFO 524 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:34:14.506  INFO 524 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:34:14.507  INFO 524 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:34:14.525  INFO 524 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:34:14.798  WARN 524 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:34:15.049  INFO 524 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:34:15.756  INFO 524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:34:15.757  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 2.852 seconds (JVM running for 131.396)
2020-02-21 17:34:15.759  INFO 524 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 17:34:19.875  INFO 524 --- [Thread-47] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 17:34:19.876  INFO 524 --- [Thread-47] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:34:19.877  INFO 524 --- [Thread-47] com.alibaba.druid.pool.DruidDataSource   : {dataSource-6} closed
2020-02-21 17:34:21.191  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 524 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:34:21.191 DEBUG 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:34:21.191  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:34:21.600  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:34:21.600  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:34:21.631  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 12ms. Found 0 JDBC repository interfaces.
2020-02-21 17:34:21.631  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:34:21.631  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:34:21.631  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6ms. Found 0 JPA repository interfaces.
2020-02-21 17:34:21.741  INFO 524 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:34:21.897  WARN 524 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 17:34:22.100  INFO 524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:34:22.100  INFO 524 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:34:22.100  INFO 524 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:34:22.194  INFO 524 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:34:22.194  INFO 524 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1003 ms
2020-02-21 17:34:22.451  INFO 524 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:34:22.457 ERROR 524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:34:22.458  INFO 524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-7} inited
2020-02-21 17:34:22.466  INFO 524 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:34:22.744  INFO 524 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:34:22.744  INFO 524 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:34:22.767  INFO 524 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:34:23.091  WARN 524 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:34:23.332  INFO 524 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:34:24.992  INFO 524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:34:24.992  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 3.847 seconds (JVM running for 140.637)
2020-02-21 17:34:24.992  INFO 524 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 17:34:44.829  INFO 524 --- [Thread-52] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 17:34:44.830  INFO 524 --- [Thread-52] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:34:44.832  INFO 524 --- [Thread-52] com.alibaba.druid.pool.DruidDataSource   : {dataSource-7} closed
2020-02-21 17:34:45.505  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 524 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:34:45.505 DEBUG 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:34:45.505  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:34:45.912  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:34:45.912  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:34:45.918  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6ms. Found 0 JDBC repository interfaces.
2020-02-21 17:34:45.922  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:34:45.922  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:34:45.926  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3ms. Found 0 JPA repository interfaces.
2020-02-21 17:34:45.975  INFO 524 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:34:46.046  WARN 524 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 17:34:46.125  INFO 524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:34:46.126  INFO 524 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:34:46.126  INFO 524 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:34:46.162  INFO 524 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:34:46.162  INFO 524 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 653 ms
2020-02-21 17:34:46.292  INFO 524 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:34:46.297 ERROR 524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:34:46.298  INFO 524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-8} inited
2020-02-21 17:34:46.305  INFO 524 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:34:46.573  INFO 524 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:34:46.573  INFO 524 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:34:46.595  INFO 524 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:34:46.804  WARN 524 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:34:46.972  INFO 524 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:34:47.431  INFO 524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:34:47.432  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 2.005 seconds (JVM running for 163.071)
2020-02-21 17:34:47.434  INFO 524 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 17:35:08.364  INFO 524 --- [Thread-57] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 17:35:08.379  INFO 524 --- [Thread-57] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:35:08.379  INFO 524 --- [Thread-57] com.alibaba.druid.pool.DruidDataSource   : {dataSource-8} closed
2020-02-21 17:35:09.686  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 524 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:35:09.687 DEBUG 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:35:09.687  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:35:10.139  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:35:10.139  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:35:10.151  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 11ms. Found 0 JDBC repository interfaces.
2020-02-21 17:35:10.156  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:35:10.156  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:35:10.164  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7ms. Found 0 JPA repository interfaces.
2020-02-21 17:35:10.210  INFO 524 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:35:10.280  WARN 524 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 17:35:10.351  INFO 524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:35:10.352  INFO 524 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:35:10.391  INFO 524 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:35:10.428  INFO 524 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:35:10.428  INFO 524 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 736 ms
2020-02-21 17:35:10.528  INFO 524 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:35:10.532 ERROR 524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:35:10.533  INFO 524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-9} inited
2020-02-21 17:35:10.538  INFO 524 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:35:10.717  INFO 524 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:35:10.717  INFO 524 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:35:10.729  INFO 524 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:35:10.864  WARN 524 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:35:11.003  INFO 524 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:35:11.621  INFO 524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:35:11.622  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 2.018 seconds (JVM running for 187.261)
2020-02-21 17:35:11.624  INFO 524 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 17:35:13.443  INFO 524 --- [Thread-62] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 17:35:13.444  INFO 524 --- [Thread-62] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:35:13.451  INFO 524 --- [Thread-62] com.alibaba.druid.pool.DruidDataSource   : {dataSource-9} closed
2020-02-21 17:35:14.341  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 524 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:35:14.341 DEBUG 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:35:14.341  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:35:14.610  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:35:14.610  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:35:14.621  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10ms. Found 0 JDBC repository interfaces.
2020-02-21 17:35:14.627  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:35:14.627  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:35:14.632  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4ms. Found 0 JPA repository interfaces.
2020-02-21 17:35:14.721  INFO 524 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:35:14.853  WARN 524 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 17:35:14.962  INFO 524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:35:14.963  INFO 524 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:35:14.963  INFO 524 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:35:15.006  INFO 524 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:35:15.006  INFO 524 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 662 ms
2020-02-21 17:35:15.146  INFO 524 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:35:15.150 ERROR 524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:35:15.150  INFO 524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-10} inited
2020-02-21 17:35:15.156  INFO 524 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:35:15.381  INFO 524 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:35:15.381  INFO 524 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:35:15.400  INFO 524 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:35:15.584  WARN 524 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:35:15.816  INFO 524 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:35:16.665  INFO 524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:35:16.666  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 2.366 seconds (JVM running for 192.304)
2020-02-21 17:35:16.670  INFO 524 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 17:35:22.675  INFO 524 --- [Thread-67] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 17:35:22.676  INFO 524 --- [Thread-67] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:35:22.677  INFO 524 --- [Thread-67] com.alibaba.druid.pool.DruidDataSource   : {dataSource-10} closed
2020-02-21 17:35:23.272  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 524 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:35:23.272 DEBUG 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:35:23.272  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:35:23.712  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:35:23.712  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:35:23.742  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 29ms. Found 0 JDBC repository interfaces.
2020-02-21 17:35:23.748  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:35:23.748  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:35:23.755  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6ms. Found 0 JPA repository interfaces.
2020-02-21 17:35:23.845  INFO 524 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:35:23.990  WARN 524 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 17:35:24.099  INFO 524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:35:24.099  INFO 524 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:35:24.099  INFO 524 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:35:24.146  INFO 524 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:35:24.146  INFO 524 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 868 ms
2020-02-21 17:35:24.349  INFO 524 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:35:24.364 ERROR 524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:35:24.364  INFO 524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-11} inited
2020-02-21 17:35:24.364  INFO 524 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:35:24.661  INFO 524 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:35:24.661  INFO 524 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:35:24.677  INFO 524 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:35:24.942  WARN 524 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:35:25.224  INFO 524 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:35:25.801  INFO 524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:35:25.801  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 2.638 seconds (JVM running for 201.453)
2020-02-21 17:35:25.801  INFO 524 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 17:35:28.634  INFO 524 --- [Thread-72] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 17:35:28.635  INFO 524 --- [Thread-72] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:35:28.637  INFO 524 --- [Thread-72] com.alibaba.druid.pool.DruidDataSource   : {dataSource-11} closed
2020-02-21 17:35:29.389  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 524 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:35:29.389 DEBUG 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:35:29.389  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:35:29.669  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:35:29.669  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:35:29.675  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5ms. Found 0 JDBC repository interfaces.
2020-02-21 17:35:29.677  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:35:29.678  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:35:29.681  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3ms. Found 0 JPA repository interfaces.
2020-02-21 17:35:29.726  INFO 524 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:35:29.794  WARN 524 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 17:35:29.865  INFO 524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:35:29.866  INFO 524 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:35:29.866  INFO 524 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:35:29.902  INFO 524 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:35:29.902  INFO 524 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 510 ms
2020-02-21 17:35:30.002  INFO 524 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:35:30.005 ERROR 524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:35:30.006  INFO 524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-12} inited
2020-02-21 17:35:30.011  INFO 524 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:35:30.190  INFO 524 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:35:30.190  INFO 524 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:35:30.203  INFO 524 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:35:30.316  WARN 524 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:35:30.441  INFO 524 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:35:30.769  INFO 524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:35:30.769  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 1.437 seconds (JVM running for 206.421)
2020-02-21 17:35:30.769  INFO 524 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 17:35:47.420  INFO 524 --- [Thread-77] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 17:35:47.421  INFO 524 --- [Thread-77] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:35:47.423  INFO 524 --- [Thread-77] com.alibaba.druid.pool.DruidDataSource   : {dataSource-12} closed
2020-02-21 17:35:48.199  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 524 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:35:48.199 DEBUG 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:35:48.199  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:35:48.481  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:35:48.481  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:35:48.488  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7ms. Found 0 JDBC repository interfaces.
2020-02-21 17:35:48.494  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:35:48.494  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:35:48.500  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6ms. Found 0 JPA repository interfaces.
2020-02-21 17:35:48.577  INFO 524 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:35:48.697  WARN 524 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 17:35:48.787  INFO 524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:35:48.788  INFO 524 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:35:48.788  INFO 524 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:35:48.830  INFO 524 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:35:48.830  INFO 524 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 628 ms
2020-02-21 17:35:48.994  INFO 524 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:35:48.999 ERROR 524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:35:49.000  INFO 524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-13} inited
2020-02-21 17:35:49.006  INFO 524 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:35:49.207  INFO 524 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:35:49.207  INFO 524 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:35:49.207  INFO 524 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:35:49.379  WARN 524 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:35:49.598  INFO 524 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:35:50.332  INFO 524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:35:50.332  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 2.19 seconds (JVM running for 225.973)
2020-02-21 17:35:50.332  INFO 524 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 17:36:13.494  INFO 524 --- [Thread-82] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 17:36:13.495  INFO 524 --- [Thread-82] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:36:13.496  INFO 524 --- [Thread-82] com.alibaba.druid.pool.DruidDataSource   : {dataSource-13} closed
2020-02-21 17:36:14.030  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 524 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:36:14.030 DEBUG 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:36:14.030  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:36:14.438  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:36:14.438  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:36:14.452  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13ms. Found 0 JDBC repository interfaces.
2020-02-21 17:36:14.457  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:36:14.457  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:36:14.471  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13ms. Found 0 JPA repository interfaces.
2020-02-21 17:36:14.635  INFO 524 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:36:14.800  WARN 524 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 17:36:14.978  INFO 524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:36:14.980  INFO 524 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:36:14.980  INFO 524 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:36:15.043  INFO 524 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:36:15.043  INFO 524 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1011 ms
2020-02-21 17:36:15.232  INFO 524 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:36:15.236 ERROR 524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:36:15.237  INFO 524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-14} inited
2020-02-21 17:36:15.241  INFO 524 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:36:15.409  INFO 524 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:36:15.409  INFO 524 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:36:15.421  INFO 524 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:36:15.551  WARN 524 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:36:15.678  INFO 524 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:36:16.006  INFO 524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:36:16.006  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 2.011 seconds (JVM running for 251.644)
2020-02-21 17:36:16.007  INFO 524 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 17:36:22.918  INFO 524 --- [Thread-87] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 17:36:22.919  INFO 524 --- [Thread-87] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:36:22.920  INFO 524 --- [Thread-87] com.alibaba.druid.pool.DruidDataSource   : {dataSource-14} closed
2020-02-21 17:36:23.369  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 524 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:36:23.369 DEBUG 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:36:23.369  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:36:23.664  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:36:23.664  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:36:23.685  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 21ms. Found 0 JDBC repository interfaces.
2020-02-21 17:36:23.697  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:36:23.697  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:36:23.705  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7ms. Found 0 JPA repository interfaces.
2020-02-21 17:36:23.813  INFO 524 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:36:24.015  WARN 524 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 17:36:24.197  INFO 524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:36:24.197  INFO 524 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:36:24.198  INFO 524 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:36:24.278  INFO 524 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:36:24.278  INFO 524 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 906 ms
2020-02-21 17:36:24.560  INFO 524 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:36:24.569 ERROR 524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:36:24.571  INFO 524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-15} inited
2020-02-21 17:36:24.580  INFO 524 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:36:24.855  INFO 524 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:36:24.855  INFO 524 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:36:24.877  INFO 524 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:36:25.106  WARN 524 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:36:25.408  INFO 524 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:36:25.915  INFO 524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:36:25.915  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 2.576 seconds (JVM running for 261.553)
2020-02-21 17:36:25.917  INFO 524 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 17:36:59.550  INFO 524 --- [Thread-92] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 17:36:59.550  INFO 524 --- [Thread-92] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:36:59.550  INFO 524 --- [Thread-92] com.alibaba.druid.pool.DruidDataSource   : {dataSource-15} closed
2020-02-21 17:37:00.286  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 524 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:37:00.286 DEBUG 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:37:00.286  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:37:01.108  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:37:01.108  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:37:01.118  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9ms. Found 0 JDBC repository interfaces.
2020-02-21 17:37:01.126  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:37:01.126  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:37:01.130  INFO 524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3ms. Found 0 JPA repository interfaces.
2020-02-21 17:37:01.221  INFO 524 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:37:01.370  WARN 524 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 17:37:01.475  INFO 524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:37:01.476  INFO 524 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:37:01.476  INFO 524 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:37:01.532  INFO 524 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:37:01.532  INFO 524 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1242 ms
2020-02-21 17:37:01.703  INFO 524 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:37:01.711 ERROR 524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:37:01.712  INFO 524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-16} inited
2020-02-21 17:37:01.720  INFO 524 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:37:02.240  INFO 524 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:37:02.240  INFO 524 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:37:02.255  INFO 524 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:37:02.489  WARN 524 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:37:02.693  INFO 524 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:37:03.464  INFO 524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:37:03.465  INFO 524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 3.234 seconds (JVM running for 299.103)
2020-02-21 17:37:03.467  INFO 524 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 17:37:19.487  INFO 11396 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 11396 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:37:19.491 DEBUG 11396 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:37:19.492  INFO 11396 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:37:19.689  INFO 11396 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 17:37:19.690  INFO 11396 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 17:37:19.690  INFO 11396 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 17:37:20.711  INFO 11396 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:37:20.712  INFO 11396 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:37:20.742  INFO 11396 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 24ms. Found 0 JDBC repository interfaces.
2020-02-21 17:37:20.757  INFO 11396 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:37:20.757  INFO 11396 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:37:20.771  INFO 11396 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7ms. Found 0 JPA repository interfaces.
2020-02-21 17:37:21.261  INFO 11396 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:37:22.124  INFO 11396 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:37:22.155  INFO 11396 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:37:22.155  INFO 11396 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:37:22.452  INFO 11396 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:37:22.452  INFO 11396 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2762 ms
2020-02-21 17:37:22.912  INFO 11396 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:37:22.988  INFO 11396 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 17:37:23.111  INFO 11396 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 17:37:23.232 ERROR 11396 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:37:23.239  INFO 11396 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 17:37:23.370  INFO 11396 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:37:24.281  INFO 11396 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:37:24.289  INFO 11396 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:37:24.319  INFO 11396 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:37:24.627  WARN 11396 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:37:24.844  INFO 11396 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:37:25.436  INFO 11396 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:37:25.439  INFO 11396 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 7.105 seconds (JVM running for 8.903)
2020-02-21 17:37:31.830  INFO 11396 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 17:37:31.831  INFO 11396 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 17:37:31.841  INFO 11396 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2020-02-21 17:37:31.964  INFO 11396 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 17:37:31.993 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:37:32.262 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:37:32.276 TRACE 11396 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:37:32.281 TRACE 11396 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 23, 35, 1
2020-02-21 17:37:32.285 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:37:32.286 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:37:32.287 TRACE 11396 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:37:32.287 TRACE 11396 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:37:32.288 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:37:32.288 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:37:32.289 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:37:32.290 TRACE 11396 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:37:32.290 TRACE 11396 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:37:32.290 TRACE 11396 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:37:32.290 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:37:32.291 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:37:32.291 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:37:32.292 TRACE 11396 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:37:32.292 TRACE 11396 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:37:32.293 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:37:32.293 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:37:32.297 TRACE 11396 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:37:32.297 TRACE 11396 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:37:32.299 TRACE 11396 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:37:32.300 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:37:32.300 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:37:32.300 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:37:32.302 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:37:32.302 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 17:37:32.307 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:37:32.367  INFO 11396 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 17:37:33.068  INFO 11396 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:37:33.082 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:37:33.082 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:37:33.083 TRACE 11396 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:37:33.083 TRACE 11396 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:37:33.084 TRACE 11396 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:37:33.085 TRACE 11396 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:37:33.087 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:37:33.087  INFO 11396 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:37:33.169  INFO 11396 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 17:37:33.170 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:37:33.170 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:37:33.172 TRACE 11396 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:37:33.173 TRACE 11396 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 24, 35, 1
2020-02-21 17:37:33.175 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:37:33.175 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:37:33.179 TRACE 11396 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:37:33.180 TRACE 11396 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:37:33.180 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:37:33.181 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:37:33.182 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:37:33.184 TRACE 11396 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:37:33.184 TRACE 11396 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:37:33.184 TRACE 11396 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:37:33.185 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:37:33.185 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:37:33.185 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:37:33.187 TRACE 11396 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:37:33.188 TRACE 11396 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:37:33.189 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:37:33.190 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:37:33.192 TRACE 11396 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:37:33.192 TRACE 11396 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:37:33.194 TRACE 11396 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:37:33.196 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:37:33.197 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:37:33.198 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:37:33.199  INFO 11396 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 17:37:33.218 ERROR 11396 --- [http-nio-8080-exec-4] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-4] Exception processing template "public/blog::[commentList]": An error happened during template parsing (template: "class path resource [templates/public/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/public/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Could not parse as expression: "${${#dates.format(comment.createDate,'yyyy-MM-dd')}" (template: "public/blog" - line 92, col 62)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as expression: "${${#dates.format(comment.createDate,'yyyy-MM-dd')}" (template: "public/blog" - line 92, col 62)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:131)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:62)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:44)
	at org.thymeleaf.engine.EngineEventUtils.parseAttributeExpression(EngineEventUtils.java:220)
	at org.thymeleaf.engine.EngineEventUtils.computeAttributeExpression(EngineEventUtils.java:207)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:125)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.select.BlockSelectorMarkupHandler.handleCloseElementEnd(BlockSelectorMarkupHandler.java:1178)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted

2020-02-21 17:37:33.223 ERROR 11396 --- [http-nio-8080-exec-4] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/public/blog.html]")] with root cause

org.thymeleaf.exceptions.TemplateProcessingException: Could not parse as expression: "${${#dates.format(comment.createDate,'yyyy-MM-dd')}" (template: "public/blog" - line 92, col 62)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:131)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:62)
	at org.thymeleaf.standard.expression.StandardExpressionParser.parseExpression(StandardExpressionParser.java:44)
	at org.thymeleaf.engine.EngineEventUtils.parseAttributeExpression(EngineEventUtils.java:220)
	at org.thymeleaf.engine.EngineEventUtils.computeAttributeExpression(EngineEventUtils.java:207)
	at org.thymeleaf.standard.processor.AbstractStandardExpressionAttributeTagProcessor.doProcess(AbstractStandardExpressionAttributeTagProcessor.java:125)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.select.BlockSelectorMarkupHandler.handleCloseElementEnd(BlockSelectorMarkupHandler.java:1178)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-21 17:38:14.568  INFO 11396 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 17:38:14.569 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:38:14.570 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:38:14.595 TRACE 11396 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:38:14.596 TRACE 11396 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 24, 35, 1
2020-02-21 17:38:14.597 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:38:14.597 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:38:14.598 TRACE 11396 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:38:14.598 TRACE 11396 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:38:14.599 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:38:14.599 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:38:14.600 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:38:14.604 TRACE 11396 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:38:14.604 TRACE 11396 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:38:14.605 TRACE 11396 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:38:14.605 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:38:14.606 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:38:14.607 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:38:14.609 TRACE 11396 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:38:14.609 TRACE 11396 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:38:14.610 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:38:14.611 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:38:14.613 TRACE 11396 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:38:14.613 TRACE 11396 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:38:14.614 TRACE 11396 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:38:14.614 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:38:14.615 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:38:14.615 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:38:14.619 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:38:14.619 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 17:38:14.632 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:38:14.635  INFO 11396 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 17:38:14.813  INFO 11396 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:38:14.814 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:38:14.815 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:38:14.818 TRACE 11396 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:38:14.821 TRACE 11396 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:38:14.823 TRACE 11396 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:38:14.824 TRACE 11396 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:38:14.824 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:38:14.825  INFO 11396 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:38:14.927  INFO 11396 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 17:38:14.928 DEBUG 11396 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:38:14.929 DEBUG 11396 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:38:14.931 TRACE 11396 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:38:14.931 TRACE 11396 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 25, 35, 1
2020-02-21 17:38:14.937 DEBUG 11396 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:38:14.937 DEBUG 11396 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:38:14.939 TRACE 11396 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:38:14.939 TRACE 11396 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:38:14.940 DEBUG 11396 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:38:14.940 DEBUG 11396 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:38:14.941 DEBUG 11396 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:38:14.943 TRACE 11396 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:38:14.943 TRACE 11396 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:38:14.944 TRACE 11396 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:38:14.944 DEBUG 11396 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:38:14.944 DEBUG 11396 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:38:14.945 DEBUG 11396 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:38:14.946 TRACE 11396 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:38:14.946 TRACE 11396 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:38:14.947 DEBUG 11396 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:38:14.947 DEBUG 11396 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:38:14.949 TRACE 11396 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:38:14.950 TRACE 11396 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:38:14.953 TRACE 11396 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:38:14.955 DEBUG 11396 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:38:14.955 DEBUG 11396 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:38:14.955 DEBUG 11396 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:38:14.956  INFO 11396 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 17:39:01.630  INFO 11396 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 17:39:01.631 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:39:01.631 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:39:01.632 TRACE 11396 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:39:01.633 TRACE 11396 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 25, 35, 1
2020-02-21 17:39:01.633 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:39:01.634 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:39:01.634 TRACE 11396 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:39:01.634 TRACE 11396 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:39:01.634 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:39:01.634 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:39:01.635 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:39:01.636 TRACE 11396 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:39:01.636 TRACE 11396 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:39:01.636 TRACE 11396 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:39:01.636 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:39:01.637 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:39:01.637 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:39:01.639 TRACE 11396 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:01.639 TRACE 11396 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:39:01.640 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:39:01.640 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:39:01.641 TRACE 11396 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:01.642 TRACE 11396 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:39:01.642 TRACE 11396 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:39:01.642 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:39:01.643 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:39:01.643 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:39:01.643 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:39:01.643 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 17:39:01.650 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:39:01.651  INFO 11396 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 17:39:01.744  INFO 11396 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:39:01.745 DEBUG 11396 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:39:01.745 DEBUG 11396 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:39:01.746 TRACE 11396 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:39:01.746 TRACE 11396 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:39:01.747 TRACE 11396 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:39:01.748 TRACE 11396 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:39:01.748 DEBUG 11396 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:39:01.748  INFO 11396 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:39:01.800  INFO 11396 --- [http-nio-8080-exec-9] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 17:39:01.801 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:39:01.801 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:39:01.802 TRACE 11396 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:39:01.803 TRACE 11396 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 26, 35, 1
2020-02-21 17:39:01.804 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:39:01.804 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:39:01.806 TRACE 11396 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:39:01.806 TRACE 11396 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:39:01.806 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:39:01.807 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:39:01.807 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:39:01.808 TRACE 11396 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:39:01.809 TRACE 11396 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:39:01.809 TRACE 11396 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:39:01.809 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:39:01.809 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:39:01.810 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:39:01.811 TRACE 11396 --- [http-nio-8080-exec-9] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:01.812 TRACE 11396 --- [http-nio-8080-exec-9] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:39:01.813 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:39:01.814 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:39:01.815 TRACE 11396 --- [http-nio-8080-exec-9] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:01.815 TRACE 11396 --- [http-nio-8080-exec-9] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:39:01.816 TRACE 11396 --- [http-nio-8080-exec-9] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:39:01.817 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:39:01.817 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:39:01.817 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:39:01.817  INFO 11396 --- [http-nio-8080-exec-9] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 17:39:09.827  INFO 11396 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 17:39:09.827 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:39:09.827 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:39:09.829 TRACE 11396 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:39:09.829 TRACE 11396 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 26, 35, 1
2020-02-21 17:39:09.835 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:39:09.835 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:39:09.838 TRACE 11396 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:39:09.838 TRACE 11396 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:39:09.838 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:39:09.839 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:39:09.839 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:39:09.840 TRACE 11396 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:39:09.841 TRACE 11396 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:39:09.841 TRACE 11396 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:39:09.842 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:39:09.842 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:39:09.843 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:39:09.845 TRACE 11396 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:09.845 TRACE 11396 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:39:09.846 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:39:09.847 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:39:09.848 TRACE 11396 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:09.848 TRACE 11396 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:39:09.848 TRACE 11396 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:39:09.849 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:39:09.849 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:39:09.849 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:39:09.850 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:39:09.850 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 17:39:09.853 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:39:09.856  INFO 11396 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 17:39:09.934  INFO 11396 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:39:09.934 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:39:09.934 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:39:09.936 TRACE 11396 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:39:09.936 TRACE 11396 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:39:09.937 TRACE 11396 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:39:09.937 TRACE 11396 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:39:09.938 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:39:09.938  INFO 11396 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:39:10.012  INFO 11396 --- [http-nio-8080-exec-7] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 17:39:10.013 DEBUG 11396 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:39:10.013 DEBUG 11396 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:39:10.015 TRACE 11396 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:39:10.015 TRACE 11396 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 27, 35, 1
2020-02-21 17:39:10.016 DEBUG 11396 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:39:10.016 DEBUG 11396 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:39:10.018 TRACE 11396 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:39:10.018 TRACE 11396 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:39:10.018 DEBUG 11396 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:39:10.018 DEBUG 11396 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:39:10.018 DEBUG 11396 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:39:10.021 TRACE 11396 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:39:10.021 TRACE 11396 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:39:10.021 TRACE 11396 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:39:10.022 DEBUG 11396 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:39:10.023 DEBUG 11396 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:39:10.023 DEBUG 11396 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:39:10.026 TRACE 11396 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:10.026 TRACE 11396 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:39:10.027 DEBUG 11396 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:39:10.027 DEBUG 11396 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:39:10.029 TRACE 11396 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:10.029 TRACE 11396 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:39:10.030 TRACE 11396 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:39:10.031 DEBUG 11396 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:39:10.031 DEBUG 11396 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:39:10.031 DEBUG 11396 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:39:10.032  INFO 11396 --- [http-nio-8080-exec-7] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 17:39:11.205  INFO 11396 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 17:39:11.206 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:39:11.206 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:39:11.207 TRACE 11396 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:39:11.208 TRACE 11396 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 27, 35, 1
2020-02-21 17:39:11.208 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:39:11.209 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:39:11.210 TRACE 11396 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:39:11.210 TRACE 11396 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:39:11.210 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:39:11.211 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:39:11.211 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:39:11.213 TRACE 11396 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:39:11.213 TRACE 11396 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:39:11.213 TRACE 11396 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:39:11.213 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:39:11.214 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:39:11.214 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:39:11.215 TRACE 11396 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:11.216 TRACE 11396 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:39:11.216 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:39:11.217 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:39:11.219 TRACE 11396 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:11.219 TRACE 11396 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:39:11.220 TRACE 11396 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:39:11.220 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:39:11.220 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:39:11.221 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:39:11.221 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:39:11.221 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 17:39:11.227 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:39:11.228  INFO 11396 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 17:39:11.322  INFO 11396 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:39:11.322 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:39:11.322 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:39:11.323 TRACE 11396 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:39:11.324 TRACE 11396 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:39:11.324 TRACE 11396 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:39:11.325 TRACE 11396 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:39:11.325 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:39:11.325  INFO 11396 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:39:11.400  INFO 11396 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 17:39:11.401 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:39:11.401 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:39:11.401 TRACE 11396 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:39:11.402 TRACE 11396 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 28, 35, 1
2020-02-21 17:39:11.403 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:39:11.403 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:39:11.404 TRACE 11396 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:39:11.405 TRACE 11396 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:39:11.405 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:39:11.405 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:39:11.405 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:39:11.407 TRACE 11396 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:39:11.407 TRACE 11396 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:39:11.407 TRACE 11396 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:39:11.408 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:39:11.408 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:39:11.408 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:39:11.422 TRACE 11396 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:11.422 TRACE 11396 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:39:11.423 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:39:11.423 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:39:11.434 TRACE 11396 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:11.434 TRACE 11396 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:39:11.434 TRACE 11396 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:39:11.435 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:39:11.435 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:39:11.435 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:39:11.436  INFO 11396 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 17:39:12.141  INFO 11396 --- [http-nio-8080-exec-9] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 17:39:12.142 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:39:12.142 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:39:12.143 TRACE 11396 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:39:12.143 TRACE 11396 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 28, 35, 1
2020-02-21 17:39:12.144 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:39:12.144 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:39:12.145 TRACE 11396 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:39:12.145 TRACE 11396 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:39:12.146 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:39:12.146 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:39:12.146 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:39:12.148 TRACE 11396 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:39:12.148 TRACE 11396 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:39:12.148 TRACE 11396 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:39:12.148 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:39:12.148 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:39:12.149 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:39:12.150 TRACE 11396 --- [http-nio-8080-exec-9] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:12.150 TRACE 11396 --- [http-nio-8080-exec-9] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:39:12.151 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:39:12.151 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:39:12.154 TRACE 11396 --- [http-nio-8080-exec-9] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:12.155 TRACE 11396 --- [http-nio-8080-exec-9] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:39:12.155 TRACE 11396 --- [http-nio-8080-exec-9] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:39:12.155 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:39:12.156 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:39:12.156 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:39:12.156 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:39:12.157 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 17:39:12.163 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:39:12.165  INFO 11396 --- [http-nio-8080-exec-9] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 17:39:12.266  INFO 11396 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:39:12.266 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:39:12.266 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:39:12.268 TRACE 11396 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:39:12.268 TRACE 11396 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:39:12.269 TRACE 11396 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:39:12.270 TRACE 11396 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:39:12.270 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:39:12.271  INFO 11396 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:39:12.370  INFO 11396 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 17:39:12.370 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:39:12.371 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:39:12.372 TRACE 11396 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:39:12.373 TRACE 11396 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 29, 35, 1
2020-02-21 17:39:12.373 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:39:12.373 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:39:12.374 TRACE 11396 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:39:12.374 TRACE 11396 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:39:12.375 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:39:12.375 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:39:12.375 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:39:12.376 TRACE 11396 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:39:12.376 TRACE 11396 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:39:12.377 TRACE 11396 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:39:12.377 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:39:12.377 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:39:12.377 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:39:12.378 TRACE 11396 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:12.379 TRACE 11396 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:39:12.379 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:39:12.379 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:39:12.380 TRACE 11396 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:12.380 TRACE 11396 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:39:12.381 TRACE 11396 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:39:12.381 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:39:12.381 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:39:12.381 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:39:12.382  INFO 11396 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 17:39:15.980  INFO 11396 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 17:39:15.981 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:39:15.981 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:39:15.982 TRACE 11396 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:39:15.983 TRACE 11396 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 29, 35, 1
2020-02-21 17:39:15.983 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:39:15.983 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:39:15.986 TRACE 11396 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:39:15.986 TRACE 11396 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:39:15.986 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:39:15.987 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:39:15.987 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:39:15.988 TRACE 11396 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:39:15.988 TRACE 11396 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:39:15.989 TRACE 11396 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:39:15.989 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:39:15.989 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:39:15.989 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:39:15.990 TRACE 11396 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:15.991 TRACE 11396 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:39:15.991 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:39:15.991 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:39:15.992 TRACE 11396 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:15.992 TRACE 11396 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:39:15.992 TRACE 11396 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:39:15.993 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:39:15.993 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:39:15.993 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:39:15.993 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:39:15.993 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 17:39:16.000 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:39:16.001  INFO 11396 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 17:39:16.079  INFO 11396 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:39:16.080 DEBUG 11396 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:39:16.080 DEBUG 11396 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:39:16.081 TRACE 11396 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:39:16.082 TRACE 11396 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:39:16.082 TRACE 11396 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:39:16.082 TRACE 11396 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:39:16.082 DEBUG 11396 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:39:16.083  INFO 11396 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:39:16.149  INFO 11396 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 17:39:16.149 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:39:16.149 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:39:16.150 TRACE 11396 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:39:16.151 TRACE 11396 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 30, 35, 1
2020-02-21 17:39:16.151 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:39:16.152 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:39:16.153 TRACE 11396 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:39:16.153 TRACE 11396 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:39:16.153 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:39:16.153 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:39:16.153 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:39:16.154 TRACE 11396 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:39:16.155 TRACE 11396 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:39:16.155 TRACE 11396 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:39:16.155 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:39:16.155 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:39:16.156 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:39:16.157 TRACE 11396 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:16.157 TRACE 11396 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:39:16.157 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:39:16.158 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:39:16.159 TRACE 11396 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:16.159 TRACE 11396 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:39:16.159 TRACE 11396 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:39:16.159 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:39:16.159 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:39:16.159 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:39:16.160  INFO 11396 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 17:39:19.228  INFO 11396 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 17:39:19.229 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:39:19.229 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:39:19.230 TRACE 11396 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:39:19.231 TRACE 11396 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 30, 35, 1
2020-02-21 17:39:19.231 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:39:19.231 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:39:19.233 TRACE 11396 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:39:19.233 TRACE 11396 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:39:19.233 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:39:19.233 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:39:19.233 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:39:19.236 TRACE 11396 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:39:19.236 TRACE 11396 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:39:19.236 TRACE 11396 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:39:19.236 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:39:19.236 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:39:19.237 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:39:19.238 TRACE 11396 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:19.238 TRACE 11396 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:39:19.239 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:39:19.239 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:39:19.247 TRACE 11396 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:19.247 TRACE 11396 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:39:19.247 TRACE 11396 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:39:19.247 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:39:19.247 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:39:19.247 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:39:19.248 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:39:19.248 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 17:39:19.253 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:39:19.254  INFO 11396 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 17:39:19.368  INFO 11396 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:39:19.368 DEBUG 11396 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:39:19.368 DEBUG 11396 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:39:19.369 TRACE 11396 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:39:19.369 TRACE 11396 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:39:19.370 TRACE 11396 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:39:19.370 TRACE 11396 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:39:19.370 DEBUG 11396 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:39:19.370  INFO 11396 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:39:19.422  INFO 11396 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 17:39:19.423 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:39:19.424 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:39:19.426 TRACE 11396 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:39:19.426 TRACE 11396 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 31, 35, 1
2020-02-21 17:39:19.426 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:39:19.427 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:39:19.428 TRACE 11396 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:39:19.428 TRACE 11396 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:39:19.429 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:39:19.430 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:39:19.430 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:39:19.431 TRACE 11396 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:39:19.431 TRACE 11396 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:39:19.431 TRACE 11396 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:39:19.431 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:39:19.432 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:39:19.432 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:39:19.434 TRACE 11396 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:19.434 TRACE 11396 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:39:19.434 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:39:19.434 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:39:19.436 TRACE 11396 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:19.436 TRACE 11396 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:39:19.436 TRACE 11396 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:39:19.436 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:39:19.437 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:39:19.437 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:39:19.438  INFO 11396 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 17:39:23.724  INFO 11396 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 17:39:23.724 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:39:23.725 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:39:23.726 TRACE 11396 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:39:23.726 TRACE 11396 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 31, 35, 1
2020-02-21 17:39:23.727 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:39:23.727 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:39:23.728 TRACE 11396 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:39:23.728 TRACE 11396 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:39:23.728 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:39:23.728 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:39:23.728 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:39:23.729 TRACE 11396 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:39:23.730 TRACE 11396 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:39:23.730 TRACE 11396 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:39:23.730 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:39:23.730 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:39:23.730 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:39:23.731 TRACE 11396 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:23.731 TRACE 11396 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:39:23.733 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:39:23.733 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:39:23.734 TRACE 11396 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:23.734 TRACE 11396 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:39:23.735 TRACE 11396 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:39:23.735 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:39:23.735 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:39:23.735 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:39:23.735 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:39:23.735 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 17:39:23.742 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:39:23.743  INFO 11396 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 17:39:23.824  INFO 11396 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:39:23.824 DEBUG 11396 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:39:23.824 DEBUG 11396 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:39:23.825 TRACE 11396 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:39:23.825 TRACE 11396 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:39:23.826 TRACE 11396 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:39:23.826 TRACE 11396 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:39:23.826 DEBUG 11396 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:39:23.826  INFO 11396 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:39:23.882  INFO 11396 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 17:39:23.882 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:39:23.882 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:39:23.883 TRACE 11396 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:39:23.883 TRACE 11396 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 32, 35, 1
2020-02-21 17:39:23.884 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:39:23.884 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:39:23.885 TRACE 11396 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:39:23.885 TRACE 11396 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:39:23.885 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:39:23.886 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:39:23.886 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:39:23.887 TRACE 11396 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:39:23.887 TRACE 11396 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:39:23.887 TRACE 11396 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:39:23.887 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:39:23.887 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:39:23.887 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:39:23.888 TRACE 11396 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:23.889 TRACE 11396 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:39:23.889 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:39:23.889 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:39:23.890 TRACE 11396 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:23.890 TRACE 11396 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:39:23.891 TRACE 11396 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:39:23.891 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:39:23.891 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:39:23.891 DEBUG 11396 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:39:23.891  INFO 11396 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 17:39:31.369  INFO 11396 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 17:39:31.370 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:39:31.370 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:39:31.382 TRACE 11396 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:39:31.383 TRACE 11396 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 32, 35, 1
2020-02-21 17:39:31.383 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:39:31.384 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:39:31.396 TRACE 11396 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:39:31.397 TRACE 11396 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:39:31.397 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:39:31.397 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:39:31.398 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:39:31.403 TRACE 11396 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:39:31.404 TRACE 11396 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:39:31.404 TRACE 11396 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:39:31.404 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:39:31.404 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:39:31.405 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:39:31.407 TRACE 11396 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:31.407 TRACE 11396 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:39:31.407 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:39:31.408 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:39:31.409 TRACE 11396 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:31.409 TRACE 11396 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:39:31.409 TRACE 11396 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:39:31.410 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:39:31.410 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:39:31.410 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:39:31.410 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:39:31.410 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 17:39:31.418 DEBUG 11396 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:39:31.419  INFO 11396 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 17:39:31.693  INFO 11396 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:39:31.693 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:39:31.694 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:39:31.709 TRACE 11396 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:39:31.709 TRACE 11396 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:39:31.710 TRACE 11396 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:39:31.710 TRACE 11396 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:39:31.710 DEBUG 11396 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:39:31.711  INFO 11396 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:39:31.830  INFO 11396 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 17:39:31.830 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:39:31.831 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:39:31.837 TRACE 11396 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:39:31.837 TRACE 11396 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 33, 35, 1
2020-02-21 17:39:31.838 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:39:31.838 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:39:31.839 TRACE 11396 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:39:31.840 TRACE 11396 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:39:31.840 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:39:31.840 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:39:31.841 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:39:31.843 TRACE 11396 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:39:31.843 TRACE 11396 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:39:31.843 TRACE 11396 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:39:31.843 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:39:31.843 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:39:31.843 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:39:31.845 TRACE 11396 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:31.845 TRACE 11396 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:39:31.846 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:39:31.846 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:39:31.848 TRACE 11396 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:31.848 TRACE 11396 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:39:31.850 TRACE 11396 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:39:31.855 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:39:31.855 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:39:31.855 DEBUG 11396 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:39:31.855  INFO 11396 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 17:39:40.843  INFO 11396 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 17:39:40.843 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:39:40.844 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:39:40.845 TRACE 11396 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:39:40.845 TRACE 11396 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 33, 35, 1
2020-02-21 17:39:40.845 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:39:40.846 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:39:40.847 TRACE 11396 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:39:40.847 TRACE 11396 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:39:40.847 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:39:40.848 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:39:40.848 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:39:40.849 TRACE 11396 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:39:40.850 TRACE 11396 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:39:40.850 TRACE 11396 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:39:40.850 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:39:40.851 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:39:40.851 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:39:40.852 TRACE 11396 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:40.852 TRACE 11396 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:39:40.853 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:39:40.853 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:39:40.854 TRACE 11396 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:40.854 TRACE 11396 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:39:40.854 TRACE 11396 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:39:40.854 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:39:40.854 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:39:40.854 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:39:40.855 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:39:40.855 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 17:39:40.869 DEBUG 11396 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:39:40.870  INFO 11396 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 17:39:40.932  INFO 11396 --- [http-nio-8080-exec-9] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:39:40.932 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:39:40.933 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:39:40.934 TRACE 11396 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:39:40.934 TRACE 11396 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:39:40.934 TRACE 11396 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:39:40.935 TRACE 11396 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:39:40.935 DEBUG 11396 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:39:40.935  INFO 11396 --- [http-nio-8080-exec-9] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:39:40.989  INFO 11396 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 17:39:40.990 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:39:40.990 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:39:40.991 TRACE 11396 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:39:40.992 TRACE 11396 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 34, 35, 1
2020-02-21 17:39:40.992 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:39:40.992 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:39:40.994 TRACE 11396 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:39:40.994 TRACE 11396 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:39:40.994 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:39:40.994 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:39:40.995 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:39:40.996 TRACE 11396 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:39:40.996 TRACE 11396 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:39:40.996 TRACE 11396 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:39:40.996 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:39:40.997 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:39:40.997 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:39:40.998 TRACE 11396 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:40.998 TRACE 11396 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:39:40.999 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:39:40.999 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:39:41.000 TRACE 11396 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:39:41.000 TRACE 11396 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:39:41.001 TRACE 11396 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:39:41.001 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:39:41.001 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:39:41.001 DEBUG 11396 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:39:41.001  INFO 11396 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 17:43:52.112  INFO 4552 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 4552 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:43:52.115 DEBUG 4552 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:43:52.115  INFO 4552 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:43:52.173  INFO 4552 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 17:43:52.174  INFO 4552 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 17:43:52.174  INFO 4552 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 17:43:52.817  INFO 4552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:43:52.817  INFO 4552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:43:52.833  INFO 4552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17ms. Found 0 JDBC repository interfaces.
2020-02-21 17:43:52.848  INFO 4552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:43:52.849  INFO 4552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:43:52.850  INFO 4552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4ms. Found 0 JPA repository interfaces.
2020-02-21 17:43:53.178  INFO 4552 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:43:53.642  INFO 4552 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:43:53.652  INFO 4552 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:43:53.652  INFO 4552 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:43:53.820  INFO 4552 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:43:53.820  INFO 4552 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1646 ms
2020-02-21 17:43:54.160  INFO 4552 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:43:54.219  INFO 4552 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 17:43:54.324  INFO 4552 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 17:43:54.421 ERROR 4552 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:43:54.427  INFO 4552 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 17:43:54.531  INFO 4552 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:43:55.391  INFO 4552 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:43:55.397  INFO 4552 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:43:55.423  INFO 4552 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:43:55.721  WARN 4552 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:43:55.922  INFO 4552 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:43:56.529  INFO 4552 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:43:56.532  INFO 4552 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 5.493 seconds (JVM running for 7.044)
2020-02-21 17:44:27.855  INFO 4552 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 17:44:27.855  INFO 4552 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 17:44:27.872  INFO 4552 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 17 ms
2020-02-21 17:44:27.970  INFO 4552 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 17:44:28.010 DEBUG 4552 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:44:28.298 DEBUG 4552 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:44:28.317 TRACE 4552 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:44:28.319 TRACE 4552 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 34, 35, 1
2020-02-21 17:44:28.323 DEBUG 4552 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:44:28.323 DEBUG 4552 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:44:28.326 TRACE 4552 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:44:28.326 TRACE 4552 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:44:28.327 DEBUG 4552 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:44:28.328 DEBUG 4552 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:44:28.329 DEBUG 4552 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:44:28.331 TRACE 4552 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:44:28.332 TRACE 4552 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:44:28.332 TRACE 4552 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:44:28.333 DEBUG 4552 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:44:28.333 DEBUG 4552 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:44:28.334 DEBUG 4552 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:44:28.335 TRACE 4552 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:44:28.336 TRACE 4552 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:44:28.337 DEBUG 4552 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:44:28.338 DEBUG 4552 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:44:28.339 TRACE 4552 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:44:28.340 TRACE 4552 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:44:28.341 TRACE 4552 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:44:28.342 DEBUG 4552 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:44:28.343 DEBUG 4552 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:44:28.343 DEBUG 4552 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:44:28.347 DEBUG 4552 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:44:28.347 DEBUG 4552 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 17:44:28.353 DEBUG 4552 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:44:28.408  INFO 4552 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 17:44:29.078  INFO 4552 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:44:29.090 DEBUG 4552 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:44:29.092 DEBUG 4552 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:44:29.094 TRACE 4552 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:44:29.095 TRACE 4552 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:44:29.099 TRACE 4552 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:44:29.100 TRACE 4552 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:44:29.102 DEBUG 4552 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:44:29.102  INFO 4552 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:44:29.183  INFO 4552 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 17:44:29.184 DEBUG 4552 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:44:29.184 DEBUG 4552 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:44:29.187 TRACE 4552 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:44:29.187 TRACE 4552 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 35, 35, 1
2020-02-21 17:44:29.189 DEBUG 4552 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:44:29.190 DEBUG 4552 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:44:29.192 TRACE 4552 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:44:29.193 TRACE 4552 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:44:29.195 DEBUG 4552 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:44:29.196 DEBUG 4552 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:44:29.196 DEBUG 4552 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:44:29.199 TRACE 4552 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:44:29.199 TRACE 4552 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:44:29.199 TRACE 4552 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:44:29.200 DEBUG 4552 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:44:29.200 DEBUG 4552 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:44:29.201 DEBUG 4552 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:44:29.202 TRACE 4552 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:44:29.203 TRACE 4552 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:44:29.204 DEBUG 4552 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:44:29.204 DEBUG 4552 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:44:29.206 TRACE 4552 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:44:29.207 TRACE 4552 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:44:29.208 TRACE 4552 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:44:29.211 DEBUG 4552 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:44:29.211 DEBUG 4552 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:44:29.211 DEBUG 4552 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:44:29.213  INFO 4552 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 17:45:17.446  INFO 4552 --- [Thread-13] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 17:45:17.447  INFO 4552 --- [Thread-13] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:45:17.456  INFO 4552 --- [Thread-13] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-02-21 17:45:18.414  INFO 4552 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 4552 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:45:18.414 DEBUG 4552 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:45:18.414  INFO 4552 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:45:19.001  INFO 4552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:45:19.002  INFO 4552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:45:19.016  INFO 4552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14ms. Found 0 JDBC repository interfaces.
2020-02-21 17:45:19.023  INFO 4552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:45:19.023  INFO 4552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:45:19.030  INFO 4552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7ms. Found 0 JPA repository interfaces.
2020-02-21 17:45:19.243  INFO 4552 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:45:19.406  WARN 4552 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 17:45:19.505  INFO 4552 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:45:19.506  INFO 4552 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:45:19.506  INFO 4552 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:45:19.558  INFO 4552 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:45:19.558  INFO 4552 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1139 ms
2020-02-21 17:45:19.702  INFO 4552 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:45:19.718 ERROR 4552 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:45:19.718  INFO 4552 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-02-21 17:45:19.733  INFO 4552 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:45:20.093  INFO 4552 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:45:20.093  INFO 4552 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:45:20.124  INFO 4552 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:45:20.350  WARN 4552 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:45:20.533  INFO 4552 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:45:21.409  INFO 4552 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:45:21.409  INFO 4552 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 3.062 seconds (JVM running for 91.934)
2020-02-21 17:45:21.409  INFO 4552 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 17:45:24.373  INFO 4552 --- [http-nio-8080-exec-10] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 17:45:24.376  INFO 4552 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 17:45:24.400  INFO 4552 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed initialization in 24 ms
2020-02-21 17:45:24.410  INFO 4552 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 17:45:24.422 DEBUG 4552 --- [http-nio-8080-exec-10] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:45:24.423 DEBUG 4552 --- [http-nio-8080-exec-10] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:45:24.425 TRACE 4552 --- [http-nio-8080-exec-10] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:45:24.425 TRACE 4552 --- [http-nio-8080-exec-10] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 35, 35, 1
2020-02-21 17:45:24.426 DEBUG 4552 --- [http-nio-8080-exec-10] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:45:24.426 DEBUG 4552 --- [http-nio-8080-exec-10] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:45:24.430 TRACE 4552 --- [http-nio-8080-exec-10] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:45:24.431 TRACE 4552 --- [http-nio-8080-exec-10] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:45:24.431 DEBUG 4552 --- [http-nio-8080-exec-10] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:45:24.432 DEBUG 4552 --- [http-nio-8080-exec-10] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:45:24.432 DEBUG 4552 --- [http-nio-8080-exec-10] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:45:24.435 TRACE 4552 --- [http-nio-8080-exec-10] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:45:24.435 TRACE 4552 --- [http-nio-8080-exec-10] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:45:24.435 TRACE 4552 --- [http-nio-8080-exec-10] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:45:24.435 DEBUG 4552 --- [http-nio-8080-exec-10] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:45:24.436 DEBUG 4552 --- [http-nio-8080-exec-10] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:45:24.437 DEBUG 4552 --- [http-nio-8080-exec-10] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:45:24.439 TRACE 4552 --- [http-nio-8080-exec-10] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:45:24.439 TRACE 4552 --- [http-nio-8080-exec-10] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:45:24.440 DEBUG 4552 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:45:24.440 DEBUG 4552 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:45:24.442 TRACE 4552 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:45:24.443 TRACE 4552 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:45:24.443 TRACE 4552 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:45:24.443 DEBUG 4552 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:45:24.444 DEBUG 4552 --- [http-nio-8080-exec-10] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:45:24.446 DEBUG 4552 --- [http-nio-8080-exec-10] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:45:24.448 DEBUG 4552 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:45:24.448 DEBUG 4552 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 17:45:24.454 DEBUG 4552 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:45:24.459  INFO 4552 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 17:45:24.734  INFO 4552 --- [http-nio-8080-exec-9] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:45:24.740 DEBUG 4552 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:45:24.741 DEBUG 4552 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:45:24.743 TRACE 4552 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:45:24.743 TRACE 4552 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:45:24.745 TRACE 4552 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:45:24.749 TRACE 4552 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:45:24.750 DEBUG 4552 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:45:24.751  INFO 4552 --- [http-nio-8080-exec-9] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:45:24.876  INFO 4552 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 17:45:24.877 DEBUG 4552 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:45:24.878 DEBUG 4552 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:45:24.883 TRACE 4552 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:45:24.884 TRACE 4552 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 36, 35, 1
2020-02-21 17:45:24.885 DEBUG 4552 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:45:24.885 DEBUG 4552 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:45:24.886 TRACE 4552 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:45:24.887 TRACE 4552 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:45:24.887 DEBUG 4552 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:45:24.888 DEBUG 4552 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:45:24.888 DEBUG 4552 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:45:24.889 TRACE 4552 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:45:24.890 TRACE 4552 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:45:24.890 TRACE 4552 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:45:24.890 DEBUG 4552 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:45:24.891 DEBUG 4552 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:45:24.891 DEBUG 4552 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:45:24.892 TRACE 4552 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:45:24.893 TRACE 4552 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:45:24.894 DEBUG 4552 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:45:24.894 DEBUG 4552 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:45:24.899 TRACE 4552 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:45:24.900 TRACE 4552 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:45:24.901 TRACE 4552 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:45:24.901 DEBUG 4552 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:45:24.902 DEBUG 4552 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:45:24.902 DEBUG 4552 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:45:24.903  INFO 4552 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 17:45:35.770  INFO 10548 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 10548 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:45:35.786 DEBUG 10548 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:45:35.786  INFO 10548 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:45:35.848  INFO 10548 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 17:45:35.848  INFO 10548 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 17:45:35.848  INFO 10548 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 17:45:36.870  INFO 10548 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:45:36.871  INFO 10548 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:45:36.953  INFO 10548 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 71ms. Found 0 JDBC repository interfaces.
2020-02-21 17:45:36.975  INFO 10548 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:45:36.975  INFO 10548 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:45:36.990  INFO 10548 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6ms. Found 0 JPA repository interfaces.
2020-02-21 17:45:37.587  INFO 10548 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:45:38.030  INFO 10548 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:45:38.038  INFO 10548 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:45:38.038  INFO 10548 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:45:38.185  INFO 10548 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:45:38.185  INFO 10548 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2337 ms
2020-02-21 17:45:38.493  INFO 10548 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:45:38.551  INFO 10548 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 17:45:38.654  INFO 10548 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 17:45:38.750 ERROR 10548 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:45:38.756  INFO 10548 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 17:45:38.863  INFO 10548 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:45:39.691  INFO 10548 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:45:39.707  INFO 10548 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:45:39.723  INFO 10548 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:45:40.019  WARN 10548 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:45:40.215  INFO 10548 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:45:40.779  INFO 10548 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:45:40.782  INFO 10548 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 5.74 seconds (JVM running for 7.31)
2020-02-21 17:46:05.688  INFO 10548 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 17:46:05.688  INFO 10548 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 17:46:05.699  INFO 10548 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 10 ms
2020-02-21 17:46:05.798  INFO 10548 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 17:46:05.835 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:46:06.109 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:46:06.132 TRACE 10548 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:46:06.137 TRACE 10548 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 36, 35, 1
2020-02-21 17:46:06.143 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:46:06.143 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:46:06.144 TRACE 10548 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:46:06.145 TRACE 10548 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:46:06.145 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:46:06.146 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:46:06.147 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:46:06.148 TRACE 10548 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:46:06.148 TRACE 10548 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:46:06.149 TRACE 10548 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:46:06.149 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:46:06.150 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:46:06.151 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:46:06.153 TRACE 10548 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:46:06.154 TRACE 10548 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:46:06.155 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:46:06.157 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:46:06.158 TRACE 10548 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:46:06.159 TRACE 10548 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:46:06.159 TRACE 10548 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:46:06.160 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:46:06.160 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:46:06.160 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:46:06.162 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:46:06.162 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 17:46:06.168 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:46:06.231  INFO 10548 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 17:46:06.876  INFO 10548 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:46:06.887 DEBUG 10548 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:46:06.888 DEBUG 10548 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:46:06.890 TRACE 10548 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:46:06.891 TRACE 10548 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:46:06.893 TRACE 10548 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:46:06.895 TRACE 10548 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:46:06.896 DEBUG 10548 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:46:06.897  INFO 10548 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:46:06.975  INFO 10548 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 17:46:06.975 DEBUG 10548 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:46:06.976 DEBUG 10548 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:46:06.978 TRACE 10548 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:46:06.979 TRACE 10548 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 37, 35, 1
2020-02-21 17:46:06.980 DEBUG 10548 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:46:06.981 DEBUG 10548 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:46:06.983 TRACE 10548 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:46:06.983 TRACE 10548 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:46:06.984 DEBUG 10548 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:46:06.985 DEBUG 10548 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:46:06.986 DEBUG 10548 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:46:06.988 TRACE 10548 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:46:06.989 TRACE 10548 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:46:06.989 TRACE 10548 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:46:06.990 DEBUG 10548 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:46:06.991 DEBUG 10548 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:46:06.991 DEBUG 10548 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:46:06.993 TRACE 10548 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:46:06.994 TRACE 10548 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:46:06.994 DEBUG 10548 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:46:06.995 DEBUG 10548 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:46:06.996 TRACE 10548 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:46:06.997 TRACE 10548 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:46:06.998 TRACE 10548 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:46:06.999 DEBUG 10548 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:46:07.000 DEBUG 10548 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:46:07.000 DEBUG 10548 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:46:07.002  INFO 10548 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 17:46:38.298  INFO 10548 --- [Thread-14] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 17:46:38.299  INFO 10548 --- [Thread-14] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:46:38.308  INFO 10548 --- [Thread-14] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-02-21 17:46:39.700  INFO 10548 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 10548 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:46:39.700 DEBUG 10548 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:46:39.700  INFO 10548 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:46:40.278  INFO 10548 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:46:40.278  INFO 10548 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:46:40.293  INFO 10548 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14ms. Found 0 JDBC repository interfaces.
2020-02-21 17:46:40.293  INFO 10548 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:46:40.293  INFO 10548 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:46:40.315  INFO 10548 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7ms. Found 0 JPA repository interfaces.
2020-02-21 17:46:40.447  INFO 10548 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:46:40.604  WARN 10548 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 17:46:40.708  INFO 10548 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:46:40.710  INFO 10548 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:46:40.710  INFO 10548 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:46:40.756  INFO 10548 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:46:40.757  INFO 10548 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1057 ms
2020-02-21 17:46:40.956  INFO 10548 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:46:40.963 ERROR 10548 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:46:40.965  INFO 10548 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-02-21 17:46:40.972  INFO 10548 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:46:41.298  INFO 10548 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:46:41.299  INFO 10548 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:46:41.321  INFO 10548 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:46:41.692  WARN 10548 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:46:42.209  INFO 10548 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:46:43.179  INFO 10548 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:46:43.179  INFO 10548 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 3.529 seconds (JVM running for 69.708)
2020-02-21 17:46:43.182  INFO 10548 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 17:46:45.574  INFO 10548 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 17:46:45.575  INFO 10548 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 17:46:45.596  INFO 10548 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 21 ms
2020-02-21 17:46:45.610  INFO 10548 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 17:46:45.617 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:46:45.617 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:46:45.628 TRACE 10548 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:46:45.629 TRACE 10548 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 37, 35, 1
2020-02-21 17:46:45.630 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:46:45.631 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:46:45.638 TRACE 10548 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:46:45.638 TRACE 10548 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:46:45.639 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:46:45.639 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:46:45.639 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:46:45.651 TRACE 10548 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:46:45.652 TRACE 10548 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:46:45.653 TRACE 10548 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:46:45.653 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:46:45.654 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:46:45.655 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:46:45.665 TRACE 10548 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:46:45.666 TRACE 10548 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:46:45.667 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:46:45.667 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:46:45.671 TRACE 10548 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:46:45.671 TRACE 10548 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:46:45.672 TRACE 10548 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:46:45.672 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:46:45.673 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:46:45.673 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:46:45.678 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:46:45.679 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 17:46:45.707 DEBUG 10548 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:46:45.718  INFO 10548 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 17:46:46.244  INFO 10548 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:46:46.251 DEBUG 10548 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:46:46.251 DEBUG 10548 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:46:46.284 TRACE 10548 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:46:46.285 TRACE 10548 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:46:46.286 TRACE 10548 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:46:46.287 TRACE 10548 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:46:46.287 DEBUG 10548 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:46:46.288  INFO 10548 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:46:46.620  INFO 10548 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 17:46:46.620 DEBUG 10548 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:46:46.621 DEBUG 10548 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:46:46.623 TRACE 10548 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:46:46.623 TRACE 10548 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 38, 35, 1
2020-02-21 17:46:46.624 DEBUG 10548 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:46:46.625 DEBUG 10548 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:46:46.630 TRACE 10548 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:46:46.630 TRACE 10548 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:46:46.631 DEBUG 10548 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:46:46.631 DEBUG 10548 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:46:46.631 DEBUG 10548 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:46:46.635 TRACE 10548 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:46:46.636 TRACE 10548 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:46:46.636 TRACE 10548 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:46:46.636 DEBUG 10548 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:46:46.636 DEBUG 10548 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:46:46.637 DEBUG 10548 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:46:46.640 TRACE 10548 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:46:46.641 TRACE 10548 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:46:46.643 DEBUG 10548 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:46:46.644 DEBUG 10548 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:46:46.647 TRACE 10548 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:46:46.647 TRACE 10548 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:46:46.648 TRACE 10548 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:46:46.648 DEBUG 10548 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:46:46.649 DEBUG 10548 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:46:46.649 DEBUG 10548 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:46:46.650  INFO 10548 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 17:46:48.607  INFO 10548 --- [Thread-24] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 17:46:48.608  INFO 10548 --- [Thread-24] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:46:48.609  INFO 10548 --- [Thread-24] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} closed
2020-02-21 17:46:49.657  INFO 10548 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 10548 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:46:49.658 DEBUG 10548 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:46:49.658  INFO 10548 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:46:50.109  INFO 10548 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:46:50.109  INFO 10548 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:46:50.118  INFO 10548 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9ms. Found 0 JDBC repository interfaces.
2020-02-21 17:46:50.123  INFO 10548 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:46:50.123  INFO 10548 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:46:50.130  INFO 10548 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6ms. Found 0 JPA repository interfaces.
2020-02-21 17:46:50.200  INFO 10548 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:46:50.283  WARN 10548 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 17:46:50.393  INFO 10548 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:46:50.393  INFO 10548 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:46:50.393  INFO 10548 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:46:50.440  INFO 10548 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:46:50.440  INFO 10548 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 778 ms
2020-02-21 17:46:50.596  INFO 10548 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:46:50.611 ERROR 10548 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:46:50.611  INFO 10548 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-3} inited
2020-02-21 17:46:50.611  INFO 10548 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:46:50.908  INFO 10548 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:46:50.908  INFO 10548 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:46:50.939  INFO 10548 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:46:51.096  WARN 10548 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:46:51.296  INFO 10548 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:46:52.144  INFO 10548 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:46:52.145  INFO 10548 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 2.57 seconds (JVM running for 78.673)
2020-02-21 17:46:52.148  INFO 10548 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 17:46:54.208  INFO 10548 --- [http-nio-8080-exec-10] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 17:46:54.209  INFO 10548 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 17:46:54.233  INFO 10548 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed initialization in 24 ms
2020-02-21 17:46:54.243  INFO 10548 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 17:46:54.248 DEBUG 10548 --- [http-nio-8080-exec-10] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:46:54.249 DEBUG 10548 --- [http-nio-8080-exec-10] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:46:54.250 TRACE 10548 --- [http-nio-8080-exec-10] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:46:54.250 TRACE 10548 --- [http-nio-8080-exec-10] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 38, 35, 1
2020-02-21 17:46:54.251 DEBUG 10548 --- [http-nio-8080-exec-10] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:46:54.252 DEBUG 10548 --- [http-nio-8080-exec-10] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:46:54.253 TRACE 10548 --- [http-nio-8080-exec-10] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:46:54.253 TRACE 10548 --- [http-nio-8080-exec-10] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:46:54.253 DEBUG 10548 --- [http-nio-8080-exec-10] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:46:54.253 DEBUG 10548 --- [http-nio-8080-exec-10] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:46:54.254 DEBUG 10548 --- [http-nio-8080-exec-10] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:46:54.255 TRACE 10548 --- [http-nio-8080-exec-10] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:46:54.255 TRACE 10548 --- [http-nio-8080-exec-10] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:46:54.255 TRACE 10548 --- [http-nio-8080-exec-10] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:46:54.256 DEBUG 10548 --- [http-nio-8080-exec-10] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:46:54.258 DEBUG 10548 --- [http-nio-8080-exec-10] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:46:54.259 DEBUG 10548 --- [http-nio-8080-exec-10] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:46:54.260 TRACE 10548 --- [http-nio-8080-exec-10] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:46:54.261 TRACE 10548 --- [http-nio-8080-exec-10] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:46:54.262 DEBUG 10548 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:46:54.262 DEBUG 10548 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:46:54.263 TRACE 10548 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:46:54.264 TRACE 10548 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:46:54.264 TRACE 10548 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:46:54.264 DEBUG 10548 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:46:54.265 DEBUG 10548 --- [http-nio-8080-exec-10] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:46:54.265 DEBUG 10548 --- [http-nio-8080-exec-10] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:46:54.265 DEBUG 10548 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:46:54.265 DEBUG 10548 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 17:46:54.271 DEBUG 10548 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:46:54.279  INFO 10548 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 17:46:54.542  INFO 10548 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:46:54.549 DEBUG 10548 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:46:54.549 DEBUG 10548 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:46:54.550 TRACE 10548 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:46:54.551 TRACE 10548 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:46:54.552 TRACE 10548 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:46:54.553 TRACE 10548 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:46:54.553 DEBUG 10548 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:46:54.554  INFO 10548 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:46:54.682  INFO 10548 --- [http-nio-8080-exec-9] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 17:46:54.682 DEBUG 10548 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:46:54.682 DEBUG 10548 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:46:54.684 TRACE 10548 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:46:54.684 TRACE 10548 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 39, 35, 1
2020-02-21 17:46:54.685 DEBUG 10548 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:46:54.685 DEBUG 10548 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:46:54.689 TRACE 10548 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:46:54.689 TRACE 10548 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:46:54.691 DEBUG 10548 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:46:54.694 DEBUG 10548 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:46:54.694 DEBUG 10548 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:46:54.696 TRACE 10548 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:46:54.697 TRACE 10548 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:46:54.697 TRACE 10548 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:46:54.697 DEBUG 10548 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:46:54.698 DEBUG 10548 --- [http-nio-8080-exec-9] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:46:54.698 DEBUG 10548 --- [http-nio-8080-exec-9] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:46:54.700 TRACE 10548 --- [http-nio-8080-exec-9] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:46:54.700 TRACE 10548 --- [http-nio-8080-exec-9] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:46:54.701 DEBUG 10548 --- [http-nio-8080-exec-9] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:46:54.701 DEBUG 10548 --- [http-nio-8080-exec-9] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:46:54.703 TRACE 10548 --- [http-nio-8080-exec-9] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:46:54.703 TRACE 10548 --- [http-nio-8080-exec-9] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:46:54.704 TRACE 10548 --- [http-nio-8080-exec-9] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:46:54.704 DEBUG 10548 --- [http-nio-8080-exec-9] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:46:54.704 DEBUG 10548 --- [http-nio-8080-exec-9] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:46:54.705 DEBUG 10548 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:46:54.705  INFO 10548 --- [http-nio-8080-exec-9] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 17:47:10.665  INFO 8196 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 8196 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:47:10.668 DEBUG 8196 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:47:10.668  INFO 8196 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:47:10.738  INFO 8196 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 17:47:10.739  INFO 8196 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 17:47:10.739  INFO 8196 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 17:47:11.910  INFO 8196 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:47:11.911  INFO 8196 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:47:11.984  INFO 8196 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 65ms. Found 0 JDBC repository interfaces.
2020-02-21 17:47:12.009  INFO 8196 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:47:12.009  INFO 8196 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:47:12.029  INFO 8196 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9ms. Found 0 JPA repository interfaces.
2020-02-21 17:47:12.646  INFO 8196 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:47:13.162  INFO 8196 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:47:13.170  INFO 8196 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:47:13.170  INFO 8196 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:47:13.290  INFO 8196 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:47:13.291  INFO 8196 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2552 ms
2020-02-21 17:47:13.581  INFO 8196 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:47:13.642  INFO 8196 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 17:47:13.745  INFO 8196 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 17:47:13.842 ERROR 8196 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:47:13.848  INFO 8196 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 17:47:13.952  INFO 8196 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:47:14.860  INFO 8196 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:47:14.866  INFO 8196 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:47:14.894  INFO 8196 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:47:15.211  WARN 8196 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:47:15.443  INFO 8196 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:47:16.001  INFO 8196 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:47:16.003  INFO 8196 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 6.148 seconds (JVM running for 7.583)
2020-02-21 17:47:23.270  INFO 8196 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 17:47:23.271  INFO 8196 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 17:47:23.284  INFO 8196 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 13 ms
2020-02-21 17:47:23.385  INFO 8196 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 17:47:23.412 DEBUG 8196 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:47:23.439 DEBUG 8196 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:47:23.454 TRACE 8196 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:47:23.456 TRACE 8196 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 39, 35, 1
2020-02-21 17:47:23.459 DEBUG 8196 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:47:23.459 DEBUG 8196 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:47:23.461 TRACE 8196 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:47:23.461 TRACE 8196 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:47:23.461 DEBUG 8196 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:47:23.462 DEBUG 8196 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:47:23.462 DEBUG 8196 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:47:23.463 TRACE 8196 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:47:23.463 TRACE 8196 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:47:23.464 TRACE 8196 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:47:23.464 DEBUG 8196 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:47:23.464 DEBUG 8196 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:47:23.465 DEBUG 8196 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:47:23.467 TRACE 8196 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:47:23.468 TRACE 8196 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:47:23.469 DEBUG 8196 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:47:23.470 DEBUG 8196 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:47:23.472 TRACE 8196 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:47:23.472 TRACE 8196 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:47:23.473 TRACE 8196 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:47:23.473 DEBUG 8196 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:47:23.473 DEBUG 8196 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:47:23.474 DEBUG 8196 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:47:23.475 DEBUG 8196 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:47:23.476 DEBUG 8196 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 17:47:23.482 DEBUG 8196 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:47:23.545  INFO 8196 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 17:47:24.416  INFO 8196 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:47:24.416 DEBUG 8196 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:47:24.416 DEBUG 8196 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:47:24.432 TRACE 8196 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:47:24.433 TRACE 8196 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:47:24.435 TRACE 8196 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:47:24.436 TRACE 8196 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:47:24.438 DEBUG 8196 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:47:24.438  INFO 8196 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:47:24.509  INFO 8196 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 17:47:24.510 DEBUG 8196 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:47:24.510 DEBUG 8196 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:47:24.514 TRACE 8196 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:47:24.514 TRACE 8196 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 40, 35, 1
2020-02-21 17:47:24.519 DEBUG 8196 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:47:24.520 DEBUG 8196 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:47:24.522 TRACE 8196 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:47:24.523 TRACE 8196 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:47:24.523 DEBUG 8196 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:47:24.524 DEBUG 8196 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:47:24.524 DEBUG 8196 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:47:24.526 TRACE 8196 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:47:24.526 TRACE 8196 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:47:24.526 TRACE 8196 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:47:24.526 DEBUG 8196 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:47:24.527 DEBUG 8196 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:47:24.527 DEBUG 8196 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:47:24.529 TRACE 8196 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:47:24.529 TRACE 8196 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:47:24.530 DEBUG 8196 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:47:24.531 DEBUG 8196 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:47:24.533 TRACE 8196 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:47:24.535 TRACE 8196 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:47:24.537 TRACE 8196 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:47:24.538 DEBUG 8196 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:47:24.538 DEBUG 8196 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:47:24.539 DEBUG 8196 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:47:24.541  INFO 8196 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 17:47:49.889  INFO 8196 --- [Thread-15] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 17:47:49.889  INFO 8196 --- [Thread-15] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:47:49.905  INFO 8196 --- [Thread-15] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-02-21 17:47:50.992  INFO 8196 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 8196 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:47:50.993 DEBUG 8196 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:47:50.993  INFO 8196 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:47:51.335  INFO 8196 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:47:51.335  INFO 8196 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:47:51.354  INFO 8196 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 18ms. Found 0 JDBC repository interfaces.
2020-02-21 17:47:51.360  INFO 8196 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:47:51.360  INFO 8196 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:47:51.364  INFO 8196 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4ms. Found 0 JPA repository interfaces.
2020-02-21 17:47:51.464  INFO 8196 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:47:51.592  WARN 8196 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 17:47:51.685  INFO 8196 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:47:51.685  INFO 8196 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:47:51.686  INFO 8196 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:47:51.732  INFO 8196 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:47:51.732  INFO 8196 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 736 ms
2020-02-21 17:47:51.881  INFO 8196 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:47:51.886 ERROR 8196 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:47:51.888  INFO 8196 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-02-21 17:47:51.896  INFO 8196 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:47:52.241  INFO 8196 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:47:52.241  INFO 8196 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:47:52.272  INFO 8196 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:47:52.600  WARN 8196 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:47:52.975  INFO 8196 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:47:53.602  INFO 8196 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:47:53.602  INFO 8196 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 2.668 seconds (JVM running for 45.183)
2020-02-21 17:47:53.604  INFO 8196 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 17:48:05.051  INFO 8196 --- [Thread-25] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 17:48:05.051  INFO 8196 --- [Thread-25] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:48:05.051  INFO 8196 --- [Thread-25] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} closed
2020-02-21 17:48:05.646  INFO 8196 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 8196 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:48:05.647 DEBUG 8196 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:48:05.648  INFO 8196 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:48:05.880  INFO 8196 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:48:05.880  INFO 8196 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:48:05.886  INFO 8196 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5ms. Found 0 JDBC repository interfaces.
2020-02-21 17:48:05.889  INFO 8196 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:48:05.890  INFO 8196 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:48:05.894  INFO 8196 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3ms. Found 0 JPA repository interfaces.
2020-02-21 17:48:05.943  INFO 8196 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:48:06.011  WARN 8196 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 17:48:06.083  INFO 8196 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:48:06.083  INFO 8196 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:48:06.083  INFO 8196 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:48:06.118  INFO 8196 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:48:06.119  INFO 8196 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 468 ms
2020-02-21 17:48:06.222  INFO 8196 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:48:06.226 ERROR 8196 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:48:06.228  INFO 8196 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-3} inited
2020-02-21 17:48:06.233  INFO 8196 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:48:06.432  INFO 8196 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:48:06.432  INFO 8196 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:48:06.445  INFO 8196 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:48:06.602  WARN 8196 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:48:06.732  INFO 8196 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:48:07.061  INFO 8196 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:48:07.062  INFO 8196 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 1.47 seconds (JVM running for 58.642)
2020-02-21 17:48:07.063  INFO 8196 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 17:51:55.307  INFO 10260 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 10260 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:51:55.312 DEBUG 10260 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:51:55.312  INFO 10260 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:51:55.378  INFO 10260 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 17:51:55.379  INFO 10260 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 17:51:55.379  INFO 10260 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 17:51:56.560  INFO 10260 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:51:56.561  INFO 10260 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:51:56.611  INFO 10260 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 41ms. Found 0 JDBC repository interfaces.
2020-02-21 17:51:56.636  INFO 10260 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:51:56.636  INFO 10260 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:51:56.678  INFO 10260 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 22ms. Found 0 JPA repository interfaces.
2020-02-21 17:51:57.385  INFO 10260 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:51:57.934  INFO 10260 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:51:57.943  INFO 10260 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:51:57.943  INFO 10260 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:51:58.103  INFO 10260 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:51:58.103  INFO 10260 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2724 ms
2020-02-21 17:51:58.448  INFO 10260 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:51:58.515  INFO 10260 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 17:51:58.631  INFO 10260 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 17:51:58.739 ERROR 10260 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:51:58.746  INFO 10260 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 17:51:58.855  INFO 10260 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:51:59.898  INFO 10260 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:51:59.905  INFO 10260 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:51:59.931  INFO 10260 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:52:00.391  WARN 10260 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:52:00.704  INFO 10260 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:52:01.521  INFO 10260 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:52:01.523  INFO 10260 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 7.016 seconds (JVM running for 8.545)
2020-02-21 17:52:01.638  INFO 10260 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 17:52:01.638  INFO 10260 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 17:52:01.654  INFO 10260 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 16 ms
2020-02-21 17:52:01.786  INFO 10260 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 17:52:01.824 DEBUG 10260 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:52:02.087 DEBUG 10260 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:52:02.113 TRACE 10260 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:52:02.116 TRACE 10260 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 40, 35, 1
2020-02-21 17:52:02.122 DEBUG 10260 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:52:02.123 DEBUG 10260 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:52:02.125 TRACE 10260 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:52:02.125 TRACE 10260 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:52:02.126 DEBUG 10260 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:52:02.127 DEBUG 10260 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:52:02.128 DEBUG 10260 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:52:02.129 TRACE 10260 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:52:02.130 TRACE 10260 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:52:02.130 TRACE 10260 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:52:02.131 DEBUG 10260 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:52:02.131 DEBUG 10260 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:52:02.132 DEBUG 10260 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:52:02.138 TRACE 10260 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:52:02.138 TRACE 10260 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:52:02.139 DEBUG 10260 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:52:02.140 DEBUG 10260 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:52:02.142 TRACE 10260 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:52:02.143 TRACE 10260 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:52:02.144 TRACE 10260 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:52:02.144 DEBUG 10260 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:52:02.145 DEBUG 10260 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:52:02.145 DEBUG 10260 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:52:02.148 DEBUG 10260 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:52:02.149 DEBUG 10260 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 17:52:02.156 DEBUG 10260 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:52:02.241  INFO 10260 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 17:52:02.920  INFO 10260 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:52:02.929 DEBUG 10260 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:52:02.932 DEBUG 10260 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:52:02.935 TRACE 10260 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:52:02.936 TRACE 10260 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:52:02.937 TRACE 10260 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:52:02.938 TRACE 10260 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:52:02.939 DEBUG 10260 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:52:02.940  INFO 10260 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:52:03.022  INFO 10260 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 17:52:03.023 DEBUG 10260 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:52:03.023 DEBUG 10260 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:52:03.025 TRACE 10260 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:52:03.025 TRACE 10260 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 41, 35, 1
2020-02-21 17:52:03.027 DEBUG 10260 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:52:03.027 DEBUG 10260 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:52:03.029 TRACE 10260 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:52:03.030 TRACE 10260 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:52:03.031 DEBUG 10260 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:52:03.033 DEBUG 10260 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:52:03.034 DEBUG 10260 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:52:03.036 TRACE 10260 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:52:03.036 TRACE 10260 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:52:03.036 TRACE 10260 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:52:03.036 DEBUG 10260 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:52:03.037 DEBUG 10260 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:52:03.037 DEBUG 10260 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:52:03.039 TRACE 10260 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:52:03.039 TRACE 10260 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:52:03.040 DEBUG 10260 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:52:03.040 DEBUG 10260 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:52:03.042 TRACE 10260 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:52:03.042 TRACE 10260 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:52:03.043 TRACE 10260 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:52:03.044 DEBUG 10260 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:52:03.045 DEBUG 10260 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:52:03.045 DEBUG 10260 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:52:03.070 ERROR 10260 --- [http-nio-8080-exec-5] p.p.e.ControllerExceptionHandler         : Request URL : http://localhost:8080/comment/2，Exception : {}

org.springframework.web.util.NestedServletException: Handler dispatch failed; nested exception is java.lang.StackOverflowError
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1055)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.StackOverflowError: null
	at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698)
	at java.lang.StringBuilder.append(StringBuilder.java:214)
	at sun.util.calendar.CalendarUtils.sprintf0d(CalendarUtils.java:171)
	at java.util.Date.toString(Date.java:1038)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)

2020-02-21 17:52:03.076  WARN 10260 --- [http-nio-8080-exec-5] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.util.NestedServletException: Handler dispatch failed; nested exception is java.lang.StackOverflowError]
2020-02-21 17:53:49.954  INFO 10260 --- [Thread-15] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 17:53:49.954  INFO 10260 --- [Thread-15] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:53:49.954  INFO 10260 --- [Thread-15] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-02-21 17:53:51.483  INFO 10260 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 10260 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:53:51.483 DEBUG 10260 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:53:51.483  INFO 10260 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:53:51.801  INFO 10260 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:53:51.801  INFO 10260 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:53:51.811  INFO 10260 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9ms. Found 0 JDBC repository interfaces.
2020-02-21 17:53:51.815  INFO 10260 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:53:51.816  INFO 10260 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:53:51.822  INFO 10260 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6ms. Found 0 JPA repository interfaces.
2020-02-21 17:53:51.943  INFO 10260 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:53:52.056  WARN 10260 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 17:53:52.169  INFO 10260 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:53:52.171  INFO 10260 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:53:52.171  INFO 10260 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:53:52.238  INFO 10260 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:53:52.238  INFO 10260 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 750 ms
2020-02-21 17:53:52.421  INFO 10260 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:53:52.428 ERROR 10260 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:53:52.429  INFO 10260 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-02-21 17:53:52.436  INFO 10260 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:53:52.754  INFO 10260 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:53:52.754  INFO 10260 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:53:52.774  INFO 10260 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:53:53.015  WARN 10260 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:53:53.396  INFO 10260 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:54:40.422  INFO 13228 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 13228 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:54:40.422 DEBUG 13228 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:54:40.422  INFO 13228 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:54:40.547  INFO 13228 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 17:54:40.563  INFO 13228 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 17:54:40.563  INFO 13228 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 17:54:41.250  INFO 13228 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:54:41.250  INFO 13228 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:54:41.266  INFO 13228 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17ms. Found 0 JDBC repository interfaces.
2020-02-21 17:54:41.281  INFO 13228 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:54:41.281  INFO 13228 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:54:41.297  INFO 13228 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4ms. Found 0 JPA repository interfaces.
2020-02-21 17:54:41.609  INFO 13228 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:54:42.047  INFO 13228 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:54:42.062  INFO 13228 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:54:42.062  INFO 13228 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:54:42.187  INFO 13228 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:54:42.187  INFO 13228 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1624 ms
2020-02-21 17:54:42.513  INFO 13228 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:54:42.576  INFO 13228 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 17:54:42.687  INFO 13228 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 17:54:42.787 ERROR 13228 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:54:42.794  INFO 13228 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 17:54:42.897  INFO 13228 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:54:43.817  INFO 13228 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:54:43.825  INFO 13228 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:54:43.853  INFO 13228 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:54:44.156  WARN 13228 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:54:44.378  INFO 13228 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:54:44.961  INFO 13228 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:54:44.965  INFO 13228 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 5.483 seconds (JVM running for 7.044)
2020-02-21 17:54:47.948  INFO 13228 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 17:54:47.948  INFO 13228 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 17:54:47.964  INFO 13228 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 16 ms
2020-02-21 17:54:48.060  INFO 13228 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 17:54:48.086 DEBUG 13228 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:54:48.367 DEBUG 13228 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:54:48.384 TRACE 13228 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:54:48.385 TRACE 13228 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 41, 35, 1
2020-02-21 17:54:48.389 DEBUG 13228 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:54:48.389 DEBUG 13228 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:54:48.393 TRACE 13228 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:54:48.393 TRACE 13228 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:54:48.394 DEBUG 13228 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:54:48.395 DEBUG 13228 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:54:48.396 DEBUG 13228 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:54:48.396 TRACE 13228 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:54:48.397 TRACE 13228 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:54:48.397 TRACE 13228 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:54:48.397 DEBUG 13228 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:54:48.397 DEBUG 13228 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:54:48.398 DEBUG 13228 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:54:48.399 TRACE 13228 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:54:48.399 TRACE 13228 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:54:48.400 DEBUG 13228 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:54:48.400 DEBUG 13228 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:54:48.401 TRACE 13228 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:54:48.402 TRACE 13228 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:54:48.402 TRACE 13228 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:54:48.403 DEBUG 13228 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:54:48.403 DEBUG 13228 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:54:48.403 DEBUG 13228 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:54:48.405 DEBUG 13228 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:54:48.405 DEBUG 13228 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 17:54:48.422 DEBUG 13228 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:54:48.481  INFO 13228 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 17:54:49.233  INFO 13228 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:54:49.244 DEBUG 13228 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:54:49.245 DEBUG 13228 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:54:49.248 TRACE 13228 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:54:49.248 TRACE 13228 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:54:49.251 TRACE 13228 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:54:49.252 TRACE 13228 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:54:49.255 DEBUG 13228 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:54:49.256  INFO 13228 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:54:49.333  INFO 13228 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 17:54:49.334 DEBUG 13228 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:54:49.335 DEBUG 13228 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:54:49.337 TRACE 13228 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:54:49.337 TRACE 13228 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 42, 35, 1
2020-02-21 17:54:49.338 DEBUG 13228 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:54:49.339 DEBUG 13228 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:54:49.347 TRACE 13228 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:54:49.347 TRACE 13228 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:54:49.348 DEBUG 13228 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:54:49.348 DEBUG 13228 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:54:49.349 DEBUG 13228 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:54:49.350 TRACE 13228 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:54:49.351 TRACE 13228 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:54:49.351 TRACE 13228 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:54:49.351 DEBUG 13228 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:54:49.352 DEBUG 13228 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:54:49.352 DEBUG 13228 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:54:49.354 TRACE 13228 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:54:49.354 TRACE 13228 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:54:49.355 DEBUG 13228 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:54:49.356 DEBUG 13228 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:54:49.360 TRACE 13228 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:54:49.360 TRACE 13228 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:54:49.361 TRACE 13228 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:54:49.362 DEBUG 13228 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:54:49.363 DEBUG 13228 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:54:49.364 DEBUG 13228 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:54:49.389 ERROR 13228 --- [http-nio-8080-exec-6] p.p.e.ControllerExceptionHandler         : Request URL : http://localhost:8080/comment/2，Exception : {}

org.springframework.web.util.NestedServletException: Handler dispatch failed; nested exception is java.lang.StackOverflowError
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1055)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.StackOverflowError: null
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at sun.util.locale.provider.LocaleServiceProviderPool.getPool(LocaleServiceProviderPool.java:109)
	at sun.util.locale.provider.TimeZoneNameUtility.retrieveDisplayNamesImpl(TimeZoneNameUtility.java:147)
	at sun.util.locale.provider.TimeZoneNameUtility.retrieveDisplayName(TimeZoneNameUtility.java:137)
	at java.util.TimeZone.getDisplayName(TimeZone.java:400)
	at java.util.Date.toString(Date.java:1045)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)

2020-02-21 17:54:49.402  WARN 13228 --- [http-nio-8080-exec-6] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.util.NestedServletException: Handler dispatch failed; nested exception is java.lang.StackOverflowError]
2020-02-21 17:55:02.880  INFO 13228 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/index, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.index, args=[org.apache.catalina.session.StandardSessionFacade@52d8301f, {}])
2020-02-21 17:55:02.884 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.m.TypeMapper.queryTypeByCountsBlog   : ==>  Preparing: SELECT DISTINCT t_type.* FROM t_type,t_blog where t_type.id = type_id Limit ? 
2020-02-21 17:55:02.884 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.m.TypeMapper.queryTypeByCountsBlog   : ==> Parameters: 6(Integer)
2020-02-21 17:55:02.891 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==    Columns: id, name
2020-02-21 17:55:02.892 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 2, 进阶知识
2020-02-21 17:55:02.892 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 17:55:02.893 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 2(Integer)
2020-02-21 17:55:02.894 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:55:02.895 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 5, 1, 1, <<BLOB>>, 1, 2019-12-20 20:30:42, <<BLOB>>, [TOC], 原创, 1, 1, JSR 303校验, 2019-12-20 20:30:42, 0, 2, 1
2020-02-21 17:55:02.896 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:55:02.896 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 2(Integer)
2020-02-21 17:55:02.897 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 17:55:02.897 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 2, 进阶知识
2020-02-21 17:55:02.898 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 17:55:02.898 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:02.899 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 5(Integer)
2020-02-21 17:55:02.900 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 0
2020-02-21 17:55:02.901 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:55:02.902 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:02.904 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 6(Integer)
2020-02-21 17:55:02.909 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 17:55:02.909 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 17:55:02.909 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 17:55:02.910 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 17:55:02.911 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 2
2020-02-21 17:55:02.912 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 3, 实战演练
2020-02-21 17:55:02.912 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 17:55:02.912 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 3(Integer)
2020-02-21 17:55:02.914 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 0
2020-02-21 17:55:02.914 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 30, 认知升级
2020-02-21 17:55:02.915 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 17:55:02.915 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 30(Integer)
2020-02-21 17:55:02.916 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:55:02.917 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:55:02.917 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:55:02.917 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 30(Integer)
2020-02-21 17:55:02.918 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 17:55:02.919 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 30, 认知升级
2020-02-21 17:55:02.920 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 17:55:02.923 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:02.923 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 7(Integer)
2020-02-21 17:55:02.925 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 17:55:02.925 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 17:55:02.925 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 7, SpringMVC
2020-02-21 17:55:02.926 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 17:55:02.926 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 17:55:02.927 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:02.927 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 9(Integer)
2020-02-21 17:55:02.928 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 17:55:02.928 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 17:55:02.929 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 17:55:02.929 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 5, Mybatis
2020-02-21 17:55:02.929 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 3
2020-02-21 17:55:02.929 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 2
2020-02-21 17:55:02.929 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 34, 后端
2020-02-21 17:55:02.929 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 17:55:02.929 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 34(Integer)
2020-02-21 17:55:02.931 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:55:02.931 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 5, 34, 1
2020-02-21 17:55:02.932 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:55:02.932 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 34(Integer)
2020-02-21 17:55:02.933 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 17:55:02.933 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 34, 后端
2020-02-21 17:55:02.933 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 17:55:02.934 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:02.934 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 3(Integer)
2020-02-21 17:55:02.935 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 17:55:02.935 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 1, SpringBoot
2020-02-21 17:55:02.937 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 8, Mysql
2020-02-21 17:55:02.939 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 17, Hibernate
2020-02-21 17:55:02.940 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 3
2020-02-21 17:55:02.941 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 17:55:02.941 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:02.942 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 10(Integer)
2020-02-21 17:55:02.944 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 17:55:02.944 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 17:55:02.944 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 17:55:02.945 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 5, Mybatis
2020-02-21 17:55:02.945 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 7, SpringMVC
2020-02-21 17:55:02.945 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 4
2020-02-21 17:55:02.945 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 2
2020-02-21 17:55:02.945 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 35, 算法
2020-02-21 17:55:02.946 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 17:55:02.946 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 35(Integer)
2020-02-21 17:55:02.947 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:55:02.947 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 42, 35, 1
2020-02-21 17:55:02.948 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:55:02.948 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 35(Integer)
2020-02-21 17:55:02.949 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 17:55:02.950 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 35, 算法
2020-02-21 17:55:02.950 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 17:55:02.950 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:02.950 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 2(Integer)
2020-02-21 17:55:02.952 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 17:55:02.952 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 1, SpringBoot
2020-02-21 17:55:02.952 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 6, MD5
2020-02-21 17:55:02.952 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 17:55:02.953 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 1
2020-02-21 17:55:02.955 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 41, 工具
2020-02-21 17:55:02.955 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 17:55:02.955 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 41(Integer)
2020-02-21 17:55:02.957 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:55:02.957 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 17:55:02.959 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:55:02.959 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 41(Integer)
2020-02-21 17:55:02.960 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 17:55:02.960 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 41, 工具
2020-02-21 17:55:02.960 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 17:55:02.961 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:02.961 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 4(Integer)
2020-02-21 17:55:02.962 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 17:55:02.962 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 10, git
2020-02-21 17:55:02.962 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 11, github
2020-02-21 17:55:02.962 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 17:55:02.963 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:55:02.963 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:02.963 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 8(Integer)
2020-02-21 17:55:02.965 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 17:55:02.965 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 18, IntelliJ IDEA
2020-02-21 17:55:02.965 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 1
2020-02-21 17:55:02.965 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 2
2020-02-21 17:55:02.965 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==      Total: 6
2020-02-21 17:55:02.966 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.m.TagMapper.queryTagByCountsBlog     : ==>  Preparing: SELECT DISTINCT t_tag.* FROM t_tag,t_blog_tags where id = tags_id Limit ? 
2020-02-21 17:55:02.966 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.m.TagMapper.queryTagByCountsBlog     : ==> Parameters: 9(Integer)
2020-02-21 17:55:02.968 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.TagMapper.queryTagByCountsBlog     : <==    Columns: id, name
2020-02-21 17:55:02.968 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 1, SpringBoot
2020-02-21 17:55:02.968 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 17:55:02.968 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 1(Integer)
2020-02-21 17:55:02.972 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:55:02.972 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 42, 35, 1
2020-02-21 17:55:02.974 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:55:02.974 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 35(Integer)
2020-02-21 17:55:02.975 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 17:55:02.976 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 35, 算法
2020-02-21 17:55:02.976 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 17:55:02.976 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:02.976 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 2(Integer)
2020-02-21 17:55:02.978 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 17:55:02.978 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 1, SpringBoot
2020-02-21 17:55:02.978 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 6, MD5
2020-02-21 17:55:02.978 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 17:55:02.978 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 5, 34, 1
2020-02-21 17:55:02.981 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:55:02.981 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 34(Integer)
2020-02-21 17:55:02.982 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 17:55:02.982 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 34, 后端
2020-02-21 17:55:02.982 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 17:55:02.983 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:02.983 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 3(Integer)
2020-02-21 17:55:02.984 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 17:55:02.984 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 1, SpringBoot
2020-02-21 17:55:02.984 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 8, Mysql
2020-02-21 17:55:02.985 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 17, Hibernate
2020-02-21 17:55:02.985 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 3
2020-02-21 17:55:02.985 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 2
2020-02-21 17:55:02.985 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 2, JavaSE
2020-02-21 17:55:02.985 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 17:55:02.986 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 2(Integer)
2020-02-21 17:55:02.988 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:55:02.989 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:55:02.990 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:55:02.991 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 2(Integer)
2020-02-21 17:55:02.992 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 17:55:02.992 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 2, 进阶知识
2020-02-21 17:55:02.993 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 17:55:02.993 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:02.993 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 6(Integer)
2020-02-21 17:55:02.994 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 17:55:02.994 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 17:55:02.995 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 17:55:02.995 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 17:55:02.995 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:55:02.995 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:55:02.996 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 30(Integer)
2020-02-21 17:55:02.997 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 17:55:02.997 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 30, 认知升级
2020-02-21 17:55:02.997 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 17:55:02.997 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:02.998 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 7(Integer)
2020-02-21 17:55:02.999 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 17:55:02.999 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 17:55:02.999 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 7, SpringMVC
2020-02-21 17:55:02.999 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 17:55:02.999 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 17:55:03.000 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:03.000 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 9(Integer)
2020-02-21 17:55:03.001 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 17:55:03.001 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 17:55:03.001 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 17:55:03.001 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 5, Mybatis
2020-02-21 17:55:03.001 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 3
2020-02-21 17:55:03.002 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 17:55:03.004 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:03.004 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 10(Integer)
2020-02-21 17:55:03.005 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 17:55:03.006 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 17:55:03.006 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 17:55:03.006 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 5, Mybatis
2020-02-21 17:55:03.006 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 7, SpringMVC
2020-02-21 17:55:03.006 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 4
2020-02-21 17:55:03.007 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 4
2020-02-21 17:55:03.007 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 4, Spring
2020-02-21 17:55:03.007 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 17:55:03.008 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 4(Integer)
2020-02-21 17:55:03.009 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:55:03.009 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:55:03.010 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 17:55:03.011 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 17:55:03.011 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 3
2020-02-21 17:55:03.011 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 5, Mybatis
2020-02-21 17:55:03.011 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 17:55:03.011 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 5(Integer)
2020-02-21 17:55:03.013 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:55:03.013 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 17:55:03.014 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 17:55:03.014 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 2
2020-02-21 17:55:03.014 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 6, MD5
2020-02-21 17:55:03.015 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 17:55:03.015 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 6(Integer)
2020-02-21 17:55:03.016 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:55:03.016 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 42, 35, 1
2020-02-21 17:55:03.017 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 1
2020-02-21 17:55:03.017 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 7, SpringMVC
2020-02-21 17:55:03.017 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 17:55:03.018 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 7(Integer)
2020-02-21 17:55:03.019 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:55:03.020 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:55:03.022 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 17:55:03.023 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 2
2020-02-21 17:55:03.024 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 8, Mysql
2020-02-21 17:55:03.024 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 17:55:03.024 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 8(Integer)
2020-02-21 17:55:03.026 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:55:03.027 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 5, 34, 1
2020-02-21 17:55:03.028 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 1
2020-02-21 17:55:03.028 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 10, git
2020-02-21 17:55:03.028 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 17:55:03.028 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 10(Integer)
2020-02-21 17:55:03.030 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:55:03.030 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 17:55:03.031 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:55:03.031 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 41(Integer)
2020-02-21 17:55:03.033 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 17:55:03.033 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 41, 工具
2020-02-21 17:55:03.033 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 17:55:03.033 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:03.034 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 4(Integer)
2020-02-21 17:55:03.035 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 17:55:03.035 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 10, git
2020-02-21 17:55:03.035 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 11, github
2020-02-21 17:55:03.035 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 17:55:03.035 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 1
2020-02-21 17:55:03.036 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 11, github
2020-02-21 17:55:03.038 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 17:55:03.040 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 11(Integer)
2020-02-21 17:55:03.042 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:55:03.043 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 17:55:03.043 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 1
2020-02-21 17:55:03.044 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.m.TagMapper.queryTagByCountsBlog     : <==      Total: 9
2020-02-21 17:55:03.045 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:55:03.045 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 8(Integer)
2020-02-21 17:55:03.046 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:55:03.046 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:55:03.047 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:55:03.047 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:55:03.047 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 17:55:03.048 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 17:55:03.048 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 5, 1, 1, <<BLOB>>, 1, 2019-12-20 20:30:42, <<BLOB>>, [TOC], 原创, 1, 1, JSR 303校验, 2019-12-20 20:30:42, 0, 2, 1
2020-02-21 17:55:03.048 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 17:55:03.049 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 5, 34, 1
2020-02-21 17:55:03.049 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 8
2020-02-21 17:55:03.049 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryBlogIndexPage      : ==>  Preparing: Select * from t_blog where status = true order by update_time desc 
2020-02-21 17:55:03.050 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryBlogIndexPage      : ==> Parameters: 
2020-02-21 17:55:03.051 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryBlogIndexPage      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:55:03.051 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 42, 35, 1
2020-02-21 17:55:03.052 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:55:03.052 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:55:03.056 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:55:03.056 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:55:03.057 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:55:03.057 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:03.057 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:55:03.059 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:55:03.059 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:55:03.060 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:55:03.060 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:55:03.061 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 5, 34, 1
2020-02-21 17:55:03.062 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:55:03.062 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 34(Integer)
2020-02-21 17:55:03.063 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:55:03.063 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 34, 后端
2020-02-21 17:55:03.063 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:55:03.063 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:03.064 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 3(Integer)
2020-02-21 17:55:03.065 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:55:03.065 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:55:03.065 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 8, Mysql
2020-02-21 17:55:03.066 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 17, Hibernate
2020-02-21 17:55:03.066 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 17:55:03.066 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 17:55:03.067 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:55:03.067 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 41(Integer)
2020-02-21 17:55:03.068 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:55:03.068 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 41, 工具
2020-02-21 17:55:03.068 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:55:03.069 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:03.070 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 4(Integer)
2020-02-21 17:55:03.073 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:55:03.073 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 10, git
2020-02-21 17:55:03.074 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 11, github
2020-02-21 17:55:03.074 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:55:03.074 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 5, 1, 1, <<BLOB>>, 1, 2019-12-20 20:30:42, <<BLOB>>, [TOC], 原创, 1, 1, JSR 303校验, 2019-12-20 20:30:42, 0, 2, 1
2020-02-21 17:55:03.075 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:55:03.076 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 2(Integer)
2020-02-21 17:55:03.077 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:55:03.077 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 2, 进阶知识
2020-02-21 17:55:03.077 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:55:03.077 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:03.078 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 5(Integer)
2020-02-21 17:55:03.079 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 0
2020-02-21 17:55:03.080 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 17:55:03.080 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:03.080 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 10(Integer)
2020-02-21 17:55:03.082 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:55:03.082 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 17:55:03.082 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 17:55:03.082 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 5, Mybatis
2020-02-21 17:55:03.082 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 7, SpringMVC
2020-02-21 17:55:03.082 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 4
2020-02-21 17:55:03.083 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 17:55:03.083 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:55:03.083 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 30(Integer)
2020-02-21 17:55:03.085 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:55:03.085 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 30, 认知升级
2020-02-21 17:55:03.085 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:55:03.085 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:03.085 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 9(Integer)
2020-02-21 17:55:03.089 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:55:03.089 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 17:55:03.089 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 17:55:03.089 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 5, Mybatis
2020-02-21 17:55:03.089 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 17:55:03.089 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:55:03.090 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:03.091 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 8(Integer)
2020-02-21 17:55:03.092 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:55:03.092 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 18, IntelliJ IDEA
2020-02-21 17:55:03.093 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 1
2020-02-21 17:55:03.093 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:55:03.094 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:03.094 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 7(Integer)
2020-02-21 17:55:03.095 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:55:03.096 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 17:55:03.096 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 7, SpringMVC
2020-02-21 17:55:03.096 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:55:03.096 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:55:03.097 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:03.097 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 6(Integer)
2020-02-21 17:55:03.098 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:55:03.099 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 17:55:03.099 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 17:55:03.099 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:55:03.099 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryBlogIndexPage      : <==      Total: 9
2020-02-21 17:55:03.102 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryBlogIndexPage      : ==>  Preparing: Select * from t_blog where status = true order by update_time desc 
2020-02-21 17:55:03.102 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryBlogIndexPage      : ==> Parameters: 
2020-02-21 17:55:03.106 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryBlogIndexPage      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:55:03.106 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 42, 35, 1
2020-02-21 17:55:03.107 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:55:03.107 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:55:03.109 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:55:03.109 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:55:03.110 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:55:03.110 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:03.110 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:55:03.111 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:55:03.112 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:55:03.112 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:55:03.112 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:55:03.113 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 5, 34, 1
2020-02-21 17:55:03.113 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:55:03.113 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 34(Integer)
2020-02-21 17:55:03.114 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:55:03.114 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 34, 后端
2020-02-21 17:55:03.115 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:55:03.115 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:03.115 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 3(Integer)
2020-02-21 17:55:03.117 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:55:03.117 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:55:03.117 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 8, Mysql
2020-02-21 17:55:03.117 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 17, Hibernate
2020-02-21 17:55:03.117 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 17:55:03.117 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 17:55:03.118 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:55:03.118 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 41(Integer)
2020-02-21 17:55:03.119 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:55:03.119 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 41, 工具
2020-02-21 17:55:03.120 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:55:03.121 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:03.122 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 4(Integer)
2020-02-21 17:55:03.123 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:55:03.124 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 10, git
2020-02-21 17:55:03.124 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 11, github
2020-02-21 17:55:03.124 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:55:03.125 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 5, 1, 1, <<BLOB>>, 1, 2019-12-20 20:30:42, <<BLOB>>, [TOC], 原创, 1, 1, JSR 303校验, 2019-12-20 20:30:42, 0, 2, 1
2020-02-21 17:55:03.125 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:55:03.126 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 2(Integer)
2020-02-21 17:55:03.127 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:55:03.127 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 2, 进阶知识
2020-02-21 17:55:03.127 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:55:03.128 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:03.128 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 5(Integer)
2020-02-21 17:55:03.129 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 0
2020-02-21 17:55:03.129 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 17:55:03.132 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:03.132 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 10(Integer)
2020-02-21 17:55:03.133 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:55:03.134 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 17:55:03.134 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 17:55:03.134 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 5, Mybatis
2020-02-21 17:55:03.134 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 7, SpringMVC
2020-02-21 17:55:03.134 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 4
2020-02-21 17:55:03.135 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 17:55:03.135 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:55:03.135 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 30(Integer)
2020-02-21 17:55:03.137 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:55:03.137 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 30, 认知升级
2020-02-21 17:55:03.138 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:55:03.139 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:03.139 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 9(Integer)
2020-02-21 17:55:03.141 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:55:03.141 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 17:55:03.141 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 17:55:03.142 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 5, Mybatis
2020-02-21 17:55:03.142 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 17:55:03.142 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:55:03.143 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:03.143 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 8(Integer)
2020-02-21 17:55:03.144 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:55:03.144 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 18, IntelliJ IDEA
2020-02-21 17:55:03.144 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 1
2020-02-21 17:55:03.145 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:55:03.145 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:03.145 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 7(Integer)
2020-02-21 17:55:03.147 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:55:03.147 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 17:55:03.147 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 7, SpringMVC
2020-02-21 17:55:03.147 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:55:03.147 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:55:03.148 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:03.148 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 6(Integer)
2020-02-21 17:55:03.159 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:55:03.160 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 17:55:03.160 TRACE 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 17:55:03.160 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:55:03.160 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryBlogIndexPage      : <==      Total: 9
2020-02-21 17:55:03.163  INFO 13228 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/index
2020-02-21 17:55:03.545  INFO 13228 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:55:03.546 DEBUG 13228 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:55:03.546 DEBUG 13228 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:55:03.548 TRACE 13228 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:55:03.548 TRACE 13228 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:55:03.549 TRACE 13228 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:55:03.550 TRACE 13228 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:55:03.550 DEBUG 13228 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:55:03.551  INFO 13228 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:55:05.997  INFO 13228 --- [http-nio-8080-exec-7] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/3, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 3])
2020-02-21 17:55:05.998 DEBUG 13228 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:55:05.998 DEBUG 13228 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 3(Integer)
2020-02-21 17:55:06.000 TRACE 13228 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:55:06.001 TRACE 13228 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 5, 34, 1
2020-02-21 17:55:06.002 DEBUG 13228 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:55:06.003 DEBUG 13228 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 34(Integer)
2020-02-21 17:55:06.009 TRACE 13228 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:55:06.009 TRACE 13228 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 34, 后端
2020-02-21 17:55:06.009 DEBUG 13228 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:55:06.009 DEBUG 13228 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:06.010 DEBUG 13228 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 3(Integer)
2020-02-21 17:55:06.016 TRACE 13228 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:55:06.017 TRACE 13228 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:55:06.017 TRACE 13228 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 8, Mysql
2020-02-21 17:55:06.017 TRACE 13228 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 17, Hibernate
2020-02-21 17:55:06.017 DEBUG 13228 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 17:55:06.018 DEBUG 13228 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:55:06.018 DEBUG 13228 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 3(Integer)
2020-02-21 17:55:06.024 DEBUG 13228 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : <====      Total: 0
2020-02-21 17:55:06.025 DEBUG 13228 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:55:06.025 DEBUG 13228 --- [http-nio-8080-exec-7] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:55:06.026 DEBUG 13228 --- [http-nio-8080-exec-7] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 3(Integer)
2020-02-21 17:55:06.031 DEBUG 13228 --- [http-nio-8080-exec-7] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:55:06.034  INFO 13228 --- [http-nio-8080-exec-7] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 17:55:06.267  INFO 13228 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:55:06.267 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:55:06.267 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:55:06.274 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:55:06.274 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:55:06.275 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:55:06.275 TRACE 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:55:06.275 DEBUG 13228 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:55:06.276  INFO 13228 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:55:06.368  INFO 13228 --- [http-nio-8080-exec-9] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/3, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[3, {}])
2020-02-21 17:55:06.370 DEBUG 13228 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:55:06.372 DEBUG 13228 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 3(Integer)
2020-02-21 17:55:06.375 TRACE 13228 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:55:06.375 TRACE 13228 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 6, 34, 1
2020-02-21 17:55:06.376 DEBUG 13228 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:55:06.376 DEBUG 13228 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 34(Integer)
2020-02-21 17:55:06.378 TRACE 13228 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:55:06.378 TRACE 13228 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 34, 后端
2020-02-21 17:55:06.378 DEBUG 13228 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:55:06.378 DEBUG 13228 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:55:06.378 DEBUG 13228 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 3(Integer)
2020-02-21 17:55:06.380 TRACE 13228 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:55:06.380 TRACE 13228 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:55:06.380 TRACE 13228 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 8, Mysql
2020-02-21 17:55:06.380 TRACE 13228 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 17, Hibernate
2020-02-21 17:55:06.380 DEBUG 13228 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 17:55:06.381 DEBUG 13228 --- [http-nio-8080-exec-9] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:55:06.381 DEBUG 13228 --- [http-nio-8080-exec-9] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 3(Integer)
2020-02-21 17:55:06.383 DEBUG 13228 --- [http-nio-8080-exec-9] p.p.m.C.queryCommentByBlogId             : <====      Total: 0
2020-02-21 17:55:06.383 DEBUG 13228 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:55:06.383  INFO 13228 --- [http-nio-8080-exec-9] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 17:57:04.034  INFO 9288 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 9288 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:57:04.037 DEBUG 9288 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:57:04.038  INFO 9288 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:57:04.091  INFO 9288 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 17:57:04.092  INFO 9288 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 17:57:04.093  INFO 9288 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 17:57:04.973  INFO 9288 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:57:04.973  INFO 9288 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:57:05.035  INFO 9288 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 44ms. Found 0 JDBC repository interfaces.
2020-02-21 17:57:05.051  INFO 9288 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:57:05.051  INFO 9288 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:57:05.066  INFO 9288 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15ms. Found 0 JPA repository interfaces.
2020-02-21 17:57:05.797  INFO 9288 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:57:06.405  INFO 9288 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:57:06.416  INFO 9288 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:57:06.416  INFO 9288 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:57:06.563  INFO 9288 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:57:06.563  INFO 9288 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2470 ms
2020-02-21 17:57:06.871  INFO 9288 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:57:06.930  INFO 9288 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 17:57:07.034  INFO 9288 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 17:57:07.132 ERROR 9288 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:57:07.138  INFO 9288 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 17:57:07.274  INFO 9288 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:57:08.228  INFO 9288 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:57:08.234  INFO 9288 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:57:08.265  INFO 9288 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:57:08.569  WARN 9288 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:57:08.779  INFO 9288 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:57:09.386  INFO 9288 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:57:09.389  INFO 9288 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 6.045 seconds (JVM running for 7.509)
2020-02-21 17:57:14.340  INFO 9288 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 17:57:14.341  INFO 9288 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 17:57:14.353  INFO 9288 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 12 ms
2020-02-21 17:57:14.465  INFO 9288 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/3, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 3])
2020-02-21 17:57:14.494 DEBUG 9288 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:57:14.754 DEBUG 9288 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 3(Integer)
2020-02-21 17:57:14.769 TRACE 9288 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:57:14.773 TRACE 9288 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 6, 34, 1
2020-02-21 17:57:14.778 DEBUG 9288 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:57:14.778 DEBUG 9288 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 34(Integer)
2020-02-21 17:57:14.779 TRACE 9288 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:57:14.779 TRACE 9288 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 34, 后端
2020-02-21 17:57:14.780 DEBUG 9288 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:57:14.780 DEBUG 9288 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:14.781 DEBUG 9288 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 3(Integer)
2020-02-21 17:57:14.782 TRACE 9288 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:57:14.782 TRACE 9288 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:57:14.782 TRACE 9288 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 8, Mysql
2020-02-21 17:57:14.782 TRACE 9288 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 17, Hibernate
2020-02-21 17:57:14.782 DEBUG 9288 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 17:57:14.783 DEBUG 9288 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:57:14.783 DEBUG 9288 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 3(Integer)
2020-02-21 17:57:14.784 DEBUG 9288 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====      Total: 0
2020-02-21 17:57:14.784 DEBUG 9288 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:57:14.786 DEBUG 9288 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:57:14.787 DEBUG 9288 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 3(Integer)
2020-02-21 17:57:14.794 DEBUG 9288 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:57:14.836  INFO 9288 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 17:57:15.584  INFO 9288 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:57:15.587 DEBUG 9288 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:57:15.587 DEBUG 9288 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:57:15.587 TRACE 9288 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:57:15.587 TRACE 9288 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:57:15.599 TRACE 9288 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:57:15.601 TRACE 9288 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:57:15.603 DEBUG 9288 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:57:15.603  INFO 9288 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:57:15.682  INFO 9288 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/3, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[3, {}])
2020-02-21 17:57:15.682 DEBUG 9288 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:57:15.683 DEBUG 9288 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 3(Integer)
2020-02-21 17:57:15.685 TRACE 9288 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:57:15.686 TRACE 9288 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 7, 34, 1
2020-02-21 17:57:15.690 DEBUG 9288 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:57:15.690 DEBUG 9288 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 34(Integer)
2020-02-21 17:57:15.692 TRACE 9288 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:57:15.693 TRACE 9288 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 34, 后端
2020-02-21 17:57:15.694 DEBUG 9288 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:57:15.695 DEBUG 9288 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:15.696 DEBUG 9288 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 3(Integer)
2020-02-21 17:57:15.698 TRACE 9288 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:57:15.698 TRACE 9288 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:57:15.699 TRACE 9288 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 8, Mysql
2020-02-21 17:57:15.699 TRACE 9288 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 17, Hibernate
2020-02-21 17:57:15.699 DEBUG 9288 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 17:57:15.700 DEBUG 9288 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:57:15.701 DEBUG 9288 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 3(Integer)
2020-02-21 17:57:15.703 DEBUG 9288 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====      Total: 0
2020-02-21 17:57:15.704 DEBUG 9288 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:57:15.706  INFO 9288 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 17:57:20.110  INFO 9288 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/index, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.index, args=[org.apache.catalina.session.StandardSessionFacade@5c51c019, {}])
2020-02-21 17:57:20.114 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.m.TypeMapper.queryTypeByCountsBlog   : ==>  Preparing: SELECT DISTINCT t_type.* FROM t_type,t_blog where t_type.id = type_id Limit ? 
2020-02-21 17:57:20.115 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.m.TypeMapper.queryTypeByCountsBlog   : ==> Parameters: 6(Integer)
2020-02-21 17:57:20.116 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==    Columns: id, name
2020-02-21 17:57:20.116 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 2, 进阶知识
2020-02-21 17:57:20.117 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 17:57:20.117 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 2(Integer)
2020-02-21 17:57:20.118 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:57:20.121 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 5, 1, 1, <<BLOB>>, 1, 2019-12-20 20:30:42, <<BLOB>>, [TOC], 原创, 1, 1, JSR 303校验, 2019-12-20 20:30:42, 0, 2, 1
2020-02-21 17:57:20.124 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:57:20.124 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 2(Integer)
2020-02-21 17:57:20.126 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 17:57:20.126 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 2, 进阶知识
2020-02-21 17:57:20.127 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 17:57:20.127 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.128 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 5(Integer)
2020-02-21 17:57:20.129 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 0
2020-02-21 17:57:20.129 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:57:20.130 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.130 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 6(Integer)
2020-02-21 17:57:20.132 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 17:57:20.132 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 17:57:20.133 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 17:57:20.133 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 17:57:20.133 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 2
2020-02-21 17:57:20.133 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 3, 实战演练
2020-02-21 17:57:20.133 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 17:57:20.134 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 3(Integer)
2020-02-21 17:57:20.138 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 0
2020-02-21 17:57:20.139 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 30, 认知升级
2020-02-21 17:57:20.139 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 17:57:20.140 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 30(Integer)
2020-02-21 17:57:20.143 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:57:20.143 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:57:20.145 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:57:20.145 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 30(Integer)
2020-02-21 17:57:20.146 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 17:57:20.146 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 30, 认知升级
2020-02-21 17:57:20.147 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 17:57:20.148 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.148 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 7(Integer)
2020-02-21 17:57:20.149 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 17:57:20.150 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 17:57:20.150 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 7, SpringMVC
2020-02-21 17:57:20.150 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 17:57:20.151 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 17:57:20.152 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.152 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 9(Integer)
2020-02-21 17:57:20.156 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 17:57:20.156 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 17:57:20.156 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 17:57:20.156 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 5, Mybatis
2020-02-21 17:57:20.157 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 3
2020-02-21 17:57:20.157 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 2
2020-02-21 17:57:20.157 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 34, 后端
2020-02-21 17:57:20.158 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 17:57:20.158 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 34(Integer)
2020-02-21 17:57:20.159 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:57:20.160 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 7, 34, 1
2020-02-21 17:57:20.160 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:57:20.161 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 34(Integer)
2020-02-21 17:57:20.162 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 17:57:20.162 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 34, 后端
2020-02-21 17:57:20.162 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 17:57:20.162 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.163 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 3(Integer)
2020-02-21 17:57:20.164 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 17:57:20.164 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 1, SpringBoot
2020-02-21 17:57:20.165 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 8, Mysql
2020-02-21 17:57:20.165 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 17, Hibernate
2020-02-21 17:57:20.165 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 3
2020-02-21 17:57:20.166 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 17:57:20.166 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.166 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 10(Integer)
2020-02-21 17:57:20.168 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 17:57:20.168 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 17:57:20.168 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 17:57:20.168 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 5, Mybatis
2020-02-21 17:57:20.168 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 7, SpringMVC
2020-02-21 17:57:20.168 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 4
2020-02-21 17:57:20.168 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 2
2020-02-21 17:57:20.169 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 35, 算法
2020-02-21 17:57:20.169 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 17:57:20.170 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 35(Integer)
2020-02-21 17:57:20.172 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:57:20.173 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 42, 35, 1
2020-02-21 17:57:20.174 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:57:20.175 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 35(Integer)
2020-02-21 17:57:20.176 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 17:57:20.176 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 35, 算法
2020-02-21 17:57:20.176 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 17:57:20.177 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.177 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 2(Integer)
2020-02-21 17:57:20.178 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 17:57:20.178 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 1, SpringBoot
2020-02-21 17:57:20.178 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 6, MD5
2020-02-21 17:57:20.178 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 17:57:20.178 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 1
2020-02-21 17:57:20.179 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 41, 工具
2020-02-21 17:57:20.179 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 17:57:20.179 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 41(Integer)
2020-02-21 17:57:20.180 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:57:20.181 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 17:57:20.181 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:57:20.182 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 41(Integer)
2020-02-21 17:57:20.183 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 17:57:20.183 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 41, 工具
2020-02-21 17:57:20.183 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 17:57:20.183 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.183 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 4(Integer)
2020-02-21 17:57:20.185 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 17:57:20.185 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 10, git
2020-02-21 17:57:20.185 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 11, github
2020-02-21 17:57:20.185 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 17:57:20.185 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:57:20.187 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.187 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 8(Integer)
2020-02-21 17:57:20.189 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 17:57:20.189 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 18, IntelliJ IDEA
2020-02-21 17:57:20.190 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 1
2020-02-21 17:57:20.190 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 2
2020-02-21 17:57:20.190 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==      Total: 6
2020-02-21 17:57:20.192 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.m.TagMapper.queryTagByCountsBlog     : ==>  Preparing: SELECT DISTINCT t_tag.* FROM t_tag,t_blog_tags where id = tags_id Limit ? 
2020-02-21 17:57:20.192 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.m.TagMapper.queryTagByCountsBlog     : ==> Parameters: 9(Integer)
2020-02-21 17:57:20.193 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.TagMapper.queryTagByCountsBlog     : <==    Columns: id, name
2020-02-21 17:57:20.193 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 1, SpringBoot
2020-02-21 17:57:20.194 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 17:57:20.194 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 1(Integer)
2020-02-21 17:57:20.195 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:57:20.196 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 42, 35, 1
2020-02-21 17:57:20.197 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:57:20.197 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 35(Integer)
2020-02-21 17:57:20.198 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 17:57:20.198 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 35, 算法
2020-02-21 17:57:20.198 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 17:57:20.199 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.199 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 2(Integer)
2020-02-21 17:57:20.200 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 17:57:20.200 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 1, SpringBoot
2020-02-21 17:57:20.200 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 6, MD5
2020-02-21 17:57:20.200 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 17:57:20.201 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 7, 34, 1
2020-02-21 17:57:20.206 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:57:20.206 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 34(Integer)
2020-02-21 17:57:20.208 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 17:57:20.208 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 34, 后端
2020-02-21 17:57:20.208 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 17:57:20.208 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.209 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 3(Integer)
2020-02-21 17:57:20.210 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 17:57:20.210 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 1, SpringBoot
2020-02-21 17:57:20.210 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 8, Mysql
2020-02-21 17:57:20.210 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 17, Hibernate
2020-02-21 17:57:20.210 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 3
2020-02-21 17:57:20.210 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 2
2020-02-21 17:57:20.210 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 2, JavaSE
2020-02-21 17:57:20.210 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 17:57:20.211 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 2(Integer)
2020-02-21 17:57:20.212 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:57:20.212 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:57:20.213 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:57:20.213 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 2(Integer)
2020-02-21 17:57:20.214 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 17:57:20.214 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 2, 进阶知识
2020-02-21 17:57:20.214 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 17:57:20.215 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.215 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 6(Integer)
2020-02-21 17:57:20.216 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 17:57:20.216 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 17:57:20.217 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 17:57:20.217 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 17:57:20.217 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:57:20.218 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:57:20.218 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 30(Integer)
2020-02-21 17:57:20.219 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 17:57:20.219 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 30, 认知升级
2020-02-21 17:57:20.220 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 17:57:20.221 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.221 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 7(Integer)
2020-02-21 17:57:20.223 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 17:57:20.223 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 17:57:20.223 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 7, SpringMVC
2020-02-21 17:57:20.223 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 17:57:20.224 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 17:57:20.225 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.226 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 9(Integer)
2020-02-21 17:57:20.227 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 17:57:20.227 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 17:57:20.227 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 17:57:20.227 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 5, Mybatis
2020-02-21 17:57:20.227 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 3
2020-02-21 17:57:20.228 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 17:57:20.229 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.229 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 10(Integer)
2020-02-21 17:57:20.230 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 17:57:20.231 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 17:57:20.231 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 17:57:20.231 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 5, Mybatis
2020-02-21 17:57:20.231 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 7, SpringMVC
2020-02-21 17:57:20.231 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 4
2020-02-21 17:57:20.231 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 4
2020-02-21 17:57:20.231 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 4, Spring
2020-02-21 17:57:20.232 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 17:57:20.232 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 4(Integer)
2020-02-21 17:57:20.233 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:57:20.234 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:57:20.234 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 17:57:20.235 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 17:57:20.235 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 3
2020-02-21 17:57:20.236 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 5, Mybatis
2020-02-21 17:57:20.237 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 17:57:20.238 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 5(Integer)
2020-02-21 17:57:20.239 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:57:20.240 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 17:57:20.242 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 17:57:20.243 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 2
2020-02-21 17:57:20.243 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 6, MD5
2020-02-21 17:57:20.244 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 17:57:20.244 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 6(Integer)
2020-02-21 17:57:20.245 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:57:20.246 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 42, 35, 1
2020-02-21 17:57:20.246 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 1
2020-02-21 17:57:20.246 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 7, SpringMVC
2020-02-21 17:57:20.246 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 17:57:20.247 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 7(Integer)
2020-02-21 17:57:20.248 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:57:20.248 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:57:20.250 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 17:57:20.250 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 2
2020-02-21 17:57:20.250 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 8, Mysql
2020-02-21 17:57:20.250 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 17:57:20.251 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 8(Integer)
2020-02-21 17:57:20.252 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:57:20.252 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 7, 34, 1
2020-02-21 17:57:20.254 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 1
2020-02-21 17:57:20.254 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 10, git
2020-02-21 17:57:20.254 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 17:57:20.255 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 10(Integer)
2020-02-21 17:57:20.257 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:57:20.257 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 17:57:20.258 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:57:20.259 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 41(Integer)
2020-02-21 17:57:20.260 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 17:57:20.260 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 41, 工具
2020-02-21 17:57:20.260 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 17:57:20.260 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.260 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 4(Integer)
2020-02-21 17:57:20.261 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 17:57:20.261 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 10, git
2020-02-21 17:57:20.261 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 11, github
2020-02-21 17:57:20.262 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 17:57:20.262 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 1
2020-02-21 17:57:20.262 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 11, github
2020-02-21 17:57:20.262 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 17:57:20.262 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 11(Integer)
2020-02-21 17:57:20.263 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:57:20.264 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 17:57:20.264 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 1
2020-02-21 17:57:20.264 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.m.TagMapper.queryTagByCountsBlog     : <==      Total: 9
2020-02-21 17:57:20.265 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:57:20.265 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 8(Integer)
2020-02-21 17:57:20.266 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:57:20.267 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:57:20.267 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:57:20.268 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:57:20.268 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 17:57:20.268 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 17:57:20.268 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 5, 1, 1, <<BLOB>>, 1, 2019-12-20 20:30:42, <<BLOB>>, [TOC], 原创, 1, 1, JSR 303校验, 2019-12-20 20:30:42, 0, 2, 1
2020-02-21 17:57:20.269 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 17:57:20.269 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 7, 34, 1
2020-02-21 17:57:20.271 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 8
2020-02-21 17:57:20.272 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : ==>  Preparing: Select * from t_blog where status = true order by update_time desc 
2020-02-21 17:57:20.272 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : ==> Parameters: 
2020-02-21 17:57:20.274 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:57:20.275 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 42, 35, 1
2020-02-21 17:57:20.276 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:57:20.276 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:57:20.277 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:57:20.277 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:57:20.277 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:57:20.277 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.277 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:57:20.278 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:57:20.278 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:57:20.278 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:57:20.278 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:57:20.279 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 7, 34, 1
2020-02-21 17:57:20.279 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:57:20.279 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 34(Integer)
2020-02-21 17:57:20.280 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:57:20.281 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 34, 后端
2020-02-21 17:57:20.281 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:57:20.281 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.281 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 3(Integer)
2020-02-21 17:57:20.282 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:57:20.282 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:57:20.283 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 8, Mysql
2020-02-21 17:57:20.283 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 17, Hibernate
2020-02-21 17:57:20.283 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 17:57:20.283 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 17:57:20.284 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:57:20.284 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 41(Integer)
2020-02-21 17:57:20.285 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:57:20.285 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 41, 工具
2020-02-21 17:57:20.285 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:57:20.285 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.285 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 4(Integer)
2020-02-21 17:57:20.288 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:57:20.288 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 10, git
2020-02-21 17:57:20.288 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 11, github
2020-02-21 17:57:20.288 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:57:20.289 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 5, 1, 1, <<BLOB>>, 1, 2019-12-20 20:30:42, <<BLOB>>, [TOC], 原创, 1, 1, JSR 303校验, 2019-12-20 20:30:42, 0, 2, 1
2020-02-21 17:57:20.290 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:57:20.290 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 2(Integer)
2020-02-21 17:57:20.293 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:57:20.293 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 2, 进阶知识
2020-02-21 17:57:20.294 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:57:20.294 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.294 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 5(Integer)
2020-02-21 17:57:20.296 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 0
2020-02-21 17:57:20.297 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 17:57:20.298 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.298 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 10(Integer)
2020-02-21 17:57:20.299 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:57:20.299 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 17:57:20.300 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 17:57:20.300 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 5, Mybatis
2020-02-21 17:57:20.300 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 7, SpringMVC
2020-02-21 17:57:20.300 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 4
2020-02-21 17:57:20.301 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 17:57:20.301 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:57:20.301 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 30(Integer)
2020-02-21 17:57:20.302 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:57:20.302 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 30, 认知升级
2020-02-21 17:57:20.303 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:57:20.304 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.305 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 9(Integer)
2020-02-21 17:57:20.306 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:57:20.306 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 17:57:20.307 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 17:57:20.307 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 5, Mybatis
2020-02-21 17:57:20.307 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 17:57:20.308 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:57:20.309 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.309 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 8(Integer)
2020-02-21 17:57:20.311 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:57:20.311 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 18, IntelliJ IDEA
2020-02-21 17:57:20.311 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 1
2020-02-21 17:57:20.311 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:57:20.312 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.312 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 7(Integer)
2020-02-21 17:57:20.313 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:57:20.313 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 17:57:20.314 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 7, SpringMVC
2020-02-21 17:57:20.314 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:57:20.314 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:57:20.315 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.315 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 6(Integer)
2020-02-21 17:57:20.316 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:57:20.317 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 17:57:20.317 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 17:57:20.317 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:57:20.317 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==      Total: 9
2020-02-21 17:57:20.321 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : ==>  Preparing: Select * from t_blog where status = true order by update_time desc 
2020-02-21 17:57:20.322 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : ==> Parameters: 
2020-02-21 17:57:20.324 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:57:20.324 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 42, 35, 1
2020-02-21 17:57:20.325 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:57:20.326 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:57:20.327 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:57:20.327 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:57:20.327 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:57:20.328 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.328 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:57:20.329 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:57:20.329 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:57:20.330 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:57:20.330 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:57:20.330 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 7, 34, 1
2020-02-21 17:57:20.331 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:57:20.331 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 34(Integer)
2020-02-21 17:57:20.332 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:57:20.332 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 34, 后端
2020-02-21 17:57:20.333 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:57:20.333 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.333 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 3(Integer)
2020-02-21 17:57:20.335 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:57:20.335 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:57:20.335 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 8, Mysql
2020-02-21 17:57:20.335 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 17, Hibernate
2020-02-21 17:57:20.335 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 17:57:20.336 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 17:57:20.337 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:57:20.338 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 41(Integer)
2020-02-21 17:57:20.339 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:57:20.339 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 41, 工具
2020-02-21 17:57:20.339 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:57:20.340 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.340 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 4(Integer)
2020-02-21 17:57:20.342 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:57:20.342 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 10, git
2020-02-21 17:57:20.342 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 11, github
2020-02-21 17:57:20.342 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:57:20.343 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 5, 1, 1, <<BLOB>>, 1, 2019-12-20 20:30:42, <<BLOB>>, [TOC], 原创, 1, 1, JSR 303校验, 2019-12-20 20:30:42, 0, 2, 1
2020-02-21 17:57:20.343 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:57:20.343 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 2(Integer)
2020-02-21 17:57:20.346 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:57:20.346 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 2, 进阶知识
2020-02-21 17:57:20.346 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:57:20.346 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.346 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 5(Integer)
2020-02-21 17:57:20.348 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 0
2020-02-21 17:57:20.349 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 17:57:20.349 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.349 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 10(Integer)
2020-02-21 17:57:20.351 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:57:20.351 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 17:57:20.351 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 17:57:20.351 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 5, Mybatis
2020-02-21 17:57:20.351 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 7, SpringMVC
2020-02-21 17:57:20.351 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 4
2020-02-21 17:57:20.352 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 17:57:20.353 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:57:20.353 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 30(Integer)
2020-02-21 17:57:20.360 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:57:20.361 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 30, 认知升级
2020-02-21 17:57:20.361 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:57:20.361 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.361 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 9(Integer)
2020-02-21 17:57:20.361 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:57:20.362 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 17:57:20.362 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 17:57:20.362 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 5, Mybatis
2020-02-21 17:57:20.362 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 17:57:20.362 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:57:20.363 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.363 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 8(Integer)
2020-02-21 17:57:20.365 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:57:20.366 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 18, IntelliJ IDEA
2020-02-21 17:57:20.366 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 1
2020-02-21 17:57:20.366 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:57:20.367 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.368 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 7(Integer)
2020-02-21 17:57:20.378 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:57:20.378 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 17:57:20.378 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 7, SpringMVC
2020-02-21 17:57:20.378 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:57:20.379 TRACE 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:57:20.379 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:20.380 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 6(Integer)
2020-02-21 17:57:20.381 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:57:20.381 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 17:57:20.381 TRACE 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 17:57:20.381 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:57:20.382 DEBUG 9288 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.queryBlogIndexPage      : <==      Total: 9
2020-02-21 17:57:20.385  INFO 9288 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/index
2020-02-21 17:57:20.789  INFO 9288 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:57:20.789 DEBUG 9288 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:57:20.790 DEBUG 9288 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:57:20.792 TRACE 9288 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:57:20.792 TRACE 9288 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:57:20.793 TRACE 9288 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:57:20.793 TRACE 9288 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:57:20.794 DEBUG 9288 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:57:20.794  INFO 9288 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:57:22.450  INFO 9288 --- [http-nio-8080-exec-7] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 17:57:22.451 DEBUG 9288 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:57:22.452 DEBUG 9288 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:57:22.464 TRACE 9288 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:57:22.465 TRACE 9288 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 42, 35, 1
2020-02-21 17:57:22.468 DEBUG 9288 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:57:22.468 DEBUG 9288 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:57:22.475 TRACE 9288 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:57:22.475 TRACE 9288 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:57:22.476 DEBUG 9288 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:57:22.476 DEBUG 9288 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:22.476 DEBUG 9288 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:57:22.478 TRACE 9288 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:57:22.479 TRACE 9288 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:57:22.479 TRACE 9288 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:57:22.479 DEBUG 9288 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:57:22.479 DEBUG 9288 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:57:22.480 DEBUG 9288 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:57:22.483 TRACE 9288 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:57:22.483 TRACE 9288 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:57:22.484 DEBUG 9288 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:57:22.485 DEBUG 9288 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:57:22.487 TRACE 9288 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:57:22.487 TRACE 9288 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:57:22.488 TRACE 9288 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:57:22.488 DEBUG 9288 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:57:22.488 DEBUG 9288 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:57:22.488 DEBUG 9288 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:57:22.489 DEBUG 9288 --- [http-nio-8080-exec-7] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:57:22.489 DEBUG 9288 --- [http-nio-8080-exec-7] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 17:57:22.495 DEBUG 9288 --- [http-nio-8080-exec-7] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:57:22.501  INFO 9288 --- [http-nio-8080-exec-7] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 17:57:22.797  INFO 9288 --- [http-nio-8080-exec-9] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:57:22.798 DEBUG 9288 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:57:22.798 DEBUG 9288 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:57:22.799 TRACE 9288 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:57:22.799 TRACE 9288 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:57:22.800 TRACE 9288 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:57:22.800 TRACE 9288 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:57:22.800 DEBUG 9288 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:57:22.801  INFO 9288 --- [http-nio-8080-exec-9] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:57:22.897  INFO 9288 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 17:57:22.897 DEBUG 9288 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:57:22.898 DEBUG 9288 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:57:22.899 TRACE 9288 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:57:22.900 TRACE 9288 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 43, 35, 1
2020-02-21 17:57:22.900 DEBUG 9288 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:57:22.900 DEBUG 9288 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:57:22.906 TRACE 9288 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:57:22.906 TRACE 9288 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:57:22.906 DEBUG 9288 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:57:22.907 DEBUG 9288 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:57:22.907 DEBUG 9288 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:57:22.911 TRACE 9288 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:57:22.911 TRACE 9288 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:57:22.911 TRACE 9288 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:57:22.911 DEBUG 9288 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:57:22.911 DEBUG 9288 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:57:22.912 DEBUG 9288 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:57:22.913 TRACE 9288 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:57:22.914 TRACE 9288 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:57:22.914 DEBUG 9288 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:57:22.915 DEBUG 9288 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:57:22.916 TRACE 9288 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:57:22.916 TRACE 9288 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:57:22.916 TRACE 9288 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:57:22.916 DEBUG 9288 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:57:22.917 DEBUG 9288 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:57:22.917 DEBUG 9288 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:57:22.917  INFO 9288 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 17:58:08.896  INFO 6264 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 6264 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:58:08.896 DEBUG 6264 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:58:08.896  INFO 6264 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:58:08.959  INFO 6264 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 17:58:08.959  INFO 6264 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 17:58:08.959  INFO 6264 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 17:58:09.973  INFO 6264 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:58:09.974  INFO 6264 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:58:10.025  INFO 6264 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 43ms. Found 0 JDBC repository interfaces.
2020-02-21 17:58:10.043  INFO 6264 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:58:10.044  INFO 6264 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:58:10.058  INFO 6264 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7ms. Found 0 JPA repository interfaces.
2020-02-21 17:58:10.964  INFO 6264 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:58:11.581  INFO 6264 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:58:11.597  INFO 6264 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:58:11.597  INFO 6264 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:58:11.737  INFO 6264 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:58:11.737  INFO 6264 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2778 ms
2020-02-21 17:58:12.050  INFO 6264 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:58:12.112  INFO 6264 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 17:58:12.241  INFO 6264 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 17:58:12.347 ERROR 6264 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:58:12.353  INFO 6264 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 17:58:12.475  INFO 6264 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:58:13.405  INFO 6264 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:58:13.411  INFO 6264 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:58:13.441  INFO 6264 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:58:13.740  WARN 6264 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:58:13.975  INFO 6264 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:58:14.636  INFO 6264 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:58:14.639  INFO 6264 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 6.45 seconds (JVM running for 7.963)
2020-02-21 17:58:27.679  INFO 6264 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 17:58:27.680  INFO 6264 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 17:58:27.695  INFO 6264 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2020-02-21 17:58:27.794  INFO 6264 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 17:58:27.822 DEBUG 6264 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:58:28.079 DEBUG 6264 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:58:28.098 TRACE 6264 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:58:28.101 TRACE 6264 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 43, 35, 1
2020-02-21 17:58:28.109 DEBUG 6264 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:58:28.110 DEBUG 6264 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:58:28.111 TRACE 6264 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:58:28.112 TRACE 6264 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:58:28.112 DEBUG 6264 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:58:28.114 DEBUG 6264 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:58:28.114 DEBUG 6264 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:58:28.116 TRACE 6264 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:58:28.116 TRACE 6264 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:58:28.116 TRACE 6264 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:58:28.116 DEBUG 6264 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:58:28.116 DEBUG 6264 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:58:28.117 DEBUG 6264 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:58:28.118 TRACE 6264 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:58:28.119 TRACE 6264 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:58:28.121 DEBUG 6264 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:58:28.121 DEBUG 6264 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:58:28.126 TRACE 6264 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:58:28.126 TRACE 6264 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:58:28.127 TRACE 6264 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:58:28.128 DEBUG 6264 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:58:28.128 DEBUG 6264 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:58:28.128 DEBUG 6264 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:58:28.130 DEBUG 6264 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:58:28.131 DEBUG 6264 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 17:58:28.137 DEBUG 6264 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:58:28.188  INFO 6264 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 17:58:28.827  INFO 6264 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 17:58:28.834 DEBUG 6264 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 17:58:28.835 DEBUG 6264 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 17:58:28.836 TRACE 6264 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:58:28.837 TRACE 6264 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 17:58:28.840 TRACE 6264 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 17:58:28.842 TRACE 6264 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 17:58:28.843 DEBUG 6264 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 17:58:28.844  INFO 6264 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 17:58:28.926  INFO 6264 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 17:58:28.926 DEBUG 6264 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:58:28.926 DEBUG 6264 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:58:28.928 TRACE 6264 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:58:28.928 TRACE 6264 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 44, 35, 1
2020-02-21 17:58:28.930 DEBUG 6264 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:58:28.930 DEBUG 6264 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:58:28.933 TRACE 6264 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:58:28.934 TRACE 6264 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:58:28.934 DEBUG 6264 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:58:28.935 DEBUG 6264 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:58:28.935 DEBUG 6264 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:58:28.941 TRACE 6264 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:58:28.941 TRACE 6264 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:58:28.941 TRACE 6264 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:58:28.942 DEBUG 6264 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:58:28.943 DEBUG 6264 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:58:28.943 DEBUG 6264 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:58:28.945 TRACE 6264 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:58:28.946 TRACE 6264 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:58:28.946 DEBUG 6264 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:58:28.947 DEBUG 6264 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:58:28.949 TRACE 6264 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:58:28.950 TRACE 6264 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:58:28.950 TRACE 6264 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:58:28.951 DEBUG 6264 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:58:28.952 DEBUG 6264 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:58:28.954 DEBUG 6264 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:58:28.957  INFO 6264 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 17:59:08.755  INFO 6264 --- [Thread-16] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 17:59:08.757  INFO 6264 --- [Thread-16] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:59:08.767  INFO 6264 --- [Thread-16] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-02-21 17:59:09.846  INFO 6264 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 6264 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:59:09.847 DEBUG 6264 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:59:09.847  INFO 6264 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:59:10.324  INFO 6264 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:59:10.324  INFO 6264 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:59:10.332  INFO 6264 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7ms. Found 0 JDBC repository interfaces.
2020-02-21 17:59:10.336  INFO 6264 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:59:10.336  INFO 6264 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:59:10.342  INFO 6264 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5ms. Found 0 JPA repository interfaces.
2020-02-21 17:59:10.418  INFO 6264 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:59:10.541  WARN 6264 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 17:59:10.665  INFO 6264 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:59:10.666  INFO 6264 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:59:10.667  INFO 6264 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:59:10.734  INFO 6264 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:59:10.735  INFO 6264 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 878 ms
2020-02-21 17:59:10.930  INFO 6264 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:59:10.938 ERROR 6264 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:59:10.940  INFO 6264 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-02-21 17:59:10.947  INFO 6264 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:59:11.243  INFO 6264 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:59:11.244  INFO 6264 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:59:11.260  INFO 6264 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:59:11.500  WARN 6264 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:59:11.721  INFO 6264 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:59:12.598  INFO 6264 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:59:12.601  INFO 6264 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 2.829 seconds (JVM running for 65.925)
2020-02-21 17:59:12.604  INFO 6264 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 17:59:50.477  INFO 13552 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 13552 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 17:59:50.481 DEBUG 13552 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 17:59:50.481  INFO 13552 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 17:59:50.552  INFO 13552 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 17:59:50.553  INFO 13552 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 17:59:50.553  INFO 13552 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 17:59:51.453  INFO 13552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:59:51.453  INFO 13552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 17:59:51.485  INFO 13552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 23ms. Found 0 JDBC repository interfaces.
2020-02-21 17:59:51.500  INFO 13552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 17:59:51.500  INFO 13552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 17:59:51.516  INFO 13552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7ms. Found 0 JPA repository interfaces.
2020-02-21 17:59:52.000  INFO 13552 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 17:59:52.793  INFO 13552 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 17:59:52.826  INFO 13552 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 17:59:52.827  INFO 13552 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 17:59:53.212  INFO 13552 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 17:59:53.214  INFO 13552 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2661 ms
2020-02-21 17:59:53.833  INFO 13552 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 17:59:53.934  INFO 13552 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 17:59:54.036  INFO 13552 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 17:59:54.131 ERROR 13552 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 17:59:54.137  INFO 13552 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 17:59:54.244  INFO 13552 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 17:59:55.107  INFO 13552 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 17:59:55.113  INFO 13552 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 17:59:55.146  INFO 13552 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 17:59:55.536  WARN 13552 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 17:59:55.753  INFO 13552 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 17:59:56.377  INFO 13552 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 17:59:56.380  INFO 13552 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 6.954 seconds (JVM running for 8.618)
2020-02-21 17:59:58.957  INFO 13552 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 17:59:58.958  INFO 13552 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 17:59:58.974  INFO 13552 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 16 ms
2020-02-21 17:59:59.071  INFO 13552 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 17:59:59.103 DEBUG 13552 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 17:59:59.396 DEBUG 13552 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 17:59:59.422 TRACE 13552 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 17:59:59.425 TRACE 13552 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 44, 35, 1
2020-02-21 17:59:59.433 DEBUG 13552 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 17:59:59.434 DEBUG 13552 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 17:59:59.436 TRACE 13552 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 17:59:59.436 TRACE 13552 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 17:59:59.437 DEBUG 13552 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 17:59:59.438 DEBUG 13552 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 17:59:59.438 DEBUG 13552 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 17:59:59.439 TRACE 13552 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 17:59:59.440 TRACE 13552 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 17:59:59.440 TRACE 13552 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 17:59:59.441 DEBUG 13552 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 17:59:59.441 DEBUG 13552 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 17:59:59.442 DEBUG 13552 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 17:59:59.443 TRACE 13552 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:59:59.443 TRACE 13552 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 17:59:59.444 DEBUG 13552 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 17:59:59.445 DEBUG 13552 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 17:59:59.447 TRACE 13552 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 17:59:59.449 TRACE 13552 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 17:59:59.451 TRACE 13552 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 17:59:59.452 DEBUG 13552 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 17:59:59.453 DEBUG 13552 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 17:59:59.454 DEBUG 13552 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 17:59:59.456 DEBUG 13552 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 17:59:59.456 DEBUG 13552 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 17:59:59.462 DEBUG 13552 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 17:59:59.520  INFO 13552 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 18:00:00.225  INFO 13552 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 18:00:00.234 DEBUG 13552 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 18:00:00.234 DEBUG 13552 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 18:00:00.236 TRACE 13552 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 18:00:00.236 TRACE 13552 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 18:00:00.238 TRACE 13552 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 18:00:00.239 TRACE 13552 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 18:00:00.241 DEBUG 13552 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 18:00:00.241  INFO 13552 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 18:00:00.309  INFO 13552 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 18:00:00.310 DEBUG 13552 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 18:00:00.310 DEBUG 13552 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 18:00:00.312 TRACE 13552 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 18:00:00.316 TRACE 13552 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 45, 35, 1
2020-02-21 18:00:00.317 DEBUG 13552 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 18:00:00.318 DEBUG 13552 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 18:00:00.320 TRACE 13552 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 18:00:00.320 TRACE 13552 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 18:00:00.321 DEBUG 13552 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 18:00:00.321 DEBUG 13552 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 18:00:00.322 DEBUG 13552 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 18:00:00.323 TRACE 13552 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 18:00:00.323 TRACE 13552 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 18:00:00.323 TRACE 13552 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 18:00:00.324 DEBUG 13552 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 18:00:00.324 DEBUG 13552 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 18:00:00.325 DEBUG 13552 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 18:00:00.326 TRACE 13552 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 18:00:00.327 TRACE 13552 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 18:00:00.328 DEBUG 13552 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 18:00:00.328 DEBUG 13552 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 18:00:00.330 TRACE 13552 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 18:00:00.331 TRACE 13552 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 18:00:00.333 TRACE 13552 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 18:00:00.334 DEBUG 13552 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 18:00:00.335 DEBUG 13552 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 18:00:00.336 DEBUG 13552 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 18:00:00.337  INFO 13552 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 18:02:14.707  INFO 13552 --- [Thread-16] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 18:02:14.707  INFO 13552 --- [Thread-16] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 18:02:14.722  INFO 13552 --- [Thread-16] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-02-21 18:02:15.716  INFO 13552 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 13552 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 18:02:15.717 DEBUG 13552 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 18:02:15.717  INFO 13552 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 18:02:16.040  INFO 13552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 18:02:16.040  INFO 13552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 18:02:16.051  INFO 13552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10ms. Found 0 JDBC repository interfaces.
2020-02-21 18:02:16.055  INFO 13552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 18:02:16.055  INFO 13552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 18:02:16.060  INFO 13552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4ms. Found 0 JPA repository interfaces.
2020-02-21 18:02:16.139  INFO 13552 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 18:02:16.149  WARN 13552 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'projectingArgumentResolverBeanPostProcessor' defined in class path resource [org/springframework/data/web/config/ProjectingArgumentResolverRegistrar.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: warning no match for this type name: personal.personalblogreturn.service.BlogServiceImpl [Xlint:invalidAbsoluteTypeName]
2020-02-21 18:02:16.153  INFO 13552 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-02-21 18:02:16.260 ERROR 13552 --- [restartedMain] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'projectingArgumentResolverBeanPostProcessor' defined in class path resource [org/springframework/data/web/config/ProjectingArgumentResolverRegistrar.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: warning no match for this type name: personal.personalblogreturn.service.BlogServiceImpl [Xlint:invalidAbsoluteTypeName]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:240)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:722)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:535)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at personal.personalblogreturn.PersonalBlogReturnApplication.main(PersonalBlogReturnApplication.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: warning no match for this type name: personal.personalblogreturn.service.BlogServiceImpl [Xlint:invalidAbsoluteTypeName]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:91)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:109)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:92)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:101)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:251)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1141)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1114)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:506)
	... 19 common frames omitted
Caused by: java.lang.IllegalArgumentException: warning no match for this type name: personal.personalblogreturn.service.BlogServiceImpl [Xlint:invalidAbsoluteTypeName]
	at org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(PointcutParser.java:319)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.buildPointcutExpression(AspectJExpressionPointcut.java:227)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.obtainPointcutExpression(AspectJExpressionPointcut.java:198)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.getClassFilter(AspectJExpressionPointcut.java:177)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:226)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:289)
	at org.springframework.aop.support.AopUtils.findAdvisorsThatCanApply(AopUtils.java:321)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findAdvisorsThatCanApply(AbstractAdvisorAutoProxyCreator.java:126)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:95)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:76)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:347)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:299)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 41 common frames omitted

2020-02-21 18:02:34.073  INFO 13552 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 13552 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 18:02:34.073 DEBUG 13552 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 18:02:34.073  INFO 13552 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 18:02:34.348  INFO 13552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 18:02:34.349  INFO 13552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 18:02:34.355  INFO 13552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6ms. Found 0 JDBC repository interfaces.
2020-02-21 18:02:34.360  INFO 13552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 18:02:34.360  INFO 13552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 18:02:34.367  INFO 13552 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6ms. Found 0 JPA repository interfaces.
2020-02-21 18:02:34.435  INFO 13552 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 18:02:34.535  WARN 13552 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 18:02:34.637  INFO 13552 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 18:02:34.638  INFO 13552 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 18:02:34.638  INFO 13552 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 18:02:34.704  INFO 13552 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 18:02:34.704  INFO 13552 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 625 ms
2020-02-21 18:02:39.871  INFO 8472 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 8472 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 18:02:39.871 DEBUG 8472 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 18:02:39.871  INFO 8472 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 18:02:39.934  INFO 8472 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 18:02:39.934  INFO 8472 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 18:02:39.934  INFO 8472 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 18:02:40.923  INFO 8472 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 18:02:40.923  INFO 8472 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 18:02:40.970  INFO 8472 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 38ms. Found 0 JDBC repository interfaces.
2020-02-21 18:02:41.001  INFO 8472 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 18:02:41.001  INFO 8472 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 18:02:41.017  INFO 8472 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13ms. Found 0 JPA repository interfaces.
2020-02-21 18:02:41.765  INFO 8472 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 18:02:42.676  INFO 8472 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 18:02:42.684  INFO 8472 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 18:02:42.685  INFO 8472 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 18:02:42.867  INFO 8472 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 18:02:42.868  INFO 8472 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2934 ms
2020-02-21 18:02:43.371  INFO 8472 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 18:02:43.458  INFO 8472 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 18:02:43.607  INFO 8472 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 18:02:43.738 ERROR 8472 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 18:02:43.747  INFO 8472 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 18:02:43.900  INFO 8472 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 18:02:45.564  INFO 8472 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 18:02:45.571  INFO 8472 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 18:02:45.606  INFO 8472 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 18:02:45.994  WARN 8472 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 18:02:46.370  INFO 8472 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 18:02:47.093  INFO 8472 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 18:02:47.097  INFO 8472 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 7.97 seconds (JVM running for 10.102)
2020-02-21 18:02:47.876  INFO 8472 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 18:02:47.877  INFO 8472 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 18:02:47.896  INFO 8472 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 19 ms
2020-02-21 18:02:48.015  INFO 8472 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 18:02:48.046 DEBUG 8472 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 18:02:48.305 DEBUG 8472 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 18:02:48.320 TRACE 8472 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 18:02:48.322 TRACE 8472 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 45, 35, 1
2020-02-21 18:02:48.328 DEBUG 8472 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 18:02:48.328 DEBUG 8472 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 18:02:48.329 TRACE 8472 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 18:02:48.329 TRACE 8472 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 18:02:48.330 DEBUG 8472 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 18:02:48.330 DEBUG 8472 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 18:02:48.331 DEBUG 8472 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 18:02:48.332 TRACE 8472 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 18:02:48.332 TRACE 8472 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 18:02:48.332 TRACE 8472 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 18:02:48.332 DEBUG 8472 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 18:02:48.333 DEBUG 8472 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 18:02:48.333 DEBUG 8472 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 18:02:48.334 TRACE 8472 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 18:02:48.335 TRACE 8472 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 18:02:48.336 DEBUG 8472 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 18:02:48.336 DEBUG 8472 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 18:02:48.338 TRACE 8472 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 18:02:48.338 TRACE 8472 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 18:02:48.340 TRACE 8472 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 18:02:48.341 DEBUG 8472 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 18:02:48.341 DEBUG 8472 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 18:02:48.342 DEBUG 8472 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 18:02:48.364 ERROR 8472 --- [http-nio-8080-exec-1] p.p.e.ControllerExceptionHandler         : Request URL : http://localhost:8080/blog/2，Exception : {}

org.springframework.web.util.NestedServletException: Handler dispatch failed; nested exception is java.lang.StackOverflowError
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1055)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.StackOverflowError: null
	at java.lang.AbstractStringBuilder.append(AbstractStringBuilder.java:698)
	at java.lang.StringBuilder.append(StringBuilder.java:214)
	at sun.util.calendar.CalendarUtils.sprintf0d(CalendarUtils.java:171)
	at java.util.Date.toString(Date.java:1038)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)

2020-02-21 18:02:48.371  WARN 8472 --- [http-nio-8080-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.util.NestedServletException: Handler dispatch failed; nested exception is java.lang.StackOverflowError]
2020-02-21 18:03:07.213  INFO 8472 --- [Thread-18] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 18:03:07.215  INFO 8472 --- [Thread-18] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 18:03:07.224  INFO 8472 --- [Thread-18] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-02-21 18:03:08.832  INFO 8472 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 8472 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 18:03:08.832 DEBUG 8472 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 18:03:08.833  INFO 8472 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 18:03:09.450  INFO 8472 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 18:03:09.451  INFO 8472 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 18:03:09.464  INFO 8472 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13ms. Found 0 JDBC repository interfaces.
2020-02-21 18:03:09.469  INFO 8472 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 18:03:09.469  INFO 8472 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 18:03:09.475  INFO 8472 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5ms. Found 0 JPA repository interfaces.
2020-02-21 18:03:09.568  INFO 8472 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 18:03:09.694  WARN 8472 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 18:03:09.858  INFO 8472 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 18:03:09.859  INFO 8472 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 18:03:09.860  INFO 8472 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 18:12:07.021  INFO 7012 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 7012 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 18:12:07.024 DEBUG 7012 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 18:12:07.025  INFO 7012 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 18:12:07.095  INFO 7012 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 18:12:07.095  INFO 7012 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 18:12:07.096  INFO 7012 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 18:12:07.816  INFO 7012 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 18:12:07.816  INFO 7012 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 18:12:07.847  INFO 7012 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17ms. Found 0 JDBC repository interfaces.
2020-02-21 18:12:07.847  INFO 7012 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 18:12:07.847  INFO 7012 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 18:12:07.863  INFO 7012 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4ms. Found 0 JPA repository interfaces.
2020-02-21 18:12:08.191  INFO 7012 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 18:12:08.656  INFO 7012 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 18:12:08.664  INFO 7012 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 18:12:08.664  INFO 7012 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 18:12:08.804  INFO 7012 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 18:12:08.805  INFO 7012 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1709 ms
2020-02-21 18:12:09.111  INFO 7012 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 18:12:09.169  INFO 7012 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 18:12:09.274  INFO 7012 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 18:12:09.375 ERROR 7012 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 18:12:09.381  INFO 7012 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 18:12:09.494  INFO 7012 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 18:12:10.416  INFO 7012 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 18:12:10.422  INFO 7012 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 18:12:10.449  INFO 7012 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 18:12:10.749  WARN 7012 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 18:12:10.952  INFO 7012 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 18:12:11.521  INFO 7012 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 18:12:11.523  INFO 7012 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 5.544 seconds (JVM running for 7.04)
2020-02-21 18:12:17.391  INFO 7012 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 18:12:17.392  INFO 7012 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 18:12:17.405  INFO 7012 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 13 ms
2020-02-21 18:12:17.548  INFO 7012 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 18:12:17.577 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 18:12:17.842 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 18:12:17.857 TRACE 7012 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 18:12:17.858 TRACE 7012 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 45, 35, 1
2020-02-21 18:12:17.862 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 18:12:17.863 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 18:12:17.864 TRACE 7012 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 18:12:17.864 TRACE 7012 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 18:12:17.864 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 18:12:17.865 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 18:12:17.865 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 18:12:17.868 TRACE 7012 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 18:12:17.868 TRACE 7012 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 18:12:17.869 TRACE 7012 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 18:12:17.869 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 18:12:17.870 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 18:12:17.870 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 18:12:17.872 TRACE 7012 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 18:12:17.872 TRACE 7012 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 18:12:17.873 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 18:12:17.873 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 18:12:17.874 TRACE 7012 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 18:12:17.875 TRACE 7012 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 18:12:17.876 TRACE 7012 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 18:12:17.876 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 18:12:17.876 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 18:12:17.876 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 18:12:17.879 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 18:12:17.879 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 18:12:17.885 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 18:12:17.939  INFO 7012 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 18:12:18.627  INFO 7012 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 18:12:18.640 DEBUG 7012 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 18:12:18.640 DEBUG 7012 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 18:12:18.642 TRACE 7012 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 18:12:18.642 TRACE 7012 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 18:12:18.644 TRACE 7012 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 18:12:18.645 TRACE 7012 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 18:12:18.647 DEBUG 7012 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 18:12:18.647  INFO 7012 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 18:12:18.726  INFO 7012 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 18:12:18.726 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 18:12:18.727 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 18:12:18.729 TRACE 7012 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 18:12:18.730 TRACE 7012 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 46, 35, 1
2020-02-21 18:12:18.731 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 18:12:18.731 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 18:12:18.739 TRACE 7012 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 18:12:18.739 TRACE 7012 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 18:12:18.740 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 18:12:18.740 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 18:12:18.741 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 18:12:18.743 TRACE 7012 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 18:12:18.743 TRACE 7012 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 18:12:18.744 TRACE 7012 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 18:12:18.744 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 18:12:18.745 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 18:12:18.745 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 18:12:18.748 TRACE 7012 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 18:12:18.748 TRACE 7012 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 18:12:18.749 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 18:12:18.752 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 18:12:18.756 TRACE 7012 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 18:12:18.757 TRACE 7012 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 18:12:18.758 TRACE 7012 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 18:12:18.759 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 18:12:18.759 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 18:12:18.760 DEBUG 7012 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 18:12:18.823 ERROR 7012 --- [http-nio-8080-exec-1] p.p.e.ControllerExceptionHandler         : Request URL : http://localhost:8080/comment/2，Exception : {}

org.springframework.web.util.NestedServletException: Handler dispatch failed; nested exception is java.lang.StackOverflowError
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1055)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.StackOverflowError: null
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at sun.util.locale.provider.LocaleServiceProviderPool.getPool(LocaleServiceProviderPool.java:109)
	at sun.util.locale.provider.TimeZoneNameUtility.retrieveDisplayNamesImpl(TimeZoneNameUtility.java:147)
	at sun.util.locale.provider.TimeZoneNameUtility.retrieveDisplayName(TimeZoneNameUtility.java:137)
	at java.util.TimeZone.getDisplayName(TimeZone.java:400)
	at java.util.Date.toString(Date.java:1045)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)

2020-02-21 18:12:18.834  WARN 7012 --- [http-nio-8080-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.util.NestedServletException: Handler dispatch failed; nested exception is java.lang.StackOverflowError]
2020-02-21 18:12:31.417  INFO 7012 --- [Thread-12] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 18:12:31.418  INFO 7012 --- [Thread-12] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 18:12:31.429  INFO 7012 --- [Thread-12] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-02-21 18:12:32.435  INFO 7012 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 7012 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 18:12:32.435 DEBUG 7012 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 18:12:32.435  INFO 7012 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 18:12:32.890  INFO 7012 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 18:12:32.891  INFO 7012 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 18:12:32.905  INFO 7012 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13ms. Found 0 JDBC repository interfaces.
2020-02-21 18:12:32.913  INFO 7012 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 18:12:32.927  INFO 7012 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 18:12:32.937  INFO 7012 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 10ms. Found 0 JPA repository interfaces.
2020-02-21 18:12:33.225  INFO 7012 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 18:12:33.387  WARN 7012 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 18:12:33.560  INFO 7012 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 18:12:33.562  INFO 7012 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 18:12:33.562  INFO 7012 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 18:12:33.623  INFO 7012 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 18:12:33.623  INFO 7012 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1183 ms
2020-02-21 18:12:33.884  INFO 7012 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 18:12:33.891 ERROR 7012 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 18:12:33.893  INFO 7012 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-02-21 18:12:33.899  INFO 7012 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 18:12:34.353  INFO 7012 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 18:12:34.354  INFO 7012 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 18:12:34.380  INFO 7012 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 18:12:34.883  WARN 7012 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 18:12:35.505  INFO 7012 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 18:12:36.027  INFO 7012 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 18:12:36.027  INFO 7012 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 3.652 seconds (JVM running for 31.544)
2020-02-21 18:12:36.029  INFO 7012 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 18:12:43.238  INFO 7012 --- [Thread-22] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 18:12:43.239  INFO 7012 --- [Thread-22] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 18:12:43.241  INFO 7012 --- [Thread-22] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} closed
2020-02-21 18:12:44.323  INFO 7012 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 7012 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 18:12:44.323 DEBUG 7012 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 18:12:44.323  INFO 7012 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 18:12:44.663  INFO 7012 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 18:12:44.663  INFO 7012 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 18:12:44.676  INFO 7012 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13ms. Found 0 JDBC repository interfaces.
2020-02-21 18:12:44.682  INFO 7012 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 18:12:44.683  INFO 7012 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 18:12:44.689  INFO 7012 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5ms. Found 0 JPA repository interfaces.
2020-02-21 18:12:44.784  INFO 7012 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 18:12:44.884  WARN 7012 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 18:12:44.984  INFO 7012 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 18:12:44.985  INFO 7012 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 18:12:44.985  INFO 7012 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 18:12:45.030  INFO 7012 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 18:12:45.030  INFO 7012 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 703 ms
2020-02-21 18:12:45.204  INFO 7012 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 18:12:45.215 ERROR 7012 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 18:12:45.216  INFO 7012 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-3} inited
2020-02-21 18:12:45.224  INFO 7012 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 18:12:45.508  INFO 7012 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 18:12:45.508  INFO 7012 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 18:12:45.524  INFO 7012 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 18:12:45.557  WARN 7012 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'blogsController': Unsatisfied dependency expressed through field 'blogService'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'personal.personalblogreturn.service.BlogService' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2020-02-21 18:12:45.557  INFO 7012 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 18:12:45.558  INFO 7012 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-3} closed
2020-02-21 18:12:45.559  INFO 7012 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2020-02-21 18:12:45.566  INFO 7012 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-02-21 18:12:45.867 ERROR 7012 --- [restartedMain] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field blogService in personal.personalblogreturn.controller.BlogsController required a bean of type 'personal.personalblogreturn.service.BlogService' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'personal.personalblogreturn.service.BlogService' in your configuration.

2020-02-21 18:12:59.348  INFO 11524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 11524 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 18:12:59.352 DEBUG 11524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 18:12:59.352  INFO 11524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 18:12:59.432  INFO 11524 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 18:12:59.433  INFO 11524 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 18:12:59.434  INFO 11524 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 18:13:00.233  INFO 11524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 18:13:00.234  INFO 11524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 18:13:00.266  INFO 11524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 25ms. Found 0 JDBC repository interfaces.
2020-02-21 18:13:00.279  INFO 11524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 18:13:00.280  INFO 11524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 18:13:00.294  INFO 11524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 8ms. Found 0 JPA repository interfaces.
2020-02-21 18:13:00.768  INFO 11524 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 18:13:01.382  INFO 11524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 18:13:01.396  INFO 11524 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 18:13:01.396  INFO 11524 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 18:13:01.766  INFO 11524 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 18:13:01.769  INFO 11524 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2335 ms
2020-02-21 18:13:02.377  INFO 11524 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 18:13:02.477  INFO 11524 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 18:13:02.611  INFO 11524 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 18:13:02.758 ERROR 11524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 18:13:02.767  INFO 11524 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 18:13:02.923  INFO 11524 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 18:13:03.797  INFO 11524 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 18:13:03.797  INFO 11524 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 18:13:03.829  INFO 11524 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 18:13:04.110  WARN 11524 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 18:13:04.318  INFO 11524 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 18:13:04.892  INFO 11524 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 18:13:04.895  INFO 11524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 6.479 seconds (JVM running for 7.949)
2020-02-21 18:13:08.025  INFO 11524 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 18:13:08.025  INFO 11524 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 18:13:08.044  INFO 11524 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 19 ms
2020-02-21 18:13:08.180  INFO 11524 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 18:13:08.210 DEBUG 11524 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 18:13:08.478 DEBUG 11524 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 18:13:08.493 TRACE 11524 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 18:13:08.495 TRACE 11524 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 46, 35, 1
2020-02-21 18:13:08.498 DEBUG 11524 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 18:13:08.499 DEBUG 11524 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 18:13:08.500 TRACE 11524 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 18:13:08.500 TRACE 11524 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 18:13:08.501 DEBUG 11524 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 18:13:08.501 DEBUG 11524 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 18:13:08.502 DEBUG 11524 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 18:13:08.503 TRACE 11524 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 18:13:08.503 TRACE 11524 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 18:13:08.504 TRACE 11524 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 18:13:08.505 DEBUG 11524 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 18:13:08.506 DEBUG 11524 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 18:13:08.506 DEBUG 11524 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 18:13:08.509 TRACE 11524 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 18:13:08.510 TRACE 11524 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 18:13:08.510 DEBUG 11524 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 18:13:08.511 DEBUG 11524 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 18:13:08.512 TRACE 11524 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 18:13:08.512 TRACE 11524 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 18:13:08.513 TRACE 11524 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 18:13:08.513 DEBUG 11524 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 18:13:08.514 DEBUG 11524 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 18:13:08.514 DEBUG 11524 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 18:13:08.515 DEBUG 11524 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 18:13:08.516 DEBUG 11524 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 18:13:08.520 DEBUG 11524 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 18:13:08.580  INFO 11524 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 18:13:09.265  INFO 11524 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 18:13:09.276 DEBUG 11524 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 18:13:09.276 DEBUG 11524 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 18:13:09.277 TRACE 11524 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 18:13:09.278 TRACE 11524 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 18:13:09.280 TRACE 11524 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 18:13:09.281 TRACE 11524 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 18:13:09.282 DEBUG 11524 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 18:13:09.285  INFO 11524 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 18:13:09.352  INFO 11524 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 18:13:09.352 DEBUG 11524 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 18:13:09.353 DEBUG 11524 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 18:13:09.358 TRACE 11524 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 18:13:09.359 TRACE 11524 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 47, 35, 1
2020-02-21 18:13:09.360 DEBUG 11524 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 18:13:09.361 DEBUG 11524 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 18:13:09.363 TRACE 11524 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 18:13:09.363 TRACE 11524 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 18:13:09.364 DEBUG 11524 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 18:13:09.365 DEBUG 11524 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 18:13:09.365 DEBUG 11524 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 18:13:09.368 TRACE 11524 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 18:13:09.368 TRACE 11524 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 18:13:09.369 TRACE 11524 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 18:13:09.369 DEBUG 11524 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 18:13:09.370 DEBUG 11524 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 18:13:09.370 DEBUG 11524 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 18:13:09.373 TRACE 11524 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 18:13:09.373 TRACE 11524 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 18:13:09.375 DEBUG 11524 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 18:13:09.375 DEBUG 11524 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 18:13:09.377 TRACE 11524 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 18:13:09.378 TRACE 11524 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 18:13:09.379 TRACE 11524 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 18:13:09.380 DEBUG 11524 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 18:13:09.380 DEBUG 11524 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 18:13:09.381 DEBUG 11524 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 18:13:09.446 ERROR 11524 --- [http-nio-8080-exec-3] p.p.e.ControllerExceptionHandler         : Request URL : http://localhost:8080/comment/2，Exception : {}

org.springframework.web.util.NestedServletException: Handler dispatch failed; nested exception is java.lang.StackOverflowError
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1055)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.StackOverflowError: null
	at java.util.concurrent.ConcurrentHashMap.get(ConcurrentHashMap.java:936)
	at sun.util.locale.provider.LocaleServiceProviderPool.getPool(LocaleServiceProviderPool.java:109)
	at sun.util.locale.provider.TimeZoneNameUtility.retrieveDisplayNamesImpl(TimeZoneNameUtility.java:147)
	at sun.util.locale.provider.TimeZoneNameUtility.retrieveDisplayName(TimeZoneNameUtility.java:137)
	at java.util.TimeZone.getDisplayName(TimeZone.java:400)
	at java.util.Date.toString(Date.java:1045)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at java.util.AbstractCollection.toString(AbstractCollection.java:462)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)
	at java.lang.StringBuilder.append(StringBuilder.java:131)
	at personal.personalblogreturn.pojo.Comment.toString(Comment.java:18)
	at java.lang.String.valueOf(String.java:2994)

2020-02-21 18:13:09.458  WARN 11524 --- [http-nio-8080-exec-3] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.util.NestedServletException: Handler dispatch failed; nested exception is java.lang.StackOverflowError]
2020-02-21 18:13:44.990  INFO 11524 --- [Thread-16] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 18:13:44.991  INFO 11524 --- [Thread-16] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 18:13:45.000  INFO 11524 --- [Thread-16] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-02-21 18:13:45.862  INFO 11524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 11524 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 18:13:45.862 DEBUG 11524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 18:13:45.863  INFO 11524 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 18:13:46.492  INFO 11524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 18:13:46.493  INFO 11524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 18:13:46.509  INFO 11524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16ms. Found 0 JDBC repository interfaces.
2020-02-21 18:13:46.516  INFO 11524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 18:13:46.516  INFO 11524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 18:13:46.523  INFO 11524 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6ms. Found 0 JPA repository interfaces.
2020-02-21 18:13:46.785  INFO 11524 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 18:13:46.808  WARN 11524 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'projectingArgumentResolverBeanPostProcessor' defined in class path resource [org/springframework/data/web/config/ProjectingArgumentResolverRegistrar.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: warning no match for this type name: personal.personalblogreturn.service.BlogServiceImpl [Xlint:invalidAbsoluteTypeName]
2020-02-21 18:13:46.816  INFO 11524 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-02-21 18:13:46.834 ERROR 11524 --- [restartedMain] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'projectingArgumentResolverBeanPostProcessor' defined in class path resource [org/springframework/data/web/config/ProjectingArgumentResolverRegistrar.class]: BeanPostProcessor before instantiation of bean failed; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: warning no match for this type name: personal.personalblogreturn.service.BlogServiceImpl [Xlint:invalidAbsoluteTypeName]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:512)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.context.support.PostProcessorRegistrationDelegate.registerBeanPostProcessors(PostProcessorRegistrationDelegate.java:240)
	at org.springframework.context.support.AbstractApplicationContext.registerBeanPostProcessors(AbstractApplicationContext.java:722)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:535)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at personal.personalblogreturn.PersonalBlogReturnApplication.main(PersonalBlogReturnApplication.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration': Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: warning no match for this type name: personal.personalblogreturn.service.BlogServiceImpl [Xlint:invalidAbsoluteTypeName]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:603)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:409)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:207)
	at org.springframework.aop.framework.autoproxy.BeanFactoryAdvisorRetrievalHelper.findAdvisorBeans(BeanFactoryAdvisorRetrievalHelper.java:91)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findCandidateAdvisors(AbstractAdvisorAutoProxyCreator.java:109)
	at org.springframework.aop.aspectj.annotation.AnnotationAwareAspectJAutoProxyCreator.findCandidateAdvisors(AnnotationAwareAspectJAutoProxyCreator.java:92)
	at org.springframework.aop.aspectj.autoproxy.AspectJAwareAdvisorAutoProxyCreator.shouldSkip(AspectJAwareAdvisorAutoProxyCreator.java:101)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessBeforeInstantiation(AbstractAutoProxyCreator.java:251)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1141)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.resolveBeforeInstantiation(AbstractAutowireCapableBeanFactory.java:1114)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:506)
	... 19 common frames omitted
Caused by: java.lang.IllegalArgumentException: warning no match for this type name: personal.personalblogreturn.service.BlogServiceImpl [Xlint:invalidAbsoluteTypeName]
	at org.aspectj.weaver.tools.PointcutParser.parsePointcutExpression(PointcutParser.java:319)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.buildPointcutExpression(AspectJExpressionPointcut.java:227)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.obtainPointcutExpression(AspectJExpressionPointcut.java:198)
	at org.springframework.aop.aspectj.AspectJExpressionPointcut.getClassFilter(AspectJExpressionPointcut.java:177)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:226)
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:289)
	at org.springframework.aop.support.AopUtils.findAdvisorsThatCanApply(AopUtils.java:321)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findAdvisorsThatCanApply(AbstractAdvisorAutoProxyCreator.java:126)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:95)
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:76)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:347)
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:299)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1800)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	... 41 common frames omitted

2020-02-21 19:01:40.303  INFO 14392 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 14392 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 19:01:40.306 DEBUG 14392 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 19:01:40.306  INFO 14392 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 19:01:40.382  INFO 14392 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 19:01:40.383  INFO 14392 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 19:01:40.383  INFO 14392 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 19:01:41.155  INFO 14392 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 19:01:41.156  INFO 14392 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 19:01:41.178  INFO 14392 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 18ms. Found 0 JDBC repository interfaces.
2020-02-21 19:01:41.189  INFO 14392 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 19:01:41.189  INFO 14392 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 19:01:41.199  INFO 14392 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6ms. Found 0 JPA repository interfaces.
2020-02-21 19:01:41.547  INFO 14392 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 19:01:42.011  INFO 14392 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 19:01:42.020  INFO 14392 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 19:01:42.021  INFO 14392 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 19:01:42.175  INFO 14392 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 19:01:42.175  INFO 14392 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1791 ms
2020-02-21 19:01:42.498  INFO 14392 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 19:01:42.566  INFO 14392 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 19:01:42.683  INFO 14392 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 19:01:42.785 ERROR 14392 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 19:01:42.791  INFO 14392 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 19:01:42.903  INFO 14392 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 19:01:43.872  INFO 14392 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 19:01:43.881  INFO 14392 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 19:01:43.916  INFO 14392 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 19:01:44.240  WARN 14392 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 19:01:44.464  INFO 14392 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 19:01:45.057  INFO 14392 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 19:01:45.060  INFO 14392 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 6.067 seconds (JVM running for 7.613)
2020-02-21 19:01:54.117  INFO 14392 --- [http-nio-8080-exec-2] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 19:01:54.117  INFO 14392 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 19:01:54.131  INFO 14392 --- [http-nio-8080-exec-2] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2020-02-21 19:01:54.225  INFO 14392 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/index, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.index, args=[org.apache.catalina.session.StandardSessionFacade@310a083b, {}])
2020-02-21 19:01:54.251 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.m.TypeMapper.queryTypeByCountsBlog   : ==>  Preparing: SELECT DISTINCT t_type.* FROM t_type,t_blog where t_type.id = type_id Limit ? 
2020-02-21 19:01:54.509 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.m.TypeMapper.queryTypeByCountsBlog   : ==> Parameters: 6(Integer)
2020-02-21 19:01:54.527 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==    Columns: id, name
2020-02-21 19:01:54.527 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 2, 进阶知识
2020-02-21 19:01:54.530 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 19:01:54.531 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 2(Integer)
2020-02-21 19:01:54.533 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:01:54.537 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 5, 1, 1, <<BLOB>>, 1, 2019-12-20 20:30:42, <<BLOB>>, [TOC], 原创, 1, 1, JSR 303校验, 2019-12-20 20:30:42, 0, 2, 1
2020-02-21 19:01:54.540 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:01:54.540 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 2(Integer)
2020-02-21 19:01:54.543 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 19:01:54.543 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 2, 进阶知识
2020-02-21 19:01:54.543 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 19:01:54.544 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.545 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 5(Integer)
2020-02-21 19:01:54.546 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 0
2020-02-21 19:01:54.547 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 19:01:54.549 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.550 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 6(Integer)
2020-02-21 19:01:54.551 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 19:01:54.552 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 19:01:54.553 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 19:01:54.554 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 19:01:54.554 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 2
2020-02-21 19:01:54.555 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 3, 实战演练
2020-02-21 19:01:54.556 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 19:01:54.557 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 3(Integer)
2020-02-21 19:01:54.559 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 0
2020-02-21 19:01:54.559 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 30, 认知升级
2020-02-21 19:01:54.560 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 19:01:54.561 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 30(Integer)
2020-02-21 19:01:54.562 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:01:54.563 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 19:01:54.565 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:01:54.565 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 30(Integer)
2020-02-21 19:01:54.566 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 19:01:54.566 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 30, 认知升级
2020-02-21 19:01:54.567 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 19:01:54.567 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.568 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 7(Integer)
2020-02-21 19:01:54.571 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 19:01:54.572 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 19:01:54.572 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 7, SpringMVC
2020-02-21 19:01:54.573 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 19:01:54.574 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 19:01:54.576 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.576 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 9(Integer)
2020-02-21 19:01:54.578 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 19:01:54.578 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 19:01:54.578 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 19:01:54.578 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 5, Mybatis
2020-02-21 19:01:54.578 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 3
2020-02-21 19:01:54.578 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 2
2020-02-21 19:01:54.579 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 34, 后端
2020-02-21 19:01:54.579 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 19:01:54.580 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 34(Integer)
2020-02-21 19:01:54.581 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:01:54.582 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 7, 34, 1
2020-02-21 19:01:54.583 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:01:54.584 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 34(Integer)
2020-02-21 19:01:54.585 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 19:01:54.585 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 34, 后端
2020-02-21 19:01:54.586 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 19:01:54.588 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.588 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 3(Integer)
2020-02-21 19:01:54.591 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 19:01:54.591 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 1, SpringBoot
2020-02-21 19:01:54.591 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 8, Mysql
2020-02-21 19:01:54.592 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 17, Hibernate
2020-02-21 19:01:54.592 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 3
2020-02-21 19:01:54.592 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 19:01:54.593 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.593 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 10(Integer)
2020-02-21 19:01:54.595 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 19:01:54.595 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 19:01:54.595 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 19:01:54.596 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 5, Mybatis
2020-02-21 19:01:54.596 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 7, SpringMVC
2020-02-21 19:01:54.596 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 4
2020-02-21 19:01:54.597 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 2
2020-02-21 19:01:54.597 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 35, 算法
2020-02-21 19:01:54.597 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 19:01:54.597 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 35(Integer)
2020-02-21 19:01:54.599 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:01:54.600 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 47, 35, 1
2020-02-21 19:01:54.601 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:01:54.603 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 35(Integer)
2020-02-21 19:01:54.608 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 19:01:54.608 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 35, 算法
2020-02-21 19:01:54.608 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 19:01:54.609 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.609 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 2(Integer)
2020-02-21 19:01:54.611 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 19:01:54.611 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 1, SpringBoot
2020-02-21 19:01:54.611 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 6, MD5
2020-02-21 19:01:54.612 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 19:01:54.612 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 1
2020-02-21 19:01:54.613 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==        Row: 41, 工具
2020-02-21 19:01:54.614 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====>  Preparing: select * from t_blog where type_id = ? and status = true 
2020-02-21 19:01:54.614 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTypeId  : ====> Parameters: 41(Integer)
2020-02-21 19:01:54.615 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:01:54.616 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 19:01:54.616 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:01:54.617 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 41(Integer)
2020-02-21 19:01:54.618 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 19:01:54.618 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 41, 工具
2020-02-21 19:01:54.618 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 19:01:54.619 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.620 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 4(Integer)
2020-02-21 19:01:54.621 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 19:01:54.622 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 10, git
2020-02-21 19:01:54.622 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 11, github
2020-02-21 19:01:54.622 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 19:01:54.624 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 19:01:54.624 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.624 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 8(Integer)
2020-02-21 19:01:54.625 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 19:01:54.626 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 18, IntelliJ IDEA
2020-02-21 19:01:54.626 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 1
2020-02-21 19:01:54.626 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTypeId  : <====      Total: 2
2020-02-21 19:01:54.626 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.m.TypeMapper.queryTypeByCountsBlog   : <==      Total: 6
2020-02-21 19:01:54.628 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.m.TagMapper.queryTagByCountsBlog     : ==>  Preparing: SELECT DISTINCT t_tag.* FROM t_tag,t_blog_tags where id = tags_id Limit ? 
2020-02-21 19:01:54.628 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.m.TagMapper.queryTagByCountsBlog     : ==> Parameters: 9(Integer)
2020-02-21 19:01:54.630 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.TagMapper.queryTagByCountsBlog     : <==    Columns: id, name
2020-02-21 19:01:54.630 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 1, SpringBoot
2020-02-21 19:01:54.630 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 19:01:54.630 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 1(Integer)
2020-02-21 19:01:54.632 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:01:54.632 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 47, 35, 1
2020-02-21 19:01:54.633 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:01:54.633 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 35(Integer)
2020-02-21 19:01:54.634 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 19:01:54.634 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 35, 算法
2020-02-21 19:01:54.634 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 19:01:54.634 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.635 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 2(Integer)
2020-02-21 19:01:54.637 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 19:01:54.637 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 1, SpringBoot
2020-02-21 19:01:54.638 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 6, MD5
2020-02-21 19:01:54.638 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 19:01:54.638 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 7, 34, 1
2020-02-21 19:01:54.639 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:01:54.639 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 34(Integer)
2020-02-21 19:01:54.640 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 19:01:54.640 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 34, 后端
2020-02-21 19:01:54.640 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 19:01:54.641 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.641 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 3(Integer)
2020-02-21 19:01:54.642 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 19:01:54.642 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 1, SpringBoot
2020-02-21 19:01:54.642 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 8, Mysql
2020-02-21 19:01:54.642 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 17, Hibernate
2020-02-21 19:01:54.643 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 3
2020-02-21 19:01:54.643 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 2
2020-02-21 19:01:54.643 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 2, JavaSE
2020-02-21 19:01:54.643 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 19:01:54.644 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 2(Integer)
2020-02-21 19:01:54.645 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:01:54.646 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 19:01:54.646 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:01:54.647 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 2(Integer)
2020-02-21 19:01:54.648 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 19:01:54.648 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 2, 进阶知识
2020-02-21 19:01:54.648 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 19:01:54.649 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.649 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 6(Integer)
2020-02-21 19:01:54.650 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 19:01:54.650 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 19:01:54.650 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 19:01:54.650 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 19:01:54.651 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 19:01:54.652 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:01:54.653 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 30(Integer)
2020-02-21 19:01:54.654 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 19:01:54.654 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 30, 认知升级
2020-02-21 19:01:54.655 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 19:01:54.655 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.656 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 7(Integer)
2020-02-21 19:01:54.659 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 19:01:54.659 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 19:01:54.659 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 7, SpringMVC
2020-02-21 19:01:54.659 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 19:01:54.660 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 19:01:54.660 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.660 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 9(Integer)
2020-02-21 19:01:54.661 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 19:01:54.661 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 19:01:54.662 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 19:01:54.662 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 5, Mybatis
2020-02-21 19:01:54.662 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 3
2020-02-21 19:01:54.662 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 19:01:54.663 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.663 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 10(Integer)
2020-02-21 19:01:54.664 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 19:01:54.664 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 2, JavaSE
2020-02-21 19:01:54.664 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 4, Spring
2020-02-21 19:01:54.664 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 5, Mybatis
2020-02-21 19:01:54.665 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 7, SpringMVC
2020-02-21 19:01:54.665 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 4
2020-02-21 19:01:54.665 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 4
2020-02-21 19:01:54.665 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 4, Spring
2020-02-21 19:01:54.665 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 19:01:54.665 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 4(Integer)
2020-02-21 19:01:54.666 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:01:54.667 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 19:01:54.672 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 19:01:54.673 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 19:01:54.674 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 3
2020-02-21 19:01:54.674 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 5, Mybatis
2020-02-21 19:01:54.674 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 19:01:54.675 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 5(Integer)
2020-02-21 19:01:54.677 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:01:54.679 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 19:01:54.680 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 19:01:54.680 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 2
2020-02-21 19:01:54.680 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 6, MD5
2020-02-21 19:01:54.680 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 19:01:54.681 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 6(Integer)
2020-02-21 19:01:54.682 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:01:54.682 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 47, 35, 1
2020-02-21 19:01:54.683 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 1
2020-02-21 19:01:54.683 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 7, SpringMVC
2020-02-21 19:01:54.684 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 19:01:54.684 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 7(Integer)
2020-02-21 19:01:54.687 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:01:54.687 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 19:01:54.688 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 19:01:54.688 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 2
2020-02-21 19:01:54.688 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 8, Mysql
2020-02-21 19:01:54.688 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 19:01:54.689 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 8(Integer)
2020-02-21 19:01:54.690 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:01:54.690 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 7, 34, 1
2020-02-21 19:01:54.691 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 1
2020-02-21 19:01:54.691 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 10, git
2020-02-21 19:01:54.691 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 19:01:54.691 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 10(Integer)
2020-02-21 19:01:54.693 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:01:54.693 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 19:01:54.694 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ======>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:01:54.694 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ======> Parameters: 41(Integer)
2020-02-21 19:01:54.695 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <======    Columns: id, name
2020-02-21 19:01:54.695 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <======        Row: 41, 工具
2020-02-21 19:01:54.696 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <======      Total: 1
2020-02-21 19:01:54.696 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ======>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.696 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ======> Parameters: 4(Integer)
2020-02-21 19:01:54.697 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======    Columns: id, name
2020-02-21 19:01:54.697 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 10, git
2020-02-21 19:01:54.698 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======        Row: 11, github
2020-02-21 19:01:54.698 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <======      Total: 2
2020-02-21 19:01:54.698 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 1
2020-02-21 19:01:54.698 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.TagMapper.queryTagByCountsBlog     : <==        Row: 11, github
2020-02-21 19:01:54.698 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : ====>  Preparing: SELECT * FROM t_blog WHERE status = true and t_blog.`id` IN (SELECT blog_id FROM t_blog_tags WHERE tags_id = ?) 
2020-02-21 19:01:54.699 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : ====> Parameters: 11(Integer)
2020-02-21 19:01:54.700 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:01:54.700 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 19:01:54.700 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogByTagId   : <====      Total: 1
2020-02-21 19:01:54.701 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.m.TagMapper.queryTagByCountsBlog     : <==      Total: 9
2020-02-21 19:01:54.707 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 19:01:54.707 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 8(Integer)
2020-02-21 19:01:54.708 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:01:54.709 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 19:01:54.709 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 19:01:54.710 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 19:01:54.710 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 19:01:54.710 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 19:01:54.711 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 5, 1, 1, <<BLOB>>, 1, 2019-12-20 20:30:42, <<BLOB>>, [TOC], 原创, 1, 1, JSR 303校验, 2019-12-20 20:30:42, 0, 2, 1
2020-02-21 19:01:54.711 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 19:01:54.711 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 7, 34, 1
2020-02-21 19:01:54.711 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 8
2020-02-21 19:01:54.712 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryBlogIndexPage      : ==>  Preparing: Select * from t_blog where status = true order by update_time desc 
2020-02-21 19:01:54.713 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryBlogIndexPage      : ==> Parameters: 
2020-02-21 19:01:54.714 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryBlogIndexPage      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:01:54.715 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 47, 35, 1
2020-02-21 19:01:54.715 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:01:54.715 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:01:54.716 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:01:54.717 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:01:54.717 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:01:54.717 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.717 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:01:54.719 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:01:54.719 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:01:54.720 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:01:54.720 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:01:54.720 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 7, 34, 1
2020-02-21 19:01:54.721 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:01:54.721 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 34(Integer)
2020-02-21 19:01:54.724 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:01:54.724 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 34, 后端
2020-02-21 19:01:54.724 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:01:54.724 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.725 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 3(Integer)
2020-02-21 19:01:54.726 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:01:54.726 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:01:54.726 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 8, Mysql
2020-02-21 19:01:54.726 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 17, Hibernate
2020-02-21 19:01:54.726 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 19:01:54.727 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 19:01:54.727 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:01:54.727 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 41(Integer)
2020-02-21 19:01:54.728 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:01:54.729 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 41, 工具
2020-02-21 19:01:54.729 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:01:54.729 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.729 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 4(Integer)
2020-02-21 19:01:54.730 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:01:54.730 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 10, git
2020-02-21 19:01:54.731 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 11, github
2020-02-21 19:01:54.731 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:01:54.731 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 5, 1, 1, <<BLOB>>, 1, 2019-12-20 20:30:42, <<BLOB>>, [TOC], 原创, 1, 1, JSR 303校验, 2019-12-20 20:30:42, 0, 2, 1
2020-02-21 19:01:54.731 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:01:54.732 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 2(Integer)
2020-02-21 19:01:54.732 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:01:54.733 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 2, 进阶知识
2020-02-21 19:01:54.733 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:01:54.733 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.733 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 5(Integer)
2020-02-21 19:01:54.734 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 0
2020-02-21 19:01:54.735 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 19:01:54.737 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.737 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 10(Integer)
2020-02-21 19:01:54.739 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:01:54.739 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 19:01:54.740 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 19:01:54.740 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 5, Mybatis
2020-02-21 19:01:54.741 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 7, SpringMVC
2020-02-21 19:01:54.741 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 4
2020-02-21 19:01:54.742 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 19:01:54.742 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:01:54.742 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 30(Integer)
2020-02-21 19:01:54.743 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:01:54.743 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 30, 认知升级
2020-02-21 19:01:54.744 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:01:54.744 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.744 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 9(Integer)
2020-02-21 19:01:54.745 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:01:54.745 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 19:01:54.746 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 19:01:54.746 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 5, Mybatis
2020-02-21 19:01:54.746 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 19:01:54.746 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 19:01:54.747 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.747 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 8(Integer)
2020-02-21 19:01:54.748 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:01:54.748 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 18, IntelliJ IDEA
2020-02-21 19:01:54.749 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 1
2020-02-21 19:01:54.749 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 19:01:54.750 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.750 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 7(Integer)
2020-02-21 19:01:54.753 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:01:54.753 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 19:01:54.753 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 7, SpringMVC
2020-02-21 19:01:54.754 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:01:54.754 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 19:01:54.755 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.755 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 6(Integer)
2020-02-21 19:01:54.756 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:01:54.756 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 19:01:54.757 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 19:01:54.757 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:01:54.757 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryBlogIndexPage      : <==      Total: 9
2020-02-21 19:01:54.760 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryBlogIndexPage      : ==>  Preparing: Select * from t_blog where status = true order by update_time desc 
2020-02-21 19:01:54.761 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryBlogIndexPage      : ==> Parameters: 
2020-02-21 19:01:54.762 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryBlogIndexPage      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:01:54.762 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 47, 35, 1
2020-02-21 19:01:54.763 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:01:54.763 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:01:54.764 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:01:54.765 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:01:54.765 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:01:54.765 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.765 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:01:54.767 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:01:54.767 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:01:54.768 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:01:54.769 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:01:54.769 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 3, 1, 1, <<BLOB>>, 1, 2020-02-01 19:02:02, <<BLOB>>, https://i.picsum.photos/id/103/800/400.jpg, 原创, 1, 1, springboot使用springboot data jpa通过类创建表, 2020-02-01 19:02:02, 7, 34, 1
2020-02-21 19:01:54.771 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:01:54.771 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 34(Integer)
2020-02-21 19:01:54.773 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:01:54.773 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 34, 后端
2020-02-21 19:01:54.773 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:01:54.773 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.773 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 3(Integer)
2020-02-21 19:01:54.774 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:01:54.774 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:01:54.774 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 8, Mysql
2020-02-21 19:01:54.775 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 17, Hibernate
2020-02-21 19:01:54.775 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 19:01:54.775 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 4, 1, 1, <<BLOB>>, 1, 2020-01-14 20:16:41, <<BLOB>>, asd, 原创, 1, 1, Git&Github, 2020-01-14 20:16:41, 0, 41, 1
2020-02-21 19:01:54.775 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:01:54.776 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 41(Integer)
2020-02-21 19:01:54.777 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:01:54.777 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 41, 工具
2020-02-21 19:01:54.777 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:01:54.777 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.778 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 4(Integer)
2020-02-21 19:01:54.779 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:01:54.779 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 10, git
2020-02-21 19:01:54.779 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 11, github
2020-02-21 19:01:54.779 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:01:54.780 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 5, 1, 1, <<BLOB>>, 1, 2019-12-20 20:30:42, <<BLOB>>, [TOC], 原创, 1, 1, JSR 303校验, 2019-12-20 20:30:42, 0, 2, 1
2020-02-21 19:01:54.780 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:01:54.780 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 2(Integer)
2020-02-21 19:01:54.781 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:01:54.781 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 2, 进阶知识
2020-02-21 19:01:54.782 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:01:54.782 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.782 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 5(Integer)
2020-02-21 19:01:54.783 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 0
2020-02-21 19:01:54.783 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 10, 1, 1, <<BLOB>>, 1, 2019-12-17 00:06:16, <<BLOB>>, [TOC], 原创, 1, 1, SSM框架整合入门（Spring,SpringMVC,Mybatis整合）, 2019-12-17 00:06:16, 0, 34, 1
2020-02-21 19:01:54.783 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.784 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 10(Integer)
2020-02-21 19:01:54.786 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:01:54.786 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 19:01:54.787 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 19:01:54.787 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 5, Mybatis
2020-02-21 19:01:54.787 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 7, SpringMVC
2020-02-21 19:01:54.787 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 4
2020-02-21 19:01:54.787 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 9, 1, 1, <<BLOB>>, 1, 2019-12-16 23:35:05, <<BLOB>>, [TOC], 原创, 1, 1, Spring整合Mybatis, 2019-12-16 23:35:05, 0, 30, 1
2020-02-21 19:01:54.788 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:01:54.788 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 30(Integer)
2020-02-21 19:01:54.789 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:01:54.789 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 30, 认知升级
2020-02-21 19:01:54.789 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:01:54.789 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.789 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 9(Integer)
2020-02-21 19:01:54.790 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:01:54.790 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 19:01:54.791 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 19:01:54.791 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 5, Mybatis
2020-02-21 19:01:54.791 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 3
2020-02-21 19:01:54.791 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 19:01:54.792 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.792 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 8(Integer)
2020-02-21 19:01:54.793 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:01:54.793 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 18, IntelliJ IDEA
2020-02-21 19:01:54.793 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 1
2020-02-21 19:01:54.794 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 19:01:54.794 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.794 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 7(Integer)
2020-02-21 19:01:54.795 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:01:54.795 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 19:01:54.796 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 7, SpringMVC
2020-02-21 19:01:54.796 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:01:54.796 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryBlogIndexPage      : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 19:01:54.796 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:54.796 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 6(Integer)
2020-02-21 19:01:54.797 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:01:54.797 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 2, JavaSE
2020-02-21 19:01:54.798 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 4, Spring
2020-02-21 19:01:54.798 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:01:54.798 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.queryBlogIndexPage      : <==      Total: 9
2020-02-21 19:01:54.800  INFO 14392 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/index
2020-02-21 19:01:55.558  INFO 14392 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 19:01:55.563 DEBUG 14392 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 19:01:55.563 DEBUG 14392 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 19:01:55.569 TRACE 14392 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:01:55.569 TRACE 14392 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 19:01:55.570 TRACE 14392 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 19:01:55.570 TRACE 14392 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 19:01:55.571 DEBUG 14392 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 19:01:55.571  INFO 14392 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 19:01:56.776  INFO 14392 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 19:01:56.777 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 19:01:56.777 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 19:01:56.792 TRACE 14392 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:01:56.793 TRACE 14392 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 47, 35, 1
2020-02-21 19:01:56.794 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:01:56.794 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:01:56.811 TRACE 14392 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:01:56.811 TRACE 14392 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:01:56.811 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:01:56.811 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:56.812 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:01:56.814 TRACE 14392 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:01:56.814 TRACE 14392 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:01:56.814 TRACE 14392 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:01:56.814 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:01:56.815 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 19:01:56.821 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 19:01:56.824 TRACE 14392 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:01:56.824 TRACE 14392 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 19:01:56.825 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 19:01:56.825 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 19:01:56.834 TRACE 14392 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:01:56.834 TRACE 14392 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 19:01:56.835 TRACE 14392 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 19:01:56.837 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 19:01:56.837 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 19:01:56.837 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 19:01:56.838 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 19:01:56.838 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 19:01:56.852 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 19:01:56.961  INFO 14392 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 19:01:57.303  INFO 14392 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 19:01:57.304 DEBUG 14392 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 19:01:57.305 DEBUG 14392 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 19:01:57.307 TRACE 14392 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:01:57.307 TRACE 14392 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 19:01:57.308 TRACE 14392 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 19:01:57.309 TRACE 14392 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 19:01:57.309 DEBUG 14392 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 19:01:57.309  INFO 14392 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 19:01:57.408  INFO 14392 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 19:01:57.409 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 19:01:57.409 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 19:01:57.410 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:01:57.411 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 48, 35, 1
2020-02-21 19:01:57.412 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:01:57.412 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:01:57.415 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:01:57.415 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:01:57.415 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:01:57.416 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:01:57.416 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:01:57.421 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:01:57.421 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:01:57.422 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:01:57.422 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:01:57.422 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 19:01:57.423 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 19:01:57.424 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:01:57.425 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 19:01:57.425 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 19:01:57.426 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 19:01:57.427 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:01:57.427 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 19:01:57.428 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 19:01:57.428 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 19:01:57.428 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 19:01:57.428 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 19:01:57.429  INFO 14392 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 19:01:57.453 ERROR 14392 --- [http-nio-8080-exec-2] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-2] Exception processing template "public/blog::[commentList]": An error happened during template parsing (template: "class path resource [templates/public/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/public/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "comment.nickname" (template: "public/blog" - line 98, col 58)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "comment.nickname" (template: "public/blog" - line 98, col 58)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardMultipleAttributeModifierTagProcessor.doProcess(AbstractStandardMultipleAttributeModifierTagProcessor.java:138)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.select.BlockSelectorMarkupHandler.handleCloseElementEnd(BlockSelectorMarkupHandler.java:1178)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'nickname' cannot be found on object of type 'personal.personalblogreturn.pojo.Comment' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 76 common frames omitted

2020-02-21 19:01:57.457 ERROR 14392 --- [http-nio-8080-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/public/blog.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'nickname' cannot be found on object of type 'personal.personalblogreturn.pojo.Comment' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardMultipleAttributeModifierTagProcessor.doProcess(AbstractStandardMultipleAttributeModifierTagProcessor.java:138)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.select.BlockSelectorMarkupHandler.handleCloseElementEnd(BlockSelectorMarkupHandler.java:1178)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-21 19:02:24.337  INFO 14392 --- [http-nio-8080-exec-7] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 19:02:24.338 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 19:02:24.338 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 19:02:24.342 TRACE 14392 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:02:24.343 TRACE 14392 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 48, 35, 1
2020-02-21 19:02:24.344 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:02:24.345 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:02:24.354 TRACE 14392 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:02:24.354 TRACE 14392 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:02:24.354 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:02:24.355 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:02:24.355 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:02:24.363 TRACE 14392 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:02:24.364 TRACE 14392 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:02:24.364 TRACE 14392 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:02:24.364 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:02:24.364 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 19:02:24.365 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 19:02:24.366 TRACE 14392 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:02:24.367 TRACE 14392 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 19:02:24.367 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 19:02:24.367 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 19:02:24.368 TRACE 14392 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:02:24.368 TRACE 14392 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 19:02:24.369 TRACE 14392 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 19:02:24.369 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 19:02:24.369 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 19:02:24.369 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 19:02:24.369 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 19:02:24.369 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 19:02:24.374 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 19:02:24.375  INFO 14392 --- [http-nio-8080-exec-7] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 19:02:24.568  INFO 14392 --- [http-nio-8080-exec-9] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 19:02:24.568 DEBUG 14392 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 19:02:24.568 DEBUG 14392 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 19:02:24.569 TRACE 14392 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:02:24.570 TRACE 14392 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 19:02:24.570 TRACE 14392 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 19:02:24.571 TRACE 14392 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 19:02:24.571 DEBUG 14392 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 19:02:24.571  INFO 14392 --- [http-nio-8080-exec-9] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 19:02:24.680  INFO 14392 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 19:02:24.681 DEBUG 14392 --- [http-nio-8080-exec-10] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 19:02:24.682 DEBUG 14392 --- [http-nio-8080-exec-10] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 19:02:24.683 TRACE 14392 --- [http-nio-8080-exec-10] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:02:24.683 TRACE 14392 --- [http-nio-8080-exec-10] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 49, 35, 1
2020-02-21 19:02:24.684 DEBUG 14392 --- [http-nio-8080-exec-10] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:02:24.684 DEBUG 14392 --- [http-nio-8080-exec-10] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:02:24.685 TRACE 14392 --- [http-nio-8080-exec-10] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:02:24.685 TRACE 14392 --- [http-nio-8080-exec-10] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:02:24.685 DEBUG 14392 --- [http-nio-8080-exec-10] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:02:24.686 DEBUG 14392 --- [http-nio-8080-exec-10] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:02:24.686 DEBUG 14392 --- [http-nio-8080-exec-10] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:02:24.688 TRACE 14392 --- [http-nio-8080-exec-10] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:02:24.688 TRACE 14392 --- [http-nio-8080-exec-10] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:02:24.689 TRACE 14392 --- [http-nio-8080-exec-10] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:02:24.689 DEBUG 14392 --- [http-nio-8080-exec-10] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:02:24.689 DEBUG 14392 --- [http-nio-8080-exec-10] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 19:02:24.690 DEBUG 14392 --- [http-nio-8080-exec-10] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 19:02:24.692 TRACE 14392 --- [http-nio-8080-exec-10] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:02:24.692 TRACE 14392 --- [http-nio-8080-exec-10] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 19:02:24.692 DEBUG 14392 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 19:02:24.693 DEBUG 14392 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 19:02:24.698 TRACE 14392 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:02:24.698 TRACE 14392 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 19:02:24.699 TRACE 14392 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 19:02:24.699 DEBUG 14392 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 19:02:24.699 DEBUG 14392 --- [http-nio-8080-exec-10] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 19:02:24.699 DEBUG 14392 --- [http-nio-8080-exec-10] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 19:02:24.700  INFO 14392 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 19:02:24.706 ERROR 14392 --- [http-nio-8080-exec-10] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-10] Exception processing template "public/blog::[commentList]": An error happened during template parsing (template: "class path resource [templates/public/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/public/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "comment.nickname" (template: "public/blog" - line 98, col 58)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "comment.nickname" (template: "public/blog" - line 98, col 58)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardMultipleAttributeModifierTagProcessor.doProcess(AbstractStandardMultipleAttributeModifierTagProcessor.java:138)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.select.BlockSelectorMarkupHandler.handleCloseElementEnd(BlockSelectorMarkupHandler.java:1178)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'nickname' cannot be found on object of type 'personal.personalblogreturn.pojo.Comment' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 76 common frames omitted

2020-02-21 19:02:24.710 ERROR 14392 --- [http-nio-8080-exec-10] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/public/blog.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1008E: Property or field 'nickname' cannot be found on object of type 'personal.personalblogreturn.pojo.Comment' - maybe not public or not valid?
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:217)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardMultipleAttributeModifierTagProcessor.doProcess(AbstractStandardMultipleAttributeModifierTagProcessor.java:138)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.select.BlockSelectorMarkupHandler.handleCloseElementEnd(BlockSelectorMarkupHandler.java:1178)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-21 19:02:53.878  INFO 14392 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 19:02:53.879 DEBUG 14392 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 19:02:53.880 DEBUG 14392 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 19:02:53.884 TRACE 14392 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:02:53.884 TRACE 14392 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 49, 35, 1
2020-02-21 19:02:53.885 DEBUG 14392 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:02:53.885 DEBUG 14392 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:02:53.900 TRACE 14392 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:02:53.901 TRACE 14392 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:02:53.901 DEBUG 14392 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:02:53.901 DEBUG 14392 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:02:53.901 DEBUG 14392 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:02:53.903 TRACE 14392 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:02:53.903 TRACE 14392 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:02:53.903 TRACE 14392 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:02:53.903 DEBUG 14392 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:02:53.904 DEBUG 14392 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 19:02:53.905 DEBUG 14392 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 19:02:53.908 TRACE 14392 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:02:53.908 TRACE 14392 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 19:02:53.909 DEBUG 14392 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 19:02:53.909 DEBUG 14392 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 19:02:53.910 TRACE 14392 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:02:53.911 TRACE 14392 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 19:02:53.911 TRACE 14392 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 19:02:53.912 DEBUG 14392 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 19:02:53.912 DEBUG 14392 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 19:02:53.912 DEBUG 14392 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 19:02:53.913 DEBUG 14392 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 19:02:53.913 DEBUG 14392 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 19:02:53.917 DEBUG 14392 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 19:02:53.920  INFO 14392 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 19:02:54.118  INFO 14392 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 19:02:54.118 DEBUG 14392 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 19:02:54.118 DEBUG 14392 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 19:02:54.120 TRACE 14392 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:02:54.120 TRACE 14392 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 19:02:54.123 TRACE 14392 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 19:02:54.125 TRACE 14392 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 19:02:54.125 DEBUG 14392 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 19:02:54.125  INFO 14392 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 19:02:54.230  INFO 14392 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 19:02:54.230 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 19:02:54.231 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 19:02:54.232 TRACE 14392 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:02:54.232 TRACE 14392 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 50, 35, 1
2020-02-21 19:02:54.233 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:02:54.234 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:02:54.235 TRACE 14392 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:02:54.235 TRACE 14392 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:02:54.235 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:02:54.235 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:02:54.236 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:02:54.242 TRACE 14392 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:02:54.242 TRACE 14392 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:02:54.242 TRACE 14392 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:02:54.242 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:02:54.243 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 19:02:54.243 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 19:02:54.245 TRACE 14392 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:02:54.245 TRACE 14392 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 19:02:54.247 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 19:02:54.247 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 19:02:54.248 TRACE 14392 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:02:54.249 TRACE 14392 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 19:02:54.249 TRACE 14392 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 19:02:54.249 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 19:02:54.250 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 19:02:54.250 DEBUG 14392 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 19:02:54.250  INFO 14392 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 19:04:09.454  INFO 14392 --- [http-nio-8080-exec-7] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 19:04:09.460 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 19:04:09.460 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 19:04:09.463 TRACE 14392 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:04:09.463 TRACE 14392 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 50, 35, 1
2020-02-21 19:04:09.463 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:04:09.464 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:04:09.467 TRACE 14392 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:04:09.467 TRACE 14392 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:04:09.467 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:04:09.468 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:04:09.468 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:04:09.472 TRACE 14392 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:04:09.472 TRACE 14392 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:04:09.473 TRACE 14392 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:04:09.473 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:04:09.473 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 19:04:09.474 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 19:04:09.476 TRACE 14392 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:04:09.476 TRACE 14392 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 19:04:09.478 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 19:04:09.479 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 19:04:09.500 TRACE 14392 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:04:09.500 TRACE 14392 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 19:04:09.501 TRACE 14392 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 19:04:09.501 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 19:04:09.501 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 19:04:09.501 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 19:04:09.501 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 19:04:09.501 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 19:04:09.507 DEBUG 14392 --- [http-nio-8080-exec-7] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 19:04:09.509  INFO 14392 --- [http-nio-8080-exec-7] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 19:04:09.685  INFO 14392 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 19:04:09.689 DEBUG 14392 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 19:04:09.690 DEBUG 14392 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 19:04:09.693 TRACE 14392 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:04:09.693 TRACE 14392 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 19:04:09.694 TRACE 14392 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 19:04:09.694 TRACE 14392 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 19:04:09.694 DEBUG 14392 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 19:04:09.695  INFO 14392 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 19:04:09.881  INFO 14392 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 19:04:09.881 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 19:04:09.882 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 19:04:09.884 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:04:09.884 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 51, 35, 1
2020-02-21 19:04:09.884 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:04:09.885 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:04:09.890 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:04:09.890 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:04:09.890 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:04:09.891 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:04:09.891 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:04:09.894 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:04:09.894 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:04:09.894 TRACE 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:04:09.894 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:04:09.895 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 19:04:09.895 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 19:04:09.896 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:04:09.896 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 19:04:09.897 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 19:04:09.897 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 19:04:09.900 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:04:09.901 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 19:04:09.902 TRACE 14392 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 19:04:09.902 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 19:04:09.902 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 19:04:09.904 DEBUG 14392 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 19:04:09.906  INFO 14392 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 19:04:59.872  INFO 14392 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 19:04:59.873 DEBUG 14392 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 19:04:59.876 DEBUG 14392 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 19:04:59.902 TRACE 14392 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:04:59.902 TRACE 14392 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 51, 35, 1
2020-02-21 19:04:59.903 DEBUG 14392 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:04:59.903 DEBUG 14392 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:04:59.904 TRACE 14392 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:04:59.904 TRACE 14392 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:04:59.905 DEBUG 14392 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:04:59.905 DEBUG 14392 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:04:59.905 DEBUG 14392 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:04:59.912 TRACE 14392 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:04:59.912 TRACE 14392 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:04:59.912 TRACE 14392 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:04:59.913 DEBUG 14392 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:04:59.913 DEBUG 14392 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 19:04:59.913 DEBUG 14392 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 19:04:59.917 TRACE 14392 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:04:59.917 TRACE 14392 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 19:04:59.917 DEBUG 14392 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 19:04:59.918 DEBUG 14392 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 19:04:59.920 TRACE 14392 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:04:59.920 TRACE 14392 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 19:04:59.920 TRACE 14392 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 19:04:59.920 DEBUG 14392 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 19:04:59.920 DEBUG 14392 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 19:04:59.920 DEBUG 14392 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 19:04:59.921 DEBUG 14392 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 19:04:59.921 DEBUG 14392 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 19:04:59.928 DEBUG 14392 --- [http-nio-8080-exec-6] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 19:04:59.930  INFO 14392 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 19:05:00.281  INFO 14392 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 19:05:00.282 DEBUG 14392 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 19:05:00.282 DEBUG 14392 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 19:05:00.284 TRACE 14392 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:05:00.284 TRACE 14392 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 19:05:00.285 TRACE 14392 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 19:05:00.286 TRACE 14392 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 19:05:00.286 DEBUG 14392 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 19:05:00.287  INFO 14392 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 19:05:00.467  INFO 14392 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 19:05:00.467 DEBUG 14392 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 19:05:00.467 DEBUG 14392 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 19:05:00.566 TRACE 14392 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:05:00.567 TRACE 14392 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 52, 35, 1
2020-02-21 19:05:00.568 DEBUG 14392 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:05:00.568 DEBUG 14392 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:05:00.629 TRACE 14392 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:05:00.629 TRACE 14392 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:05:00.629 DEBUG 14392 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:05:00.630 DEBUG 14392 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:05:00.630 DEBUG 14392 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:05:00.648 TRACE 14392 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:05:00.648 TRACE 14392 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:05:00.648 TRACE 14392 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:05:00.648 DEBUG 14392 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:05:00.648 DEBUG 14392 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 19:05:00.649 DEBUG 14392 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 19:05:00.650 TRACE 14392 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:05:00.650 TRACE 14392 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 19:05:00.651 DEBUG 14392 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 19:05:00.651 DEBUG 14392 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 19:05:00.652 TRACE 14392 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:05:00.653 TRACE 14392 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 19:05:00.653 TRACE 14392 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 19:05:00.653 DEBUG 14392 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 19:05:00.653 DEBUG 14392 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 19:05:00.653 DEBUG 14392 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 19:05:00.654  INFO 14392 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 19:21:04.689  INFO 14392 --- [Thread-13] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 19:21:04.690  INFO 14392 --- [Thread-13] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 19:21:04.697  INFO 14392 --- [Thread-13] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-02-21 19:21:05.413  INFO 14392 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 14392 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 19:21:05.413 DEBUG 14392 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 19:21:05.413  INFO 14392 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 19:21:05.882  INFO 14392 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 19:21:05.882  INFO 14392 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 19:21:05.904  INFO 14392 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 21ms. Found 0 JDBC repository interfaces.
2020-02-21 19:21:05.911  INFO 14392 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 19:21:05.911  INFO 14392 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 19:21:05.918  INFO 14392 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6ms. Found 0 JPA repository interfaces.
2020-02-21 19:21:06.049  INFO 14392 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 19:21:06.297  WARN 14392 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 19:21:06.396  INFO 14392 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 19:21:06.413  INFO 14392 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 19:21:06.413  INFO 14392 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 19:21:06.478  INFO 14392 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 19:21:06.478  INFO 14392 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1060 ms
2020-02-21 19:21:06.775  INFO 14392 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 19:21:06.784 ERROR 14392 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 19:21:06.786  INFO 14392 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-02-21 19:21:06.795  INFO 14392 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 19:21:06.807  WARN 14392 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is java.lang.TypeNotPresentException: Type personal.personalblogreturn.pojo.Comment not present
2020-02-21 19:21:06.809  INFO 14392 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} closed
2020-02-21 19:21:06.809  INFO 14392 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2020-02-21 19:21:06.832  INFO 14392 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-02-21 19:21:06.868 ERROR 14392 --- [restartedMain] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'entityManagerFactory' defined in class path resource [org/springframework/boot/autoconfigure/orm/jpa/HibernateJpaConfiguration.class]: Invocation of init method failed; nested exception is java.lang.TypeNotPresentException: Type personal.personalblogreturn.pojo.Comment not present
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1796)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:595)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.context.support.AbstractApplicationContext.getBean(AbstractApplicationContext.java:1108)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:868)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at personal.personalblogreturn.PersonalBlogReturnApplication.main(PersonalBlogReturnApplication.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: java.lang.TypeNotPresentException: Type personal.personalblogreturn.pojo.Comment not present
	at sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType(CoreReflectionFactory.java:117)
	at sun.reflect.generics.visitor.Reifier.visitClassTypeSignature(Reifier.java:125)
	at sun.reflect.generics.tree.ClassTypeSignature.accept(ClassTypeSignature.java:49)
	at sun.reflect.generics.visitor.Reifier.reifyTypeArguments(Reifier.java:68)
	at sun.reflect.generics.visitor.Reifier.visitClassTypeSignature(Reifier.java:138)
	at sun.reflect.generics.tree.ClassTypeSignature.accept(ClassTypeSignature.java:49)
	at sun.reflect.generics.repository.MethodRepository.getReturnType(MethodRepository.java:68)
	at java.lang.reflect.Method.getGenericReturnType(Method.java:255)
	at org.hibernate.annotations.common.reflection.java.JavaXClass.getDeclaredMethodProperties(JavaXClass.java:96)
	at org.hibernate.annotations.common.reflection.java.JavaXClass.getDeclaredProperties(JavaXClass.java:112)
	at org.hibernate.annotations.common.reflection.java.JavaXClass.getDeclaredProperties(JavaXClass.java:104)
	at org.hibernate.cfg.InheritanceState.determineDefaultAccessType(InheritanceState.java:252)
	at org.hibernate.cfg.InheritanceState.getElementsToProcess(InheritanceState.java:211)
	at org.hibernate.cfg.AnnotationBinder.bindClass(AnnotationBinder.java:781)
	at org.hibernate.boot.model.source.internal.annotations.AnnotationMetadataSourceProcessorImpl.processEntityHierarchies(AnnotationMetadataSourceProcessorImpl.java:254)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess$1.processEntityHierarchies(MetadataBuildingProcess.java:230)
	at org.hibernate.boot.model.process.spi.MetadataBuildingProcess.complete(MetadataBuildingProcess.java:273)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.metadata(EntityManagerFactoryBuilderImpl.java:1202)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:1233)
	at org.springframework.orm.jpa.vendor.SpringHibernateJpaPersistenceProvider.createContainerEntityManagerFactory(SpringHibernateJpaPersistenceProvider.java:58)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.createNativeEntityManagerFactory(LocalContainerEntityManagerFactoryBean.java:365)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.buildNativeEntityManagerFactory(AbstractEntityManagerFactoryBean.java:391)
	at org.springframework.orm.jpa.AbstractEntityManagerFactoryBean.afterPropertiesSet(AbstractEntityManagerFactoryBean.java:378)
	at org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean.afterPropertiesSet(LocalContainerEntityManagerFactoryBean.java:341)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1855)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1792)
	... 21 common frames omitted
Caused by: java.lang.ClassNotFoundException: personal.personalblogreturn.pojo.Comment
	at java.net.URLClassLoader.findClass(URLClassLoader.java:382)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:418)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:355)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at org.springframework.boot.devtools.restart.classloader.RestartClassLoader.loadClass(RestartClassLoader.java:144)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:351)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at sun.reflect.generics.factory.CoreReflectionFactory.makeNamedType(CoreReflectionFactory.java:114)
	... 46 common frames omitted

2020-02-21 19:21:40.362  INFO 14392 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 14392 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 19:21:40.362 DEBUG 14392 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 19:21:40.362  INFO 14392 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 19:23:18.712  INFO 10100 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 10100 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 19:23:18.718 DEBUG 10100 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 19:23:18.718  INFO 10100 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 19:23:18.807  INFO 10100 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 19:23:18.808  INFO 10100 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 19:23:18.808  INFO 10100 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 19:23:19.661  INFO 10100 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 19:23:19.661  INFO 10100 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 19:23:19.692  INFO 10100 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17ms. Found 0 JDBC repository interfaces.
2020-02-21 19:23:19.692  INFO 10100 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 19:23:19.692  INFO 10100 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 19:23:19.708  INFO 10100 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4ms. Found 0 JPA repository interfaces.
2020-02-21 19:23:20.020  INFO 10100 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 19:23:20.481  INFO 10100 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 19:23:20.490  INFO 10100 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 19:23:20.490  INFO 10100 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 19:23:20.706  INFO 10100 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 19:23:20.707  INFO 10100 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1898 ms
2020-02-21 19:23:20.943  INFO 10100 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 19:23:21.000  INFO 10100 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 19:23:21.105  INFO 10100 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 19:23:21.204 ERROR 10100 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 19:23:21.210  INFO 10100 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 19:23:21.314  INFO 10100 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 19:23:22.145  INFO 10100 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 19:23:22.145  INFO 10100 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 19:23:22.176  INFO 10100 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 19:23:22.479  WARN 10100 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 19:23:22.680  INFO 10100 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 19:23:23.262  INFO 10100 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 19:23:23.265  INFO 10100 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 5.743 seconds (JVM running for 7.318)
2020-02-21 19:26:15.027  INFO 10100 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 19:26:15.028  INFO 10100 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 19:26:15.042  INFO 10100 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2020-02-21 19:26:15.157  INFO 10100 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 19:26:15.189 DEBUG 10100 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 19:26:15.448 DEBUG 10100 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 19:26:15.469 TRACE 10100 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:26:15.471 TRACE 10100 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 52, 35, 1
2020-02-21 19:26:15.474 DEBUG 10100 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:26:15.475 DEBUG 10100 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:26:15.476 TRACE 10100 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:26:15.476 TRACE 10100 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:26:15.478 DEBUG 10100 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:26:15.480 DEBUG 10100 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:26:15.481 DEBUG 10100 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:26:15.483 TRACE 10100 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:26:15.484 TRACE 10100 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:26:15.484 TRACE 10100 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:26:15.484 DEBUG 10100 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:26:15.484 DEBUG 10100 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 19:26:15.485 DEBUG 10100 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 19:26:15.486 TRACE 10100 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:26:15.486 TRACE 10100 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 19:26:15.487 DEBUG 10100 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 19:26:15.487 DEBUG 10100 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 19:26:15.488 TRACE 10100 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:26:15.489 TRACE 10100 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 19:26:15.490 TRACE 10100 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 19:26:15.491 DEBUG 10100 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 19:26:15.491 DEBUG 10100 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 19:26:15.491 DEBUG 10100 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 19:26:15.492 DEBUG 10100 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 19:26:15.493 DEBUG 10100 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 19:26:15.501 DEBUG 10100 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 19:26:15.552  INFO 10100 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 19:26:16.249  INFO 10100 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 19:26:16.256 DEBUG 10100 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 19:26:16.257 DEBUG 10100 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 19:26:16.258 TRACE 10100 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:26:16.259 TRACE 10100 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 19:26:16.264 TRACE 10100 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 19:26:16.265 TRACE 10100 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 19:26:16.267 DEBUG 10100 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 19:26:16.268  INFO 10100 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 19:26:16.340  INFO 10100 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 19:26:16.341 DEBUG 10100 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 19:26:16.341 DEBUG 10100 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 19:26:16.343 TRACE 10100 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:26:16.348 TRACE 10100 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 53, 35, 1
2020-02-21 19:26:16.349 DEBUG 10100 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:26:16.350 DEBUG 10100 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:26:16.352 TRACE 10100 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:26:16.352 TRACE 10100 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:26:16.352 DEBUG 10100 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:26:16.353 DEBUG 10100 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:26:16.353 DEBUG 10100 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:26:16.355 TRACE 10100 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:26:16.355 TRACE 10100 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:26:16.356 TRACE 10100 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:26:16.356 DEBUG 10100 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:26:16.357 DEBUG 10100 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 19:26:16.357 DEBUG 10100 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 19:26:16.359 TRACE 10100 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:26:16.359 TRACE 10100 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 19:26:16.362 DEBUG 10100 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 19:26:16.365 DEBUG 10100 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 19:26:16.367 TRACE 10100 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:26:16.367 TRACE 10100 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 19:26:16.368 TRACE 10100 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 19:26:16.369 DEBUG 10100 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 19:26:16.370 DEBUG 10100 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 19:26:16.370 DEBUG 10100 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 19:26:16.371  INFO 10100 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 19:26:28.900  INFO 10100 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 19:26:28.900 DEBUG 10100 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 19:26:28.901 DEBUG 10100 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 19:26:28.903 TRACE 10100 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:26:28.903 TRACE 10100 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 53, 35, 1
2020-02-21 19:26:28.904 DEBUG 10100 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:26:28.904 DEBUG 10100 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:26:28.905 TRACE 10100 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:26:28.906 TRACE 10100 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:26:28.906 DEBUG 10100 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:26:28.906 DEBUG 10100 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:26:28.907 DEBUG 10100 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:26:28.909 TRACE 10100 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:26:28.909 TRACE 10100 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:26:28.910 TRACE 10100 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:26:28.910 DEBUG 10100 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:26:28.911 DEBUG 10100 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 19:26:28.913 DEBUG 10100 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 19:26:28.914 TRACE 10100 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:26:28.914 TRACE 10100 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 19:26:28.915 DEBUG 10100 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 19:26:28.915 DEBUG 10100 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 19:26:28.917 TRACE 10100 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:26:28.917 TRACE 10100 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 19:26:28.918 TRACE 10100 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 19:26:28.918 DEBUG 10100 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 19:26:28.918 DEBUG 10100 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 19:26:28.919 DEBUG 10100 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 19:26:28.920 DEBUG 10100 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 19:26:28.920 DEBUG 10100 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 19:26:28.934 DEBUG 10100 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 19:26:28.936  INFO 10100 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 19:26:29.049  INFO 10100 --- [http-nio-8080-exec-7] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 19:26:29.050 DEBUG 10100 --- [http-nio-8080-exec-7] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 19:26:29.051 DEBUG 10100 --- [http-nio-8080-exec-7] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 19:26:29.052 TRACE 10100 --- [http-nio-8080-exec-7] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:26:29.053 TRACE 10100 --- [http-nio-8080-exec-7] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 19:26:29.054 TRACE 10100 --- [http-nio-8080-exec-7] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 19:26:29.055 TRACE 10100 --- [http-nio-8080-exec-7] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 19:26:29.055 DEBUG 10100 --- [http-nio-8080-exec-7] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 19:26:29.056  INFO 10100 --- [http-nio-8080-exec-7] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 19:26:29.136  INFO 10100 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 19:26:29.137 DEBUG 10100 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 19:26:29.137 DEBUG 10100 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 19:26:29.139 TRACE 10100 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:26:29.140 TRACE 10100 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 54, 35, 1
2020-02-21 19:26:29.141 DEBUG 10100 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:26:29.142 DEBUG 10100 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:26:29.144 TRACE 10100 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:26:29.145 TRACE 10100 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:26:29.145 DEBUG 10100 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:26:29.146 DEBUG 10100 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:26:29.147 DEBUG 10100 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:26:29.155 TRACE 10100 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:26:29.155 TRACE 10100 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:26:29.155 TRACE 10100 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:26:29.156 DEBUG 10100 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:26:29.156 DEBUG 10100 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 19:26:29.163 DEBUG 10100 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 19:26:29.165 TRACE 10100 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:26:29.165 TRACE 10100 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 19:26:29.166 DEBUG 10100 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 19:26:29.167 DEBUG 10100 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 19:26:29.168 TRACE 10100 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:26:29.169 TRACE 10100 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 19:26:29.170 TRACE 10100 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 19:26:29.170 DEBUG 10100 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 19:26:29.171 DEBUG 10100 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 19:26:29.171 DEBUG 10100 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 19:26:29.172  INFO 10100 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 19:26:51.373  INFO 10100 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 19:26:51.374 DEBUG 10100 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 19:26:51.375 DEBUG 10100 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 19:26:51.376 TRACE 10100 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:26:51.376 TRACE 10100 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 54, 35, 1
2020-02-21 19:26:51.378 DEBUG 10100 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:26:51.378 DEBUG 10100 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:26:51.379 TRACE 10100 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:26:51.379 TRACE 10100 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:26:51.380 DEBUG 10100 --- [http-nio-8080-exec-8] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:26:51.380 DEBUG 10100 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:26:51.380 DEBUG 10100 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:26:51.381 TRACE 10100 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:26:51.381 TRACE 10100 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:26:51.382 TRACE 10100 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:26:51.382 DEBUG 10100 --- [http-nio-8080-exec-8] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:26:51.382 DEBUG 10100 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 19:26:51.382 DEBUG 10100 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 19:26:51.384 TRACE 10100 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:26:51.384 TRACE 10100 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 19:26:51.385 DEBUG 10100 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 19:26:51.385 DEBUG 10100 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 19:26:51.387 TRACE 10100 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:26:51.387 TRACE 10100 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 19:26:51.388 TRACE 10100 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 19:26:51.388 DEBUG 10100 --- [http-nio-8080-exec-8] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 19:26:51.389 DEBUG 10100 --- [http-nio-8080-exec-8] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 19:26:51.389 DEBUG 10100 --- [http-nio-8080-exec-8] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 19:26:51.390 DEBUG 10100 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 19:26:51.390 DEBUG 10100 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 19:26:51.396 DEBUG 10100 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 19:26:51.397  INFO 10100 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 19:26:51.493  INFO 10100 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 19:26:51.494 DEBUG 10100 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 19:26:51.494 DEBUG 10100 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 19:26:51.495 TRACE 10100 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:26:51.496 TRACE 10100 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 19:26:51.497 TRACE 10100 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 19:26:51.497 TRACE 10100 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 19:26:51.498 DEBUG 10100 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 19:26:51.498  INFO 10100 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 19:26:51.605  INFO 10100 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 19:26:51.605 DEBUG 10100 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 19:26:51.605 DEBUG 10100 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 19:26:51.606 TRACE 10100 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:26:51.607 TRACE 10100 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 55, 35, 1
2020-02-21 19:26:51.608 DEBUG 10100 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:26:51.608 DEBUG 10100 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:26:51.609 TRACE 10100 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:26:51.609 TRACE 10100 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:26:51.610 DEBUG 10100 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:26:51.610 DEBUG 10100 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:26:51.610 DEBUG 10100 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:26:51.612 TRACE 10100 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:26:51.612 TRACE 10100 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:26:51.612 TRACE 10100 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:26:51.612 DEBUG 10100 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:26:51.612 DEBUG 10100 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 19:26:51.613 DEBUG 10100 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 19:26:51.614 TRACE 10100 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:26:51.614 TRACE 10100 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 19:26:51.615 DEBUG 10100 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 19:26:51.616 DEBUG 10100 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 19:26:51.617 TRACE 10100 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:26:51.617 TRACE 10100 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 19:26:51.618 TRACE 10100 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 19:26:51.618 DEBUG 10100 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 19:26:51.618 DEBUG 10100 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 19:26:51.618 DEBUG 10100 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 19:26:51.619  INFO 10100 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 19:35:08.098  INFO 7408 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 7408 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 19:35:08.102 DEBUG 7408 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 19:35:08.103  INFO 7408 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 19:35:08.208  INFO 7408 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 19:35:08.209  INFO 7408 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 19:35:08.209  INFO 7408 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 19:35:08.863  INFO 7408 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 19:35:08.864  INFO 7408 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 19:35:08.888  INFO 7408 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 20ms. Found 0 JDBC repository interfaces.
2020-02-21 19:35:08.898  INFO 7408 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 19:35:08.898  INFO 7408 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 19:35:08.906  INFO 7408 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4ms. Found 0 JPA repository interfaces.
2020-02-21 19:35:09.223  INFO 7408 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 19:35:09.676  INFO 7408 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 19:35:09.676  INFO 7408 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 19:35:09.676  INFO 7408 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 19:35:09.895  INFO 7408 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 19:35:09.895  INFO 7408 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1686 ms
2020-02-21 19:35:10.114  INFO 7408 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 19:35:10.176  INFO 7408 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 19:35:10.288  INFO 7408 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 19:35:10.384 ERROR 7408 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 19:35:10.390  INFO 7408 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 19:35:10.496  INFO 7408 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 19:35:11.610  INFO 7408 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 19:35:11.620  INFO 7408 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 19:35:11.650  INFO 7408 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 19:35:12.059  WARN 7408 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 19:35:12.285  INFO 7408 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 19:35:12.872  INFO 7408 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 19:35:12.875  INFO 7408 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 5.794 seconds (JVM running for 7.315)
2020-02-21 19:37:12.431  INFO 7408 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 19:37:12.432  INFO 7408 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 19:37:12.452  INFO 7408 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 20 ms
2020-02-21 19:37:12.565  INFO 7408 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 19:37:12.598 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 19:37:12.875 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 19:37:12.889 TRACE 7408 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:37:12.892 TRACE 7408 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 55, 35, 1
2020-02-21 19:37:12.897 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:37:12.897 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:37:12.899 TRACE 7408 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:37:12.900 TRACE 7408 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:37:12.903 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:37:12.904 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:37:12.905 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:37:12.907 TRACE 7408 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:37:12.907 TRACE 7408 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:37:12.908 TRACE 7408 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:37:12.909 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:37:12.909 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 19:37:12.910 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 19:37:12.911 TRACE 7408 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:37:12.911 TRACE 7408 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 19:37:12.912 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 19:37:12.912 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 19:37:12.913 TRACE 7408 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:37:12.914 TRACE 7408 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 19:37:12.915 TRACE 7408 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 19:37:12.915 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 19:37:12.915 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 19:37:12.915 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 19:37:12.922 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 19:37:12.922 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 19:37:12.928 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 19:37:12.986  INFO 7408 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 19:37:13.881  INFO 7408 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 19:37:13.890 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 19:37:13.891 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 19:37:13.893 TRACE 7408 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:37:13.894 TRACE 7408 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 19:37:13.896 TRACE 7408 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 19:37:13.897 TRACE 7408 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 19:37:13.899 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 19:37:13.900  INFO 7408 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 19:37:13.992  INFO 7408 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 19:37:13.992 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 19:37:13.993 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 19:37:13.997 TRACE 7408 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:37:13.997 TRACE 7408 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 56, 35, 1
2020-02-21 19:37:14.001 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:37:14.001 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:37:14.005 TRACE 7408 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:37:14.005 TRACE 7408 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:37:14.006 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:37:14.006 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:37:14.007 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:37:14.010 TRACE 7408 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:37:14.010 TRACE 7408 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:37:14.011 TRACE 7408 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:37:14.011 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:37:14.012 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 19:37:14.012 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 19:37:14.014 TRACE 7408 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:37:14.014 TRACE 7408 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 19:37:14.015 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 19:37:14.018 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 19:37:14.021 TRACE 7408 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:37:14.021 TRACE 7408 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 19:37:14.022 TRACE 7408 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 19:37:14.023 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 19:37:14.024 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 19:37:14.024 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 19:37:14.025  INFO 7408 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 19:37:25.267  INFO 7408 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 19:37:25.268 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 19:37:25.268 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 19:37:25.270 TRACE 7408 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:37:25.270 TRACE 7408 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 56, 35, 1
2020-02-21 19:37:25.271 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:37:25.272 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:37:25.273 TRACE 7408 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:37:25.273 TRACE 7408 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:37:25.273 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:37:25.273 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:37:25.274 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:37:25.275 TRACE 7408 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:37:25.276 TRACE 7408 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:37:25.276 TRACE 7408 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:37:25.276 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:37:25.277 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 19:37:25.277 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 19:37:25.279 TRACE 7408 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:37:25.279 TRACE 7408 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 19:37:25.280 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 19:37:25.281 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 19:37:25.284 TRACE 7408 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:37:25.284 TRACE 7408 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 19:37:25.285 TRACE 7408 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 19:37:25.285 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 19:37:25.286 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 19:37:25.286 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 19:37:25.288 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 19:37:25.288 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 19:37:25.302 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 19:37:25.303  INFO 7408 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 19:37:25.389  INFO 7408 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 19:37:25.389 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 19:37:25.390 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 19:37:25.391 TRACE 7408 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:37:25.392 TRACE 7408 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 19:37:25.393 TRACE 7408 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 19:37:25.394 TRACE 7408 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 19:37:25.394 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 19:37:25.394  INFO 7408 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 19:37:25.461  INFO 7408 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 19:37:25.461 DEBUG 7408 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 19:37:25.462 DEBUG 7408 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 19:37:25.463 TRACE 7408 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:37:25.464 TRACE 7408 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 57, 35, 1
2020-02-21 19:37:25.465 DEBUG 7408 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:37:25.465 DEBUG 7408 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:37:25.467 TRACE 7408 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:37:25.467 TRACE 7408 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:37:25.467 DEBUG 7408 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:37:25.468 DEBUG 7408 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:37:25.468 DEBUG 7408 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:37:25.470 TRACE 7408 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:37:25.470 TRACE 7408 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:37:25.471 TRACE 7408 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:37:25.471 DEBUG 7408 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:37:25.472 DEBUG 7408 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 19:37:25.472 DEBUG 7408 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 19:37:25.475 TRACE 7408 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:37:25.475 TRACE 7408 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 19:37:25.476 DEBUG 7408 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 19:37:25.476 DEBUG 7408 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 19:37:25.478 TRACE 7408 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:37:25.478 TRACE 7408 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 19:37:25.479 TRACE 7408 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 19:37:25.480 DEBUG 7408 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 19:37:25.481 DEBUG 7408 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 19:37:25.482 DEBUG 7408 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 19:37:25.483  INFO 7408 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 19:38:54.348  INFO 7408 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 19:38:54.349 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 19:38:54.349 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 19:38:54.381 TRACE 7408 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:38:54.382 TRACE 7408 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 57, 35, 1
2020-02-21 19:38:54.383 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:38:54.384 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:38:54.385 TRACE 7408 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:38:54.385 TRACE 7408 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:38:54.386 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:38:54.386 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:38:54.387 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:38:54.388 TRACE 7408 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:38:54.388 TRACE 7408 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:38:54.389 TRACE 7408 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:38:54.389 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:38:54.390 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 19:38:54.390 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 19:38:54.392 TRACE 7408 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:38:54.392 TRACE 7408 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 19:38:54.393 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 19:38:54.394 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 19:38:54.395 TRACE 7408 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:38:54.395 TRACE 7408 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 19:38:54.396 TRACE 7408 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 19:38:54.397 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 19:38:54.397 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 19:38:54.397 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 19:38:54.398 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 19:38:54.398 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 19:38:54.404 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 19:38:54.406  INFO 7408 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 19:38:54.662  INFO 7408 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 19:38:54.663 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 19:38:54.663 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 19:38:54.667 TRACE 7408 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:38:54.668 TRACE 7408 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 19:38:54.669 TRACE 7408 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 19:38:54.669 TRACE 7408 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 19:38:54.669 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 19:38:54.669  INFO 7408 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 19:38:54.745  INFO 7408 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 19:38:54.746 DEBUG 7408 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 19:38:54.746 DEBUG 7408 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 19:38:54.748 TRACE 7408 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:38:54.749 TRACE 7408 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 58, 35, 1
2020-02-21 19:38:54.750 DEBUG 7408 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:38:54.750 DEBUG 7408 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:38:54.752 TRACE 7408 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:38:54.752 TRACE 7408 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:38:54.752 DEBUG 7408 --- [http-nio-8080-exec-6] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:38:54.753 DEBUG 7408 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:38:54.754 DEBUG 7408 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:38:54.755 TRACE 7408 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:38:54.755 TRACE 7408 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:38:54.756 TRACE 7408 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:38:54.756 DEBUG 7408 --- [http-nio-8080-exec-6] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:38:54.756 DEBUG 7408 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 19:38:54.756 DEBUG 7408 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 19:38:54.763 TRACE 7408 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:38:54.764 TRACE 7408 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 19:38:54.766 DEBUG 7408 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 19:38:54.766 DEBUG 7408 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 19:38:54.768 TRACE 7408 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:38:54.768 TRACE 7408 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 19:38:54.769 TRACE 7408 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 19:38:54.769 DEBUG 7408 --- [http-nio-8080-exec-6] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 19:38:54.769 DEBUG 7408 --- [http-nio-8080-exec-6] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 19:38:54.770 DEBUG 7408 --- [http-nio-8080-exec-6] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 19:38:54.770  INFO 7408 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 19:38:58.912  INFO 7408 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 19:38:58.912 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 19:38:58.912 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 19:38:58.914 TRACE 7408 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:38:58.914 TRACE 7408 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 58, 35, 1
2020-02-21 19:38:58.919 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:38:58.919 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:38:58.920 TRACE 7408 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:38:58.920 TRACE 7408 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:38:58.921 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:38:58.921 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:38:58.921 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:38:58.923 TRACE 7408 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:38:58.923 TRACE 7408 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:38:58.923 TRACE 7408 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:38:58.924 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:38:58.924 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 19:38:58.925 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 19:38:58.926 TRACE 7408 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:38:58.927 TRACE 7408 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 19:38:58.927 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 19:38:58.928 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 19:38:58.929 TRACE 7408 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:38:58.929 TRACE 7408 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 19:38:58.929 TRACE 7408 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 19:38:58.930 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 19:38:58.930 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 19:38:58.930 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 19:38:58.930 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 19:38:58.930 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 19:38:58.935 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 19:38:58.936  INFO 7408 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 19:38:59.084  INFO 7408 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 19:38:59.084 DEBUG 7408 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 19:38:59.085 DEBUG 7408 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 19:38:59.086 TRACE 7408 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:38:59.086 TRACE 7408 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 19:38:59.087 TRACE 7408 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 19:38:59.087 TRACE 7408 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 19:38:59.088 DEBUG 7408 --- [http-nio-8080-exec-8] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 19:38:59.088  INFO 7408 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 19:38:59.171  INFO 7408 --- [http-nio-8080-exec-9] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 19:38:59.172 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 19:38:59.172 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 19:38:59.173 TRACE 7408 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:38:59.174 TRACE 7408 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 59, 35, 1
2020-02-21 19:38:59.175 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:38:59.175 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:38:59.176 TRACE 7408 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:38:59.177 TRACE 7408 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:38:59.177 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:38:59.178 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:38:59.178 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:38:59.180 TRACE 7408 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:38:59.180 TRACE 7408 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:38:59.180 TRACE 7408 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:38:59.181 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:38:59.182 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 19:38:59.182 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 19:38:59.184 TRACE 7408 --- [http-nio-8080-exec-9] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:38:59.184 TRACE 7408 --- [http-nio-8080-exec-9] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 19:38:59.185 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 19:38:59.186 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 19:38:59.187 TRACE 7408 --- [http-nio-8080-exec-9] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:38:59.187 TRACE 7408 --- [http-nio-8080-exec-9] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 19:38:59.188 TRACE 7408 --- [http-nio-8080-exec-9] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 19:38:59.189 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 19:38:59.190 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 19:38:59.190 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 19:38:59.191  INFO 7408 --- [http-nio-8080-exec-9] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 19:42:47.050  INFO 7408 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 19:42:47.050 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 19:42:47.051 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 19:42:47.059 TRACE 7408 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:42:47.060 TRACE 7408 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 59, 35, 1
2020-02-21 19:42:47.061 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:42:47.062 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:42:47.065 TRACE 7408 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:42:47.065 TRACE 7408 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:42:47.065 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:42:47.066 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:42:47.066 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:42:47.085 TRACE 7408 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:42:47.085 TRACE 7408 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:42:47.085 TRACE 7408 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:42:47.085 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:42:47.086 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 19:42:47.086 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 19:42:47.087 TRACE 7408 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:42:47.087 TRACE 7408 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 19:42:47.088 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 19:42:47.088 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 19:42:47.090 TRACE 7408 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:42:47.091 TRACE 7408 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 19:42:47.091 TRACE 7408 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 19:42:47.091 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 19:42:47.091 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 19:42:47.091 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 19:42:47.091 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 19:42:47.091 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 19:42:47.097 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 19:42:47.099  INFO 7408 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 19:42:47.341  INFO 7408 --- [http-nio-8080-exec-7] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 19:42:47.342 DEBUG 7408 --- [http-nio-8080-exec-7] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 19:42:47.343 DEBUG 7408 --- [http-nio-8080-exec-7] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 19:42:47.345 TRACE 7408 --- [http-nio-8080-exec-7] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:42:47.345 TRACE 7408 --- [http-nio-8080-exec-7] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 19:42:47.346 TRACE 7408 --- [http-nio-8080-exec-7] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 19:42:47.347 TRACE 7408 --- [http-nio-8080-exec-7] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 19:42:47.347 DEBUG 7408 --- [http-nio-8080-exec-7] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 19:42:47.348  INFO 7408 --- [http-nio-8080-exec-7] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 19:42:47.510  INFO 7408 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 19:42:47.511 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 19:42:47.511 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 19:42:47.512 TRACE 7408 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:42:47.512 TRACE 7408 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 60, 35, 1
2020-02-21 19:42:47.513 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:42:47.514 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:42:47.516 TRACE 7408 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:42:47.516 TRACE 7408 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:42:47.516 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:42:47.518 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:42:47.519 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:42:47.523 TRACE 7408 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:42:47.524 TRACE 7408 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:42:47.524 TRACE 7408 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:42:47.524 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:42:47.525 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 19:42:47.525 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 19:42:47.526 TRACE 7408 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:42:47.527 TRACE 7408 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 19:42:47.527 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 19:42:47.528 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 19:42:47.529 TRACE 7408 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:42:47.529 TRACE 7408 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 19:42:47.530 TRACE 7408 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 19:42:47.530 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 19:42:47.530 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 19:42:47.531 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 19:42:47.531  INFO 7408 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 19:42:53.703  INFO 7408 --- [http-nio-8080-exec-9] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 19:42:53.704 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 19:42:53.704 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 19:42:53.705 TRACE 7408 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:42:53.705 TRACE 7408 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 60, 35, 1
2020-02-21 19:42:53.706 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:42:53.707 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:42:53.708 TRACE 7408 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:42:53.708 TRACE 7408 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:42:53.708 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:42:53.709 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:42:53.709 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:42:53.710 TRACE 7408 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:42:53.710 TRACE 7408 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:42:53.710 TRACE 7408 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:42:53.710 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:42:53.711 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 19:42:53.711 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 19:42:53.712 TRACE 7408 --- [http-nio-8080-exec-9] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:42:53.713 TRACE 7408 --- [http-nio-8080-exec-9] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 19:42:53.713 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 19:42:53.713 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 19:42:53.714 TRACE 7408 --- [http-nio-8080-exec-9] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:42:53.715 TRACE 7408 --- [http-nio-8080-exec-9] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 19:42:53.715 TRACE 7408 --- [http-nio-8080-exec-9] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 19:42:53.715 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 19:42:53.716 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 19:42:53.716 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 19:42:53.717 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 19:42:53.717 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 19:42:53.732 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 19:42:53.734  INFO 7408 --- [http-nio-8080-exec-9] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 19:42:53.816  INFO 7408 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 19:42:53.817 DEBUG 7408 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 19:42:53.817 DEBUG 7408 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 19:42:53.819 TRACE 7408 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:42:53.819 TRACE 7408 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 19:42:53.820 TRACE 7408 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 19:42:53.820 TRACE 7408 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 19:42:53.821 DEBUG 7408 --- [http-nio-8080-exec-10] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 19:42:53.821  INFO 7408 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 19:42:53.887  INFO 7408 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 19:42:53.888 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 19:42:53.888 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 19:42:53.889 TRACE 7408 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:42:53.889 TRACE 7408 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 61, 35, 1
2020-02-21 19:42:53.890 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:42:53.891 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:42:53.892 TRACE 7408 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:42:53.892 TRACE 7408 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:42:53.892 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:42:53.893 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:42:53.893 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:42:53.895 TRACE 7408 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:42:53.895 TRACE 7408 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:42:53.895 TRACE 7408 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:42:53.896 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:42:53.896 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 19:42:53.896 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 19:42:53.898 TRACE 7408 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:42:53.898 TRACE 7408 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 19:42:53.899 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 19:42:53.899 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 19:42:53.900 TRACE 7408 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:42:53.901 TRACE 7408 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 19:42:53.901 TRACE 7408 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 19:42:53.902 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 19:42:53.902 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 19:42:53.903 DEBUG 7408 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 19:42:53.903  INFO 7408 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 19:43:24.328  INFO 7408 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 19:43:24.328 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 19:43:24.329 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 19:43:24.330 TRACE 7408 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:43:24.331 TRACE 7408 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 61, 35, 1
2020-02-21 19:43:24.331 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:43:24.332 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:43:24.333 TRACE 7408 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:43:24.333 TRACE 7408 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:43:24.333 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:43:24.334 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:43:24.334 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:43:24.336 TRACE 7408 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:43:24.336 TRACE 7408 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:43:24.336 TRACE 7408 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:43:24.337 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:43:24.337 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 19:43:24.337 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 19:43:24.339 TRACE 7408 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:43:24.339 TRACE 7408 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 19:43:24.340 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 19:43:24.340 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 19:43:24.343 TRACE 7408 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:43:24.343 TRACE 7408 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 19:43:24.344 TRACE 7408 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 19:43:24.344 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 19:43:24.345 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 19:43:24.345 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 19:43:24.346 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 19:43:24.346 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 19:43:24.359 DEBUG 7408 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 19:43:24.361  INFO 7408 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 19:43:24.439  INFO 7408 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 19:43:24.439 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 19:43:24.440 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 19:43:24.441 TRACE 7408 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:43:24.441 TRACE 7408 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 19:43:24.442 TRACE 7408 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 19:43:24.442 TRACE 7408 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 19:43:24.442 DEBUG 7408 --- [http-nio-8080-exec-5] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 19:43:24.443  INFO 7408 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 19:43:24.498  INFO 7408 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 19:43:24.498 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 19:43:24.498 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 19:43:24.499 TRACE 7408 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:43:24.500 TRACE 7408 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 62, 35, 1
2020-02-21 19:43:24.500 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:43:24.501 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:43:24.502 TRACE 7408 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:43:24.502 TRACE 7408 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:43:24.502 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:43:24.503 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:43:24.503 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:43:24.504 TRACE 7408 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:43:24.505 TRACE 7408 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:43:24.505 TRACE 7408 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:43:24.505 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:43:24.505 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 19:43:24.505 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 19:43:24.507 TRACE 7408 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:43:24.507 TRACE 7408 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 19:43:24.507 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 19:43:24.508 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 19:43:24.509 TRACE 7408 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:43:24.509 TRACE 7408 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 19:43:24.510 TRACE 7408 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 19:43:24.510 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 19:43:24.510 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 19:43:24.511 DEBUG 7408 --- [http-nio-8080-exec-2] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 19:43:24.511  INFO 7408 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 19:43:30.702  INFO 7408 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 19:43:30.703 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 19:43:30.703 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 19:43:30.704 TRACE 7408 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:43:30.705 TRACE 7408 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 62, 35, 1
2020-02-21 19:43:30.705 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:43:30.705 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:43:30.706 TRACE 7408 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:43:30.707 TRACE 7408 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:43:30.707 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:43:30.708 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:43:30.708 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:43:30.710 TRACE 7408 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:43:30.710 TRACE 7408 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:43:30.710 TRACE 7408 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:43:30.710 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:43:30.711 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 19:43:30.711 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 19:43:30.719 TRACE 7408 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:43:30.719 TRACE 7408 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 19:43:30.719 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 19:43:30.719 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 19:43:30.720 TRACE 7408 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:43:30.720 TRACE 7408 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 19:43:30.721 TRACE 7408 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 19:43:30.721 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 19:43:30.721 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 19:43:30.721 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 19:43:30.721 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 19:43:30.722 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 19:43:30.727 DEBUG 7408 --- [http-nio-8080-exec-4] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 19:43:30.728  INFO 7408 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 19:43:30.807  INFO 7408 --- [http-nio-8080-exec-9] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 19:43:30.807 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 19:43:30.807 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 19:43:30.809 TRACE 7408 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:43:30.809 TRACE 7408 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 19:43:30.809 TRACE 7408 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 19:43:30.810 TRACE 7408 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 19:43:30.810 DEBUG 7408 --- [http-nio-8080-exec-9] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 19:43:30.810  INFO 7408 --- [http-nio-8080-exec-9] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 19:43:30.886  INFO 7408 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 19:43:30.887 DEBUG 7408 --- [http-nio-8080-exec-10] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 19:43:30.888 DEBUG 7408 --- [http-nio-8080-exec-10] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 19:43:30.889 TRACE 7408 --- [http-nio-8080-exec-10] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 19:43:30.889 TRACE 7408 --- [http-nio-8080-exec-10] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 63, 35, 1
2020-02-21 19:43:30.889 DEBUG 7408 --- [http-nio-8080-exec-10] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 19:43:30.889 DEBUG 7408 --- [http-nio-8080-exec-10] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 19:43:30.892 TRACE 7408 --- [http-nio-8080-exec-10] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 19:43:30.892 TRACE 7408 --- [http-nio-8080-exec-10] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 19:43:30.893 DEBUG 7408 --- [http-nio-8080-exec-10] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 19:43:30.894 DEBUG 7408 --- [http-nio-8080-exec-10] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 19:43:30.894 DEBUG 7408 --- [http-nio-8080-exec-10] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 19:43:30.895 TRACE 7408 --- [http-nio-8080-exec-10] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 19:43:30.896 TRACE 7408 --- [http-nio-8080-exec-10] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 19:43:30.896 TRACE 7408 --- [http-nio-8080-exec-10] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 19:43:30.896 DEBUG 7408 --- [http-nio-8080-exec-10] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 19:43:30.897 DEBUG 7408 --- [http-nio-8080-exec-10] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 19:43:30.897 DEBUG 7408 --- [http-nio-8080-exec-10] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 19:43:30.899 TRACE 7408 --- [http-nio-8080-exec-10] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:43:30.899 TRACE 7408 --- [http-nio-8080-exec-10] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 19:43:30.900 DEBUG 7408 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 19:43:30.900 DEBUG 7408 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 19:43:30.901 TRACE 7408 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 19:43:30.901 TRACE 7408 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 19:43:30.902 TRACE 7408 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 19:43:30.902 DEBUG 7408 --- [http-nio-8080-exec-10] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 19:43:30.903 DEBUG 7408 --- [http-nio-8080-exec-10] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 19:43:30.904 DEBUG 7408 --- [http-nio-8080-exec-10] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 19:43:30.904  INFO 7408 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 19:44:11.028  INFO 7408 --- [Thread-14] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 19:44:11.028  INFO 7408 --- [Thread-14] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 19:44:11.042  INFO 7408 --- [Thread-14] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-02-21 19:44:12.387  INFO 7408 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 7408 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 19:44:12.387 DEBUG 7408 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 19:44:12.387  INFO 7408 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 19:44:12.776  INFO 7408 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 19:44:12.776  INFO 7408 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 19:44:12.791  INFO 7408 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15ms. Found 0 JDBC repository interfaces.
2020-02-21 19:44:12.809  INFO 7408 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 19:44:12.809  INFO 7408 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 19:44:12.816  INFO 7408 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6ms. Found 0 JPA repository interfaces.
2020-02-21 19:44:12.867  INFO 7408 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 19:44:12.930  WARN 7408 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 19:44:13.035  INFO 7408 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 19:44:13.036  INFO 7408 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 19:44:13.036  INFO 7408 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 19:44:13.080  INFO 7408 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 19:44:13.080  INFO 7408 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 689 ms
2020-02-21 19:44:13.212  INFO 7408 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 19:44:13.217 ERROR 7408 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 19:44:13.219  INFO 7408 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-02-21 19:44:13.247  INFO 7408 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 19:44:13.477  INFO 7408 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 19:44:13.477  INFO 7408 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 19:44:13.492  INFO 7408 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 19:44:13.659  WARN 7408 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 19:44:13.808  INFO 7408 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 19:44:14.183  INFO 7408 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 19:44:14.183  INFO 7408 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 1.873 seconds (JVM running for 548.629)
2020-02-21 19:44:14.183  INFO 7408 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 19:44:37.555  INFO 7408 --- [Thread-24] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 19:44:37.556  INFO 7408 --- [Thread-24] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 19:44:37.559  INFO 7408 --- [Thread-24] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} closed
2020-02-21 19:44:38.273 ERROR 7408 --- [restartedMain] o.s.boot.SpringApplication               : Application run failed

java.lang.IllegalStateException: Failed to load property source from location 'classpath:/application-dev.yml'
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:545)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadForFileExtension(ConfigFileApplicationListener.java:483)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:464)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$null$7(ConfigFileApplicationListener.java:443)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$load$8(ConfigFileApplicationListener.java:443)
	at java.lang.Iterable.forEach(Iterable.java:75)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:440)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.lambda$load$0(ConfigFileApplicationListener.java:335)
	at org.springframework.boot.context.config.FilteredPropertySource.apply(FilteredPropertySource.java:54)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:323)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.addPropertySources(ConfigFileApplicationListener.java:214)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.postProcessEnvironment(ConfigFileApplicationListener.java:198)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEnvironmentPreparedEvent(ConfigFileApplicationListener.java:188)
	at org.springframework.boot.context.config.ConfigFileApplicationListener.onApplicationEvent(ConfigFileApplicationListener.java:176)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.doInvokeListener(SimpleApplicationEventMulticaster.java:172)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.invokeListener(SimpleApplicationEventMulticaster.java:165)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:139)
	at org.springframework.context.event.SimpleApplicationEventMulticaster.multicastEvent(SimpleApplicationEventMulticaster.java:127)
	at org.springframework.boot.context.event.EventPublishingRunListener.environmentPrepared(EventPublishingRunListener.java:76)
	at org.springframework.boot.SpringApplicationRunListeners.environmentPrepared(SpringApplicationRunListeners.java:53)
	at org.springframework.boot.SpringApplication.prepareEnvironment(SpringApplication.java:345)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:308)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at personal.personalblogreturn.PersonalBlogReturnApplication.main(PersonalBlogReturnApplication.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.yaml.snakeyaml.scanner.ScannerException: while scanning a simple key
 in 'reader', line 42, column 5:
        log
        ^
could not find expected ':'
 in 'reader', line 44, column 1:
    logging:
    ^

	at org.yaml.snakeyaml.scanner.ScannerImpl.stalePossibleSimpleKeys(ScannerImpl.java:464)
	at org.yaml.snakeyaml.scanner.ScannerImpl.needMoreTokens(ScannerImpl.java:278)
	at org.yaml.snakeyaml.scanner.ScannerImpl.checkToken(ScannerImpl.java:226)
	at org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey.produce(ParserImpl.java:558)
	at org.yaml.snakeyaml.parser.ParserImpl.peekEvent(ParserImpl.java:158)
	at org.yaml.snakeyaml.parser.ParserImpl.checkEvent(ParserImpl.java:148)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:217)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:144)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:239)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:230)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:218)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:144)
	at org.yaml.snakeyaml.composer.Composer.composeValueNode(Composer.java:239)
	at org.yaml.snakeyaml.composer.Composer.composeMappingChildren(Composer.java:230)
	at org.yaml.snakeyaml.composer.Composer.composeMappingNode(Composer.java:218)
	at org.yaml.snakeyaml.composer.Composer.composeNode(Composer.java:144)
	at org.yaml.snakeyaml.composer.Composer.getNode(Composer.java:85)
	at org.yaml.snakeyaml.constructor.BaseConstructor.getData(BaseConstructor.java:125)
	at org.yaml.snakeyaml.Yaml$1.next(Yaml.java:548)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:160)
	at org.springframework.beans.factory.config.YamlProcessor.process(YamlProcessor.java:134)
	at org.springframework.boot.env.OriginTrackedYamlLoader.load(OriginTrackedYamlLoader.java:75)
	at org.springframework.boot.env.YamlPropertySourceLoader.load(YamlPropertySourceLoader.java:50)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.loadDocuments(ConfigFileApplicationListener.java:562)
	at org.springframework.boot.context.config.ConfigFileApplicationListener$Loader.load(ConfigFileApplicationListener.java:518)
	... 30 common frames omitted

2020-02-21 19:45:00.346  INFO 7408 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 7408 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 19:45:00.346 DEBUG 7408 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 19:45:00.346  INFO 7408 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 19:45:00.760  INFO 7408 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 19:45:00.760  INFO 7408 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 19:45:00.779  INFO 7408 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 19ms. Found 0 JDBC repository interfaces.
2020-02-21 19:45:00.787  INFO 7408 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 19:45:00.787  INFO 7408 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 19:45:00.799  INFO 7408 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 11ms. Found 0 JPA repository interfaces.
2020-02-21 19:45:00.989  INFO 7408 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 19:45:01.188  WARN 7408 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 19:45:01.335  INFO 7408 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 19:45:01.335  INFO 7408 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 19:45:01.335  INFO 7408 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 19:45:01.395  INFO 7408 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 19:45:01.396  INFO 7408 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1047 ms
2020-02-21 19:45:01.644  INFO 7408 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 19:45:01.644 ERROR 7408 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 19:45:01.644  INFO 7408 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-3} inited
2020-02-21 19:45:01.659  INFO 7408 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 19:45:01.898  INFO 7408 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 19:45:01.898  INFO 7408 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 19:45:01.917  INFO 7408 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 19:45:02.112  WARN 7408 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 19:45:02.257  INFO 7408 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 19:45:02.595  INFO 7408 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 19:45:02.595  INFO 7408 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 2.303 seconds (JVM running for 597.035)
2020-02-21 19:45:02.596  INFO 7408 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 19:47:07.085  INFO 7408 --- [Thread-29] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 19:47:07.100  INFO 7408 --- [Thread-29] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 19:47:07.100  INFO 7408 --- [Thread-29] com.alibaba.druid.pool.DruidDataSource   : {dataSource-3} closed
2020-02-21 19:47:07.962  INFO 7408 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 7408 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 19:47:07.962 DEBUG 7408 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 19:47:07.962  INFO 7408 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 19:47:08.181  INFO 7408 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 19:47:08.181  INFO 7408 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 19:47:08.197  INFO 7408 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7ms. Found 0 JDBC repository interfaces.
2020-02-21 19:47:08.197  INFO 7408 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 19:47:08.197  INFO 7408 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 19:47:08.197  INFO 7408 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 3ms. Found 0 JPA repository interfaces.
2020-02-21 19:47:08.259  INFO 7408 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 19:47:08.369  WARN 7408 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 19:47:08.447  INFO 7408 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 19:47:08.447  INFO 7408 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 19:47:08.447  INFO 7408 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 19:47:08.478  INFO 7408 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 19:47:08.478  INFO 7408 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 500 ms
2020-02-21 19:47:08.572  INFO 7408 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 19:47:08.587 ERROR 7408 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 19:47:08.587  INFO 7408 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-4} inited
2020-02-21 19:47:08.587  INFO 7408 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 19:47:08.775  INFO 7408 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 19:47:08.775  INFO 7408 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 19:47:08.790  INFO 7408 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 19:47:08.931  WARN 7408 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 19:47:09.118  INFO 7408 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 19:47:09.462  INFO 7408 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 19:47:09.462  INFO 7408 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 1.612 seconds (JVM running for 723.903)
2020-02-21 19:47:09.462  INFO 7408 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 19:47:43.051  INFO 6628 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 6628 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 19:47:43.051  INFO 6628 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 19:47:43.161  INFO 6628 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 19:47:43.161  INFO 6628 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 19:47:43.161  INFO 6628 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 19:47:43.941  INFO 6628 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 19:47:43.941  INFO 6628 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 19:47:43.973  INFO 6628 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 23ms. Found 0 JDBC repository interfaces.
2020-02-21 19:47:43.988  INFO 6628 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 19:47:43.988  INFO 6628 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 19:47:43.988  INFO 6628 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7ms. Found 0 JPA repository interfaces.
2020-02-21 19:47:44.535  INFO 6628 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 19:47:45.191  INFO 6628 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 19:47:45.207  INFO 6628 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 19:47:45.207  INFO 6628 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 19:47:45.503  INFO 6628 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 19:47:45.503  INFO 6628 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2342 ms
2020-02-21 19:47:46.160  INFO 6628 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 19:47:46.269  INFO 6628 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 19:47:46.441  INFO 6628 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 19:47:46.519 ERROR 6628 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 19:47:46.534  INFO 6628 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 19:47:46.628  INFO 6628 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 19:47:47.504  INFO 6628 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 19:47:47.504  INFO 6628 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 19:47:47.536  INFO 6628 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 19:47:47.848  WARN 6628 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 19:47:48.051  INFO 6628 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 19:47:48.645  INFO 6628 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 19:47:48.645  INFO 6628 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 6.612 seconds (JVM running for 8.041)
2020-02-21 19:47:56.288  INFO 6628 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 19:47:56.289  INFO 6628 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 19:47:56.302  INFO 6628 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 13 ms
2020-02-21 19:47:56.375  INFO 6628 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 19:47:56.667  INFO 6628 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 19:47:57.117  INFO 6628 --- [http-nio-8080-exec-7] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 19:47:57.126  INFO 6628 --- [http-nio-8080-exec-7] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 19:47:57.177  INFO 6628 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 19:47:57.190  INFO 6628 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 19:48:20.135  INFO 6628 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 19:48:20.186  INFO 6628 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 19:49:07.464  INFO 3424 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 3424 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 19:49:07.558  INFO 3424 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 19:49:07.636  INFO 3424 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 19:49:07.636  INFO 3424 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 19:49:07.636  INFO 3424 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 19:49:08.313  INFO 3424 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 19:49:08.313  INFO 3424 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 19:49:08.344  INFO 3424 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 22ms. Found 0 JDBC repository interfaces.
2020-02-21 19:49:08.360  INFO 3424 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 19:49:08.360  INFO 3424 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 19:49:08.376  INFO 3424 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7ms. Found 0 JPA repository interfaces.
2020-02-21 19:49:08.829  INFO 3424 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 19:49:09.532  INFO 3424 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 19:49:09.532  INFO 3424 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 19:49:09.532  INFO 3424 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 19:49:09.782  INFO 3424 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 19:49:09.782  INFO 3424 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2146 ms
2020-02-21 19:49:10.360  INFO 3424 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 19:49:10.469  INFO 3424 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 19:49:10.688  INFO 3424 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 19:49:10.781 ERROR 3424 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 19:49:10.781  INFO 3424 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 19:49:10.875  INFO 3424 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 19:49:11.734  INFO 3424 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 19:49:11.734  INFO 3424 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 19:49:11.766  INFO 3424 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 19:49:12.047  WARN 3424 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 19:49:12.246  INFO 3424 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 19:49:12.792  INFO 3424 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 19:49:12.792  INFO 3424 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 6.265 seconds (JVM running for 7.786)
2020-02-21 19:49:26.611  INFO 3424 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 19:49:26.611  INFO 3424 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 19:49:26.627  INFO 3424 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 16 ms
2020-02-21 19:49:26.725  INFO 3424 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 19:49:27.045  INFO 3424 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 19:49:27.672  INFO 3424 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 19:49:27.681  INFO 3424 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 19:49:27.769  INFO 3424 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 19:49:27.786  INFO 3424 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 19:50:32.242  INFO 7944 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 7944 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 19:50:32.257  INFO 7944 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 19:50:32.367  INFO 7944 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 19:50:32.367  INFO 7944 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 19:50:32.367  INFO 7944 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 19:50:33.627  INFO 7944 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 19:50:33.629  INFO 7944 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 19:50:33.662  INFO 7944 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 27ms. Found 0 JDBC repository interfaces.
2020-02-21 19:50:33.676  INFO 7944 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 19:50:33.677  INFO 7944 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 19:50:33.691  INFO 7944 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9ms. Found 0 JPA repository interfaces.
2020-02-21 19:50:34.176  INFO 7944 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 19:50:34.828  INFO 7944 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 19:50:34.839  INFO 7944 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 19:50:34.839  INFO 7944 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 19:50:35.134  INFO 7944 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 19:50:35.135  INFO 7944 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2768 ms
2020-02-21 19:50:35.555  INFO 7944 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 19:50:35.629  INFO 7944 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 19:50:35.759  INFO 7944 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 19:50:36.015 ERROR 7944 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 19:50:36.023  INFO 7944 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 19:50:36.184  INFO 7944 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 19:50:37.384  INFO 7944 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 19:50:37.391  INFO 7944 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 19:50:37.419  INFO 7944 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 19:50:37.727  WARN 7944 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 19:50:37.944  INFO 7944 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 19:50:38.747  INFO 7944 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 19:50:38.750  INFO 7944 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 7.674 seconds (JVM running for 9.199)
2020-02-21 19:52:40.383  INFO 7944 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 19:52:40.383  INFO 7944 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 19:52:40.397  INFO 7944 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 13 ms
2020-02-21 19:52:40.482  INFO 7944 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 19:52:40.800  INFO 7944 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 19:52:41.267  INFO 7944 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 19:52:41.275  INFO 7944 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 19:52:41.337  INFO 7944 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 19:52:41.348  INFO 7944 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 19:54:09.781  INFO 7944 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 19:54:09.840  INFO 7944 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 19:54:10.027  INFO 7944 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 19:54:10.031  INFO 7944 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 19:54:10.135  INFO 7944 --- [http-nio-8080-exec-9] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 19:54:10.154  INFO 7944 --- [http-nio-8080-exec-9] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 19:54:17.503  INFO 7944 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 19:54:17.520  INFO 7944 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 19:54:17.637  INFO 7944 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 19:54:17.640  INFO 7944 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 19:54:17.696  INFO 7944 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 19:54:17.708  INFO 7944 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 19:57:55.602  INFO 7944 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 19:57:55.635  INFO 7944 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 19:57:55.715  INFO 7944 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 19:57:55.718  INFO 7944 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 19:57:55.773  INFO 7944 --- [http-nio-8080-exec-7] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 19:57:55.786  INFO 7944 --- [http-nio-8080-exec-7] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 20:00:33.420  INFO 7944 --- [Thread-17] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 20:00:33.420  INFO 7944 --- [Thread-17] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:00:33.436  INFO 7944 --- [Thread-17] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-02-21 20:00:34.200  INFO 7944 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 7944 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 20:00:34.200  INFO 7944 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 20:00:34.840  INFO 7944 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:00:34.840  INFO 7944 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 20:00:34.856  INFO 7944 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13ms. Found 0 JDBC repository interfaces.
2020-02-21 20:00:34.856  INFO 7944 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:00:34.856  INFO 7944 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 20:00:34.903  INFO 7944 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 39ms. Found 0 JPA repository interfaces.
2020-02-21 20:00:35.293  INFO 7944 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 20:00:35.450  WARN 7944 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 20:00:35.543  INFO 7944 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 20:00:35.543  INFO 7944 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 20:00:35.543  INFO 7944 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 20:00:35.590  INFO 7944 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 20:00:35.590  INFO 7944 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1390 ms
2020-02-21 20:00:35.684  INFO 7944 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 20:00:35.684 ERROR 7944 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 20:00:35.700  INFO 7944 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-02-21 20:00:35.700  INFO 7944 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 20:00:35.949  INFO 7944 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 20:00:35.949  INFO 7944 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:00:35.949  INFO 7944 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 20:00:36.356  WARN 7944 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 20:00:36.637  INFO 7944 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 20:00:37.059  INFO 7944 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 20:00:37.059  INFO 7944 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 2.928 seconds (JVM running for 607.513)
2020-02-21 20:00:37.059  INFO 7944 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 20:00:45.140  INFO 7944 --- [Thread-28] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 20:00:45.140  INFO 7944 --- [Thread-28] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:00:45.140  INFO 7944 --- [Thread-28] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} closed
2020-02-21 20:00:46.049  INFO 7944 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 7944 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 20:00:46.049  INFO 7944 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 20:00:46.283  INFO 7944 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:00:46.283  INFO 7944 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 20:00:46.283  INFO 7944 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5ms. Found 0 JDBC repository interfaces.
2020-02-21 20:00:46.299  INFO 7944 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:00:46.299  INFO 7944 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 20:00:46.299  INFO 7944 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4ms. Found 0 JPA repository interfaces.
2020-02-21 20:00:46.346  INFO 7944 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 20:00:46.408  WARN 7944 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 20:00:46.486  INFO 7944 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 20:00:46.486  INFO 7944 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 20:00:46.486  INFO 7944 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 20:00:46.533  INFO 7944 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 20:00:46.533  INFO 7944 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 468 ms
2020-02-21 20:00:46.627  INFO 7944 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 20:00:46.643 ERROR 7944 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 20:00:46.643  INFO 7944 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-3} inited
2020-02-21 20:00:46.643  INFO 7944 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 20:00:46.846  INFO 7944 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 20:00:46.846  INFO 7944 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:00:46.846  INFO 7944 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 20:00:47.017  WARN 7944 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 20:00:47.174  INFO 7944 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 20:00:47.502  INFO 7944 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 20:00:47.502  INFO 7944 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 1.502 seconds (JVM running for 617.964)
2020-02-21 20:00:47.502  INFO 7944 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 20:01:28.471  INFO 7944 --- [Thread-33] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 20:01:28.471  INFO 7944 --- [Thread-33] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:01:28.471  INFO 7944 --- [Thread-33] com.alibaba.druid.pool.DruidDataSource   : {dataSource-3} closed
2020-02-21 20:01:29.127  INFO 7944 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 7944 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 20:01:29.127  INFO 7944 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 20:01:29.580  INFO 7944 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:01:29.580  INFO 7944 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 20:01:29.580  INFO 7944 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9ms. Found 0 JDBC repository interfaces.
2020-02-21 20:01:29.595  INFO 7944 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:01:29.595  INFO 7944 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 20:01:29.595  INFO 7944 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6ms. Found 0 JPA repository interfaces.
2020-02-21 20:01:29.720  INFO 7944 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 20:01:29.892  WARN 7944 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 20:01:30.002  INFO 7944 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 20:01:30.002  INFO 7944 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 20:01:30.002  INFO 7944 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 20:01:30.048  INFO 7944 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 20:01:30.048  INFO 7944 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 921 ms
2020-02-21 20:01:30.202  INFO 7944 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 20:01:30.202 ERROR 7944 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 20:01:30.202  INFO 7944 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-4} inited
2020-02-21 20:01:30.202  INFO 7944 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 20:01:30.483  INFO 7944 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 20:01:30.483  INFO 7944 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:01:30.499  INFO 7944 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 20:01:30.686  WARN 7944 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 20:01:30.858  INFO 7944 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 20:01:31.358  INFO 7944 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 20:01:31.358  INFO 7944 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 2.296 seconds (JVM running for 661.809)
2020-02-21 20:01:31.358  INFO 7944 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 20:02:35.788  INFO 7944 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 20:02:35.789  INFO 7944 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 20:02:35.815  INFO 7944 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 26 ms
2020-02-21 20:04:03.459  INFO 12984 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 12984 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 20:04:03.459  INFO 12984 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 20:04:03.522  INFO 12984 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 20:04:03.522  INFO 12984 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 20:04:03.522  INFO 12984 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 20:04:04.397  INFO 12984 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:04:04.397  INFO 12984 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 20:04:04.443  INFO 12984 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 32ms. Found 0 JDBC repository interfaces.
2020-02-21 20:04:04.475  INFO 12984 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:04:04.475  INFO 12984 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 20:04:04.490  INFO 12984 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 12ms. Found 0 JPA repository interfaces.
2020-02-21 20:04:05.178  INFO 12984 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 20:04:05.678  INFO 12984 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 20:04:05.678  INFO 12984 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 20:04:05.678  INFO 12984 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 20:04:05.818  INFO 12984 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 20:04:05.818  INFO 12984 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2296 ms
2020-02-21 20:04:06.146  INFO 12984 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 20:04:06.209  INFO 12984 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 20:04:06.302  INFO 12984 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 20:04:06.412 ERROR 12984 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 20:04:06.412  INFO 12984 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 20:04:06.521  INFO 12984 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 20:04:07.474  INFO 12984 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 20:04:07.474  INFO 12984 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:04:07.505  INFO 12984 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 20:04:07.786  WARN 12984 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 20:04:08.005  INFO 12984 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 20:04:08.585  INFO 12984 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 20:04:08.585  INFO 12984 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 5.805 seconds (JVM running for 7.307)
2020-02-21 20:04:17.309  INFO 12984 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 20:04:17.309  INFO 12984 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 20:04:17.325  INFO 12984 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 16 ms
2020-02-21 20:04:17.479  INFO 12984 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/index, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.index, args=[org.apache.catalina.session.StandardSessionFacade@398f8b4d, {}])
2020-02-21 20:04:18.037  INFO 12984 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/index
2020-02-21 20:04:19.479  INFO 12984 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 20:04:19.492  INFO 12984 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 20:04:20.806  INFO 12984 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 20:04:20.892  INFO 12984 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 20:04:21.184  INFO 12984 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 20:04:21.191  INFO 12984 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 20:04:21.279  INFO 12984 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 20:04:21.293  INFO 12984 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 20:04:31.923 ERROR 12984 --- [http-nio-8080-exec-10] p.p.e.ControllerExceptionHandler         : Request URL : http://localhost:8080/comment，Exception : {}

org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported
	at org.springframework.web.servlet.mvc.method.RequestMappingInfoHandlerMapping.handleNoMatch(RequestMappingInfoHandlerMapping.java:201)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.lookupHandlerMethod(AbstractHandlerMethodMapping.java:421)
	at org.springframework.web.servlet.handler.AbstractHandlerMethodMapping.getHandlerInternal(AbstractHandlerMethodMapping.java:367)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.getHandlerInternal(RequestMappingHandlerMapping.java:449)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping.getHandlerInternal(RequestMappingHandlerMapping.java:67)
	at org.springframework.web.servlet.handler.AbstractHandlerMapping.getHandler(AbstractHandlerMapping.java:393)
	at org.springframework.web.servlet.DispatcherServlet.getHandler(DispatcherServlet.java:1234)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1016)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-21 20:04:31.927  WARN 12984 --- [http-nio-8080-exec-10] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.web.HttpRequestMethodNotSupportedException: Request method 'GET' not supported]
2020-02-21 20:05:10.406  INFO 12984 --- [Thread-14] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 20:05:10.406  INFO 12984 --- [Thread-14] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:05:10.422  INFO 12984 --- [Thread-14] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-02-21 20:05:12.000  INFO 12984 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 12984 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 20:05:12.000  INFO 12984 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 20:05:12.640  INFO 12984 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:05:12.640  INFO 12984 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 20:05:12.671  INFO 12984 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 24ms. Found 0 JDBC repository interfaces.
2020-02-21 20:05:12.703  INFO 12984 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:05:12.703  INFO 12984 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 20:05:12.718  INFO 12984 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6ms. Found 0 JPA repository interfaces.
2020-02-21 20:05:12.906  INFO 12984 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 20:05:12.984  WARN 12984 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 20:05:13.078  INFO 12984 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 20:05:13.078  INFO 12984 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 20:05:13.078  INFO 12984 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 20:05:13.140  INFO 12984 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 20:05:13.140  INFO 12984 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1125 ms
2020-02-21 20:05:13.249  INFO 12984 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 20:05:13.249 ERROR 12984 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 20:05:13.249  INFO 12984 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-02-21 20:05:13.265  INFO 12984 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 20:05:13.525  INFO 12984 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 20:05:13.525  INFO 12984 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:05:13.541  INFO 12984 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 20:05:13.838  WARN 12984 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 20:05:14.056  INFO 12984 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 20:05:14.728  INFO 12984 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 20:05:14.728  INFO 12984 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 2.825 seconds (JVM running for 73.447)
2020-02-21 20:05:14.728  INFO 12984 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 20:05:17.587  INFO 12984 --- [Thread-25] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 20:05:17.587  INFO 12984 --- [Thread-25] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:05:17.587  INFO 12984 --- [Thread-25] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} closed
2020-02-21 20:05:18.380  INFO 12984 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 12984 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 20:05:18.380  INFO 12984 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 20:05:18.802  INFO 12984 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:05:18.802  INFO 12984 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 20:05:18.911  INFO 12984 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 105ms. Found 0 JDBC repository interfaces.
2020-02-21 20:05:18.942  INFO 12984 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:05:18.942  INFO 12984 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 20:05:18.942  INFO 12984 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7ms. Found 0 JPA repository interfaces.
2020-02-21 20:05:19.114  INFO 12984 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 20:05:19.427  WARN 12984 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 20:05:20.629  INFO 12984 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 20:05:20.629  INFO 12984 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 20:05:20.629  INFO 12984 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 20:05:20.754  INFO 12984 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 20:05:20.754  INFO 12984 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2358 ms
2020-02-21 20:05:36.417  INFO 10116 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 10116 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 20:05:36.417  INFO 10116 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 20:05:36.511  INFO 10116 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 20:05:36.511  INFO 10116 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 20:05:36.511  INFO 10116 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 20:05:37.260  INFO 10116 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:05:37.260  INFO 10116 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 20:05:37.276  INFO 10116 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17ms. Found 0 JDBC repository interfaces.
2020-02-21 20:05:37.292  INFO 10116 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:05:37.292  INFO 10116 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 20:05:37.307  INFO 10116 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5ms. Found 0 JPA repository interfaces.
2020-02-21 20:05:37.620  INFO 10116 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 20:05:38.057  INFO 10116 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 20:05:38.073  INFO 10116 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 20:05:38.073  INFO 10116 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 20:05:38.291  INFO 10116 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 20:05:38.291  INFO 10116 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1780 ms
2020-02-21 20:05:38.500  INFO 10116 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 20:05:38.563  INFO 10116 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 20:05:38.672  INFO 10116 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 20:05:38.750 ERROR 10116 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 20:05:38.766  INFO 10116 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 20:05:38.875  INFO 10116 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 20:05:39.703  INFO 10116 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 20:05:39.703  INFO 10116 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:05:39.734  INFO 10116 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 20:05:40.015  WARN 10116 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 20:05:40.218  INFO 10116 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 20:05:40.765  INFO 10116 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 20:05:40.765  INFO 10116 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 5.37 seconds (JVM running for 6.812)
2020-02-21 20:05:48.089  INFO 10116 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 20:05:48.089  INFO 10116 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 20:05:48.106  INFO 10116 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 17 ms
2020-02-21 20:05:48.226  INFO 10116 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 20:05:48.606  INFO 10116 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 20:05:49.306  INFO 10116 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 20:05:49.323  INFO 10116 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 20:05:49.402  INFO 10116 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 20:05:49.422  INFO 10116 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 20:05:58.424  INFO 10116 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/postComment, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.post, args=[Comment(id=null, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null), {comment=Comment(id=null, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null), org.springframework.validation.BindingResult.comment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}])
2020-02-21 20:05:58.431 ERROR 10116 --- [http-nio-8080-exec-2] p.p.e.ControllerExceptionHandler         : Request URL : http://localhost:8080/postComment，Exception : {}

java.lang.NullPointerException: null
	at personal.personalblogreturn.controller.CommentController.post(CommentController.java:37)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:772)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at personal.personalblogreturn.controller.CommentController$$EnhancerBySpringCGLIB$$489e5bf7.post(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-21 20:05:58.432  WARN 10116 --- [http-nio-8080-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.NullPointerException]
2020-02-21 20:07:42.687  INFO 10116 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 20:07:42.759  INFO 10116 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 20:07:42.961  INFO 10116 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 20:07:42.964  INFO 10116 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 20:07:43.077  INFO 10116 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 20:07:43.100  INFO 10116 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 20:07:50.166  INFO 10116 --- [http-nio-8080-exec-9] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/postComment, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.post, args=[Comment(id=null, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null), {comment=Comment(id=null, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null), org.springframework.validation.BindingResult.comment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}])
2020-02-21 20:07:50.167 ERROR 10116 --- [http-nio-8080-exec-9] p.p.e.ControllerExceptionHandler         : Request URL : http://localhost:8080/postComment，Exception : {}

java.lang.NullPointerException: null
	at personal.personalblogreturn.controller.CommentController.post(CommentController.java:37)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:772)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at personal.personalblogreturn.controller.CommentController$$EnhancerBySpringCGLIB$$489e5bf7.post(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-21 20:07:50.170  WARN 10116 --- [http-nio-8080-exec-9] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.NullPointerException]
2020-02-21 20:10:27.738  INFO 10116 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 20:10:27.795  INFO 10116 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 20:10:28.039  INFO 10116 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 20:10:28.042  INFO 10116 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 20:10:28.167  INFO 10116 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 20:10:28.186  INFO 10116 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 20:10:40.788  INFO 10116 --- [http-nio-8080-exec-9] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/postComment, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.post, args=[Comment(id=null, nickName=null, email=675767206@qq.com, avatar=null, content=jjk, createDate=null, rObject=null, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=1, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), {comment=Comment(id=null, nickName=null, email=675767206@qq.com, avatar=null, content=jjk, createDate=null, rObject=null, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=1, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), org.springframework.validation.BindingResult.comment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}])
2020-02-21 20:10:40.800  INFO 10116 --- [http-nio-8080-exec-9] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 20:15:17.919  INFO 10116 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/postComment, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.post, args=[Comment(id=null, nickName=null, email=675767206@qq.com, avatar=null, content=asd, createDate=null, rObject=null, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=1, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), {comment=Comment(id=null, nickName=null, email=675767206@qq.com, avatar=null, content=asd, createDate=null, rObject=null, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=1, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), org.springframework.validation.BindingResult.comment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}])
2020-02-21 20:15:17.931  INFO 10116 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 20:15:53.296  INFO 10116 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 20:15:53.354  INFO 10116 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 20:15:53.591  INFO 10116 --- [http-nio-8080-exec-9] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 20:15:53.595  INFO 10116 --- [http-nio-8080-exec-9] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 20:15:53.744  INFO 10116 --- [http-nio-8080-exec-7] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 20:15:53.766  INFO 10116 --- [http-nio-8080-exec-7] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 20:16:01.958  INFO 10116 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/postComment, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.post, args=[Comment(id=null, nickName=AS, email=675767206@qq.com, avatar=null, content=ASD, createDate=null, rObject=null, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=2, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), {comment=Comment(id=null, nickName=AS, email=675767206@qq.com, avatar=null, content=ASD, createDate=null, rObject=null, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=2, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), org.springframework.validation.BindingResult.comment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}])
2020-02-21 20:16:01.967  INFO 10116 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 20:18:44.649  INFO 10116 --- [http-nio-8080-exec-7] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/postComment, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.post, args=[Comment(id=null, nickName=AS, email=675767206@qq.com, avatar=null, content=ASD, createDate=null, rObject=null, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=2, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), {comment=Comment(id=null, nickName=AS, email=675767206@qq.com, avatar=null, content=ASD, createDate=null, rObject=null, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=2, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), org.springframework.validation.BindingResult.comment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}])
2020-02-21 20:18:44.659  INFO 10116 --- [http-nio-8080-exec-7] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 20:19:05.778  INFO 10116 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/postComment, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.post, args=[Comment(id=null, nickName=AS, email=675767206@qq.com, avatar=null, content=ASD, createDate=null, rObject=null, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=2, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), {comment=Comment(id=null, nickName=AS, email=675767206@qq.com, avatar=null, content=ASD, createDate=null, rObject=null, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=2, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), org.springframework.validation.BindingResult.comment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}])
2020-02-21 20:19:05.792  INFO 10116 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 20:21:31.742  INFO 10116 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/postComment, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.post, args=[Comment(id=null, nickName=AS, email=675767206@qq.com, avatar=null, content=ASD, createDate=null, rObject=null, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=2, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), {comment=Comment(id=null, nickName=AS, email=675767206@qq.com, avatar=null, content=ASD, createDate=null, rObject=null, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=2, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), org.springframework.validation.BindingResult.comment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}])
2020-02-21 20:21:31.751  INFO 10116 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 20:24:58.400  INFO 10116 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/postComment, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.post, args=[Comment(id=null, nickName=AS, email=675767206@qq.com, avatar=null, content=ASD, createDate=null, rObject=null, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=2, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), {comment=Comment(id=null, nickName=AS, email=675767206@qq.com, avatar=null, content=ASD, createDate=null, rObject=null, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=2, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), org.springframework.validation.BindingResult.comment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}])
2020-02-21 20:24:58.408  INFO 10116 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 20:27:04.917  INFO 10116 --- [Thread-13] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 20:27:04.932  INFO 10116 --- [Thread-13] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:27:04.932  INFO 10116 --- [Thread-13] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-02-21 20:27:05.776  INFO 10116 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 10116 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 20:27:05.776  INFO 10116 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 20:27:06.057  INFO 10116 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:27:06.057  INFO 10116 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 20:27:06.057  INFO 10116 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 2ms. Found 0 JDBC repository interfaces.
2020-02-21 20:27:06.073  INFO 10116 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:27:06.073  INFO 10116 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 20:27:06.073  INFO 10116 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 0ms. Found 0 JPA repository interfaces.
2020-02-21 20:27:06.120  WARN 10116 --- [restartedMain] o.m.s.mapper.ClassPathMapperScanner      : No MyBatis mapper was found in '[personal.personalblogreturn.mapper]' package. Please check your configuration.
2020-02-21 20:27:06.167  INFO 10116 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 20:27:06.292  WARN 10116 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 20:27:06.479  INFO 10116 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 20:27:06.479  INFO 10116 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 20:27:06.479  INFO 10116 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 20:27:06.604  INFO 10116 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 20:27:06.604  INFO 10116 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 812 ms
2020-02-21 20:27:06.713  INFO 10116 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 20:27:06.729 ERROR 10116 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 20:27:06.729  INFO 10116 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-02-21 20:27:06.760  INFO 10116 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 20:27:06.901  INFO 10116 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 20:27:06.901  INFO 10116 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:27:06.916  INFO 10116 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 20:27:06.948  WARN 10116 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 20:27:07.057  INFO 10116 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 20:27:07.401  WARN 10116 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [E:\deaProjects\personal-blog-return\target\classes\mybatis\mapper\BlogMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [E:\deaProjects\personal-blog-return\target\classes\mybatis\mapper\BlogMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'personal.personalblogreturn.pojo.Type'.  Cause: java.lang.ClassNotFoundException: Cannot find class: personal.personalblogreturn.pojo.Type
2020-02-21 20:27:07.401  INFO 10116 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 20:27:07.401  INFO 10116 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:27:07.401  INFO 10116 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} closed
2020-02-21 20:27:07.401  INFO 10116 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2020-02-21 20:27:07.401  INFO 10116 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-02-21 20:27:07.416 ERROR 10116 --- [restartedMain] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'sqlSessionFactory' defined in class path resource [org/mybatis/spring/boot/autoconfigure/MybatisAutoConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [E:\deaProjects\personal-blog-return\target\classes\mybatis\mapper\BlogMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [E:\deaProjects\personal-blog-return\target\classes\mybatis\mapper\BlogMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'personal.personalblogreturn.pojo.Type'.  Cause: java.lang.ClassNotFoundException: Cannot find class: personal.personalblogreturn.pojo.Type
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:656)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:636)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1338)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1177)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:879)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:141)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:315)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)
	at personal.personalblogreturn.PersonalBlogReturnApplication.main(PersonalBlogReturnApplication.java:13)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.apache.ibatis.session.SqlSessionFactory]: Factory method 'sqlSessionFactory' threw exception; nested exception is org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [E:\deaProjects\personal-blog-return\target\classes\mybatis\mapper\BlogMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [E:\deaProjects\personal-blog-return\target\classes\mybatis\mapper\BlogMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'personal.personalblogreturn.pojo.Type'.  Cause: java.lang.ClassNotFoundException: Cannot find class: personal.personalblogreturn.pojo.Type
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185)
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:651)
	... 24 common frames omitted
Caused by: org.springframework.core.NestedIOException: Failed to parse mapping resource: 'file [E:\deaProjects\personal-blog-return\target\classes\mybatis\mapper\BlogMapper.xml]'; nested exception is org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [E:\deaProjects\personal-blog-return\target\classes\mybatis\mapper\BlogMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'personal.personalblogreturn.pojo.Type'.  Cause: java.lang.ClassNotFoundException: Cannot find class: personal.personalblogreturn.pojo.Type
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:595)
	at org.mybatis.spring.SqlSessionFactoryBean.afterPropertiesSet(SqlSessionFactoryBean.java:475)
	at org.mybatis.spring.SqlSessionFactoryBean.getObject(SqlSessionFactoryBean.java:615)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration.sqlSessionFactory(MybatisAutoConfiguration.java:180)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$81b0045b.CGLIB$sqlSessionFactory$1(<generated>)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$81b0045b$$FastClassBySpringCGLIB$$52344f46.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:244)
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:363)
	at org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$81b0045b.sqlSessionFactory(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154)
	... 25 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error parsing Mapper XML. The XML location is 'file [E:\deaProjects\personal-blog-return\target\classes\mybatis\mapper\BlogMapper.xml]'. Cause: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'personal.personalblogreturn.pojo.Type'.  Cause: java.lang.ClassNotFoundException: Cannot find class: personal.personalblogreturn.pojo.Type
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:122)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.parse(XMLMapperBuilder.java:94)
	at org.mybatis.spring.SqlSessionFactoryBean.buildSqlSessionFactory(SqlSessionFactoryBean.java:593)
	... 38 common frames omitted
Caused by: org.apache.ibatis.builder.BuilderException: Error resolving class. Cause: org.apache.ibatis.type.TypeException: Could not resolve type alias 'personal.personalblogreturn.pojo.Type'.  Cause: java.lang.ClassNotFoundException: Cannot find class: personal.personalblogreturn.pojo.Type
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:118)
	at org.apache.ibatis.builder.xml.XMLStatementBuilder.parseStatementNode(XMLStatementBuilder.java:76)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:137)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.buildStatementFromContext(XMLMapperBuilder.java:130)
	at org.apache.ibatis.builder.xml.XMLMapperBuilder.configurationElement(XMLMapperBuilder.java:120)
	... 40 common frames omitted
Caused by: org.apache.ibatis.type.TypeException: Could not resolve type alias 'personal.personalblogreturn.pojo.Type'.  Cause: java.lang.ClassNotFoundException: Cannot find class: personal.personalblogreturn.pojo.Type
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:120)
	at org.apache.ibatis.builder.BaseBuilder.resolveAlias(BaseBuilder.java:149)
	at org.apache.ibatis.builder.BaseBuilder.resolveClass(BaseBuilder.java:116)
	... 44 common frames omitted
Caused by: java.lang.ClassNotFoundException: Cannot find class: personal.personalblogreturn.pojo.Type
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:200)
	at org.apache.ibatis.io.ClassLoaderWrapper.classForName(ClassLoaderWrapper.java:89)
	at org.apache.ibatis.io.Resources.classForName(Resources.java:261)
	at org.apache.ibatis.type.TypeAliasRegistry.resolveAlias(TypeAliasRegistry.java:116)
	... 46 common frames omitted

2020-02-21 20:27:10.462  INFO 10116 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 10116 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 20:27:10.462  INFO 10116 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 20:27:10.712  INFO 10116 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:27:10.712  INFO 10116 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 20:27:10.728  INFO 10116 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 23ms. Found 0 JDBC repository interfaces.
2020-02-21 20:27:10.759  INFO 10116 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:27:10.759  INFO 10116 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 20:27:10.759  INFO 10116 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7ms. Found 0 JPA repository interfaces.
2020-02-21 20:27:10.900  INFO 10116 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 20:27:11.150  WARN 10116 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 20:27:11.259  INFO 10116 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 20:27:11.259  INFO 10116 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 20:27:11.259  INFO 10116 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 20:27:11.322  INFO 10116 --- [restartedMain] o.a.c.c.C.[Tomcat-1].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-02-21 20:27:11.322  INFO 10116 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 860 ms
2020-02-21 20:27:11.525  INFO 10116 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 20:27:11.540 ERROR 10116 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 20:27:11.540  INFO 10116 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-3} inited
2020-02-21 20:27:11.540  INFO 10116 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 20:27:11.868  INFO 10116 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 20:27:11.868  INFO 10116 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:27:11.884  INFO 10116 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 20:27:12.134  WARN 10116 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 20:27:12.431  INFO 10116 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 20:27:13.114  INFO 10116 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 20:27:13.114  INFO 10116 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 2.693 seconds (JVM running for 1299.159)
2020-02-21 20:27:13.114  INFO 10116 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 20:27:19.641  INFO 10116 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat-1].[localhost].[/]     : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 20:27:19.642  INFO 10116 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 20:27:19.655  INFO 10116 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 13 ms
2020-02-21 20:27:19.675  INFO 10116 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/postComment, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.post, args=[Comment(id=null, nickName=AS, email=675767206@qq.com, avatar=null, content=ASD, createDate=null, rObject=null, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=2, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), {comment=Comment(id=null, nickName=AS, email=675767206@qq.com, avatar=null, content=ASD, createDate=null, rObject=null, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=2, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), org.springframework.validation.BindingResult.comment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}])
2020-02-21 20:27:19.706  INFO 10116 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 20:28:11.128  INFO 10116 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 20:28:11.181  INFO 10116 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 20:28:11.377  INFO 10116 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 20:28:11.383  INFO 10116 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 20:28:11.482  INFO 10116 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 20:28:11.496  INFO 10116 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 20:28:28.208  INFO 10116 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/postComment, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.post, args=[Comment(id=null, nickName=jk, email=kk, avatar=null, content=lk, createDate=null, rObject=老黄, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=3, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), {comment=Comment(id=null, nickName=jk, email=kk, avatar=null, content=lk, createDate=null, rObject=老黄, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=3, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), org.springframework.validation.BindingResult.comment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}])
2020-02-21 20:28:28.219  INFO 10116 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 20:28:49.707  INFO 10116 --- [Thread-23] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 20:28:49.707  INFO 10116 --- [Thread-23] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:28:49.707  INFO 10116 --- [Thread-23] com.alibaba.druid.pool.DruidDataSource   : {dataSource-3} closed
2020-02-21 20:28:50.709  INFO 10116 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 10116 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 20:28:50.709  INFO 10116 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 20:28:51.021  INFO 10116 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:28:51.021  INFO 10116 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 20:28:51.042  INFO 10116 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 8ms. Found 0 JDBC repository interfaces.
2020-02-21 20:28:51.043  INFO 10116 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:28:51.043  INFO 10116 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 20:28:51.043  INFO 10116 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5ms. Found 0 JPA repository interfaces.
2020-02-21 20:28:51.105  INFO 10116 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 20:28:51.215  WARN 10116 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 20:28:51.324  INFO 10116 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 20:28:51.324  INFO 10116 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 20:28:51.324  INFO 10116 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 20:28:51.386  INFO 10116 --- [restartedMain] o.a.c.c.C.[Tomcat-1].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-02-21 20:28:51.386  INFO 10116 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 677 ms
2020-02-21 20:28:51.558  INFO 10116 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 20:28:51.574 ERROR 10116 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 20:28:51.574  INFO 10116 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-4} inited
2020-02-21 20:28:51.574  INFO 10116 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 20:28:51.918  INFO 10116 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 20:28:51.918  INFO 10116 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:28:51.964  INFO 10116 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 20:28:52.199  WARN 10116 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 20:28:52.433  INFO 10116 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 20:28:53.370  INFO 10116 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 20:28:53.370  INFO 10116 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 2.737 seconds (JVM running for 1399.424)
2020-02-21 20:28:53.370  INFO 10116 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 20:29:25.105  INFO 10116 --- [Thread-31] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 20:29:25.105  INFO 10116 --- [Thread-31] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:29:25.105  INFO 10116 --- [Thread-31] com.alibaba.druid.pool.DruidDataSource   : {dataSource-4} closed
2020-02-21 20:29:26.046  INFO 10116 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 10116 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 20:29:26.046  INFO 10116 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 20:29:26.765  INFO 10116 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:29:26.765  INFO 10116 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 20:29:26.796  INFO 10116 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17ms. Found 0 JDBC repository interfaces.
2020-02-21 20:29:26.796  INFO 10116 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:29:26.796  INFO 10116 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 20:29:26.811  INFO 10116 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 14ms. Found 0 JPA repository interfaces.
2020-02-21 20:29:26.999  INFO 10116 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 20:29:27.155  WARN 10116 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 20:29:27.264  INFO 10116 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 20:29:27.264  INFO 10116 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 20:29:27.264  INFO 10116 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 20:29:27.301  INFO 10116 --- [restartedMain] o.a.c.c.C.[Tomcat-1].[localhost].[/]     : Initializing Spring embedded WebApplicationContext
2020-02-21 20:29:27.301  INFO 10116 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1255 ms
2020-02-21 20:29:27.458  INFO 10116 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 20:29:27.473 ERROR 10116 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 20:29:27.473  INFO 10116 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-5} inited
2020-02-21 20:29:27.473  INFO 10116 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 20:29:27.848  INFO 10116 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 20:29:27.848  INFO 10116 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:29:27.879  INFO 10116 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 20:32:57.745  INFO 6532 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 6532 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 20:32:57.745  INFO 6532 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 20:32:57.823  INFO 6532 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 20:32:57.823  INFO 6532 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 20:32:57.823  INFO 6532 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 20:32:58.479  INFO 6532 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:32:58.479  INFO 6532 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 20:32:58.495  INFO 6532 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17ms. Found 0 JDBC repository interfaces.
2020-02-21 20:32:58.511  INFO 6532 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:32:58.511  INFO 6532 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 20:32:58.526  INFO 6532 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4ms. Found 0 JPA repository interfaces.
2020-02-21 20:32:58.839  INFO 6532 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 20:32:59.292  INFO 6532 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 20:32:59.292  INFO 6532 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 20:32:59.292  INFO 6532 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 20:32:59.526  INFO 6532 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 20:32:59.526  INFO 6532 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1703 ms
2020-02-21 20:32:59.745  INFO 6532 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 20:32:59.807  INFO 6532 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 20:32:59.901  INFO 6532 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 20:32:59.995 ERROR 6532 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 20:32:59.995  INFO 6532 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 20:33:00.120  INFO 6532 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 20:33:01.003  INFO 6532 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 20:33:01.003  INFO 6532 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:33:01.034  INFO 6532 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 20:33:01.316  WARN 6532 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 20:33:01.519  INFO 6532 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 20:33:02.065  INFO 6532 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 20:33:02.065  INFO 6532 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 5.319 seconds (JVM running for 6.766)
2020-02-21 20:33:14.155  INFO 6532 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 20:33:14.155  INFO 6532 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 20:33:14.169  INFO 6532 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 14 ms
2020-02-21 20:33:14.259  INFO 6532 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/postComment, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.post, args=[Comment(id=null, nickName=jk, email=kk, avatar=null, content=lk, createDate=null, rObject=老黄, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=3, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), {comment=Comment(id=null, nickName=jk, email=kk, avatar=null, content=lk, createDate=null, rObject=老黄, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=3, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), org.springframework.validation.BindingResult.comment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}])
2020-02-21 20:33:14.508  INFO 6532 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 20:33:51.529  INFO 6532 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/postComment, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.post, args=[Comment(id=null, nickName=jk, email=kk, avatar=null, content=lk, createDate=null, rObject=老黄, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=3, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), {comment=Comment(id=null, nickName=jk, email=kk, avatar=null, content=lk, createDate=null, rObject=老黄, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=3, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), org.springframework.validation.BindingResult.comment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}])
2020-02-21 20:33:51.545  INFO 6532 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 20:41:14.001  INFO 12192 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 12192 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 20:41:14.001  INFO 12192 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 20:41:14.095  INFO 12192 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 20:41:14.095  INFO 12192 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 20:41:14.095  INFO 12192 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 20:41:14.736  INFO 12192 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:41:14.736  INFO 12192 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 20:41:14.767  INFO 12192 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 25ms. Found 0 JDBC repository interfaces.
2020-02-21 20:41:14.782  INFO 12192 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:41:14.782  INFO 12192 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 20:41:14.798  INFO 12192 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7ms. Found 0 JPA repository interfaces.
2020-02-21 20:41:15.142  INFO 12192 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 20:41:15.616  INFO 12192 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 20:41:15.616  INFO 12192 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 20:41:15.616  INFO 12192 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 20:41:15.772  INFO 12192 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 20:41:15.772  INFO 12192 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1677 ms
2020-02-21 20:41:16.069  INFO 12192 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 20:41:16.131  INFO 12192 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 20:41:16.241  INFO 12192 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 20:41:16.334 ERROR 12192 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 20:41:16.334  INFO 12192 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 20:41:16.444  INFO 12192 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 20:41:17.287  INFO 12192 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 20:41:17.287  INFO 12192 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:41:17.319  INFO 12192 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 20:41:17.615  WARN 12192 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 20:41:17.818  INFO 12192 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 20:41:18.381  INFO 12192 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 20:41:18.381  INFO 12192 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 5.399 seconds (JVM running for 7.045)
2020-02-21 20:41:26.287  INFO 12192 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 20:41:26.287  INFO 12192 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 20:41:26.303  INFO 12192 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 15 ms
2020-02-21 20:41:26.452  INFO 12192 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 20:41:26.911  INFO 12192 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 20:41:27.876  INFO 12192 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 20:41:27.891  INFO 12192 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 20:41:27.982  INFO 12192 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 20:41:28.002  INFO 12192 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 20:41:28.030 ERROR 12192 --- [http-nio-8080-exec-4] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-4] Exception processing template "public/blog::[commentList]": An error happened during template parsing (template: "class path resource [templates/public/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/public/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "son.id" (template: "public/blog" - line 98, col 58)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "son.id" (template: "public/blog" - line 98, col 58)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardMultipleAttributeModifierTagProcessor.doProcess(AbstractStandardMultipleAttributeModifierTagProcessor.java:138)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.select.BlockSelectorMarkupHandler.handleCloseElementEnd(BlockSelectorMarkupHandler.java:1178)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'id' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 76 common frames omitted

2020-02-21 20:41:28.036 ERROR 12192 --- [http-nio-8080-exec-4] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/public/blog.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'id' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardMultipleAttributeModifierTagProcessor.doProcess(AbstractStandardMultipleAttributeModifierTagProcessor.java:138)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.select.BlockSelectorMarkupHandler.handleCloseElementEnd(BlockSelectorMarkupHandler.java:1178)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-21 20:41:34.151  INFO 12192 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 20:41:34.180  INFO 12192 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 20:41:34.393  INFO 12192 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 20:41:34.397  INFO 12192 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 20:41:34.466  INFO 12192 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 20:41:34.482  INFO 12192 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 20:41:34.492 ERROR 12192 --- [http-nio-8080-exec-3] org.thymeleaf.TemplateEngine             : [THYMELEAF][http-nio-8080-exec-3] Exception processing template "public/blog::[commentList]": An error happened during template parsing (template: "class path resource [templates/public/blog.html]")

org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/public/blog.html]")
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:241)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.attoparser.ParseException: Exception evaluating SpringEL expression: "son.id" (template: "public/blog" - line 98, col 58)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:393)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	... 48 common frames omitted
Caused by: org.thymeleaf.exceptions.TemplateProcessingException: Exception evaluating SpringEL expression: "son.id" (template: "public/blog" - line 98, col 58)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:290)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardMultipleAttributeModifierTagProcessor.doProcess(AbstractStandardMultipleAttributeModifierTagProcessor.java:138)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.select.BlockSelectorMarkupHandler.handleCloseElementEnd(BlockSelectorMarkupHandler.java:1178)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	... 50 common frames omitted
Caused by: org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'id' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	... 76 common frames omitted

2020-02-21 20:41:34.495 ERROR 12192 --- [http-nio-8080-exec-3] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.thymeleaf.exceptions.TemplateInputException: An error happened during template parsing (template: "class path resource [templates/public/blog.html]")] with root cause

org.springframework.expression.spel.SpelEvaluationException: EL1007E: Property or field 'id' cannot be found on null
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.readProperty(PropertyOrFieldReference.java:213)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.getValueInternal(PropertyOrFieldReference.java:104)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference.access$000(PropertyOrFieldReference.java:51)
	at org.springframework.expression.spel.ast.PropertyOrFieldReference$AccessorLValue.getValue(PropertyOrFieldReference.java:406)
	at org.springframework.expression.spel.ast.CompoundExpression.getValueInternal(CompoundExpression.java:92)
	at org.springframework.expression.spel.ast.SpelNodeImpl.getValue(SpelNodeImpl.java:112)
	at org.springframework.expression.spel.standard.SpelExpression.getValue(SpelExpression.java:330)
	at org.thymeleaf.spring5.expression.SPELVariableExpressionEvaluator.evaluate(SPELVariableExpressionEvaluator.java:263)
	at org.thymeleaf.standard.expression.VariableExpression.executeVariableExpression(VariableExpression.java:166)
	at org.thymeleaf.standard.expression.SimpleExpression.executeSimple(SimpleExpression.java:66)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:109)
	at org.thymeleaf.standard.expression.Expression.execute(Expression.java:138)
	at org.thymeleaf.standard.processor.AbstractStandardMultipleAttributeModifierTagProcessor.doProcess(AbstractStandardMultipleAttributeModifierTagProcessor.java:138)
	at org.thymeleaf.processor.element.AbstractAttributeTagProcessor.doProcess(AbstractAttributeTagProcessor.java:74)
	at org.thymeleaf.processor.element.AbstractElementTagProcessor.process(AbstractElementTagProcessor.java:95)
	at org.thymeleaf.util.ProcessorConfigurationUtils$ElementTagProcessorWrapper.process(ProcessorConfigurationUtils.java:633)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleOpenElement(ProcessorTemplateHandler.java:1314)
	at org.thymeleaf.engine.OpenElementTag.beHandled(OpenElementTag.java:205)
	at org.thymeleaf.engine.Model.process(Model.java:282)
	at org.thymeleaf.engine.Model.process(Model.java:290)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.processIterationModel(IteratedGatheringModelProcessable.java:367)
	at org.thymeleaf.engine.IteratedGatheringModelProcessable.process(IteratedGatheringModelProcessable.java:221)
	at org.thymeleaf.engine.ProcessorTemplateHandler.handleCloseElement(ProcessorTemplateHandler.java:1640)
	at org.thymeleaf.engine.TemplateHandlerAdapterMarkupHandler.handleCloseElementEnd(TemplateHandlerAdapterMarkupHandler.java:388)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler$InlineMarkupAdapterPreProcessorHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:322)
	at org.thymeleaf.standard.inline.OutputExpressionInlinePreProcessorHandler.handleCloseElementEnd(OutputExpressionInlinePreProcessorHandler.java:220)
	at org.thymeleaf.templateparser.markup.InlinedOutputExpressionMarkupHandler.handleCloseElementEnd(InlinedOutputExpressionMarkupHandler.java:164)
	at org.attoparser.select.BlockSelectorMarkupHandler.handleCloseElementEnd(BlockSelectorMarkupHandler.java:1178)
	at org.attoparser.HtmlElement.handleCloseElementEnd(HtmlElement.java:169)
	at org.attoparser.HtmlMarkupHandler.handleCloseElementEnd(HtmlMarkupHandler.java:412)
	at org.attoparser.MarkupEventProcessorHandler.handleCloseElementEnd(MarkupEventProcessorHandler.java:473)
	at org.attoparser.ParsingElementMarkupUtil.parseCloseElement(ParsingElementMarkupUtil.java:201)
	at org.attoparser.MarkupParser.parseBuffer(MarkupParser.java:725)
	at org.attoparser.MarkupParser.parseDocument(MarkupParser.java:301)
	at org.attoparser.MarkupParser.parse(MarkupParser.java:257)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parse(AbstractMarkupTemplateParser.java:230)
	at org.thymeleaf.templateparser.markup.AbstractMarkupTemplateParser.parseStandalone(AbstractMarkupTemplateParser.java:100)
	at org.thymeleaf.engine.TemplateManager.parseAndProcess(TemplateManager.java:666)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1098)
	at org.thymeleaf.TemplateEngine.process(TemplateEngine.java:1072)
	at org.thymeleaf.spring5.view.ThymeleafView.renderFragment(ThymeleafView.java:362)
	at org.thymeleaf.spring5.view.ThymeleafView.render(ThymeleafView.java:189)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1373)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-21 20:42:19.715  INFO 12192 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 20:42:19.764  INFO 12192 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 20:42:20.038  INFO 12192 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 20:42:20.043  INFO 12192 --- [http-nio-8080-exec-8] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 20:42:20.164  INFO 12192 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 20:42:20.183  INFO 12192 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 20:42:27.943  INFO 12192 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/postComment, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.post, args=[Comment(id=null, nickName=asd, email=675767206@qq.com, avatar=null, content=asd, createDate=null, rObject=老黄, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=1, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), {comment=Comment(id=null, nickName=asd, email=675767206@qq.com, avatar=null, content=asd, createDate=null, rObject=老黄, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=1, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), org.springframework.validation.BindingResult.comment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}])
2020-02-21 20:42:27.950 ERROR 12192 --- [http-nio-8080-exec-10] p.p.e.ControllerExceptionHandler         : Request URL : http://localhost:8080/postComment，Exception : {}

java.lang.NullPointerException: null
	at personal.personalblogreturn.controller.CommentController.post(CommentController.java:45)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:772)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at personal.personalblogreturn.controller.CommentController$$EnhancerBySpringCGLIB$$57aaee05.post(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)

2020-02-21 20:42:27.951  WARN 12192 --- [http-nio-8080-exec-10] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [java.lang.NullPointerException]
2020-02-21 20:43:10.859  INFO 12192 --- [Thread-13] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 20:43:10.859  INFO 12192 --- [Thread-13] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:43:10.875  INFO 12192 --- [Thread-13] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-02-21 20:43:12.177  INFO 12192 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 12192 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 20:43:12.177  INFO 12192 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 20:43:12.614  INFO 12192 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:43:12.614  INFO 12192 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 20:43:12.630  INFO 12192 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 12ms. Found 0 JDBC repository interfaces.
2020-02-21 20:43:12.630  INFO 12192 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:43:12.630  INFO 12192 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 20:43:12.645  INFO 12192 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7ms. Found 0 JPA repository interfaces.
2020-02-21 20:43:12.739  INFO 12192 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 20:43:12.846  WARN 12192 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 20:43:12.940  INFO 12192 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 20:43:12.940  INFO 12192 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 20:43:12.940  INFO 12192 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 20:43:13.002  INFO 12192 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 20:43:13.002  INFO 12192 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 825 ms
2020-02-21 20:43:13.174  INFO 12192 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 20:43:13.174 ERROR 12192 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 20:43:13.174  INFO 12192 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-02-21 20:43:13.174  INFO 12192 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 20:43:13.486  INFO 12192 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 20:43:13.486  INFO 12192 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:43:13.502  INFO 12192 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 20:43:13.736  WARN 12192 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 20:43:13.939  INFO 12192 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 20:43:14.892  INFO 12192 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 20:43:14.892  INFO 12192 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 2.856 seconds (JVM running for 123.544)
2020-02-21 20:43:14.892  INFO 12192 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 20:43:37.378  INFO 2980 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 2980 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 20:43:37.394  INFO 2980 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 20:43:37.534  INFO 2980 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 20:43:37.534  INFO 2980 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 20:43:37.534  INFO 2980 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 20:43:38.300  INFO 2980 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:43:38.300  INFO 2980 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 20:43:38.315  INFO 2980 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16ms. Found 0 JDBC repository interfaces.
2020-02-21 20:43:38.315  INFO 2980 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:43:38.315  INFO 2980 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 20:43:38.331  INFO 2980 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4ms. Found 0 JPA repository interfaces.
2020-02-21 20:43:38.628  INFO 2980 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 20:43:39.081  INFO 2980 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 20:43:39.096  INFO 2980 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 20:43:39.096  INFO 2980 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 20:43:39.206  INFO 2980 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 20:43:39.206  INFO 2980 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1672 ms
2020-02-21 20:43:39.503  INFO 2980 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 20:43:39.549  INFO 2980 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 20:43:39.659  INFO 2980 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 20:43:39.752 ERROR 2980 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 20:43:39.768  INFO 2980 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 20:43:39.877  INFO 2980 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 20:43:40.768  INFO 2980 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 20:43:40.783  INFO 2980 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:43:40.815  INFO 2980 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 20:43:41.127  WARN 2980 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 20:43:41.330  INFO 2980 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 20:43:41.877  INFO 2980 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 20:43:41.877  INFO 2980 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 5.463 seconds (JVM running for 6.86)
2020-02-21 20:43:56.659  INFO 2980 --- [Thread-13] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 20:43:56.659  INFO 2980 --- [Thread-13] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:43:56.674  INFO 2980 --- [Thread-13] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-02-21 20:43:58.236  INFO 2980 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 2980 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 20:43:58.236  INFO 2980 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 20:43:58.557  INFO 2980 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:43:58.557  INFO 2980 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 20:43:58.572  INFO 2980 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 16ms. Found 0 JDBC repository interfaces.
2020-02-21 20:43:58.572  INFO 2980 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:43:58.572  INFO 2980 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 20:43:58.572  INFO 2980 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5ms. Found 0 JPA repository interfaces.
2020-02-21 20:43:58.682  INFO 2980 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 20:43:58.791  WARN 2980 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 20:43:58.994  INFO 2980 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 20:43:58.994  INFO 2980 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 20:43:58.994  INFO 2980 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 20:43:59.088  INFO 2980 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 20:43:59.088  INFO 2980 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 852 ms
2020-02-21 20:43:59.244  INFO 2980 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 20:43:59.244 ERROR 2980 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 20:43:59.244  INFO 2980 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-02-21 20:43:59.244  INFO 2980 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 20:43:59.572  INFO 2980 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 20:43:59.572  INFO 2980 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:43:59.588  INFO 2980 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 20:43:59.822  WARN 2980 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 20:44:00.197  INFO 2980 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 20:44:01.237  INFO 2980 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 20:44:01.237  INFO 2980 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 3.068 seconds (JVM running for 26.224)
2020-02-21 20:44:01.237  INFO 2980 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 20:44:03.987  INFO 2980 --- [Thread-23] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 20:44:03.987  INFO 2980 --- [Thread-23] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:44:03.987  INFO 2980 --- [Thread-23] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} closed
2020-02-21 20:44:04.573  INFO 2980 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 2980 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 20:44:04.573  INFO 2980 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 20:44:04.964  INFO 2980 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:44:04.964  INFO 2980 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 20:44:04.979  INFO 2980 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9ms. Found 0 JDBC repository interfaces.
2020-02-21 20:44:04.995  INFO 2980 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:44:04.995  INFO 2980 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 20:44:04.995  INFO 2980 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 7ms. Found 0 JPA repository interfaces.
2020-02-21 20:44:05.417  INFO 2980 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 20:44:05.675  WARN 2980 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 20:44:05.816  INFO 2980 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 20:44:05.816  INFO 2980 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 20:44:05.816  INFO 2980 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 20:44:05.988  INFO 2980 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 20:44:05.988  INFO 2980 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1415 ms
2020-02-21 20:44:06.238  INFO 2980 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 20:44:06.238 ERROR 2980 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 20:44:06.253  INFO 2980 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-3} inited
2020-02-21 20:44:06.253  INFO 2980 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 20:44:06.617  INFO 2980 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 20:44:06.617  INFO 2980 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:44:06.632  INFO 2980 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 20:44:06.960  WARN 2980 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 20:44:07.242  INFO 2980 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 20:44:16.070  INFO 12572 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 12572 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 20:44:16.085  INFO 12572 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 20:44:16.148  INFO 12572 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 20:44:16.148  INFO 12572 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 20:44:16.148  INFO 12572 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 20:44:16.960  INFO 12572 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:44:16.960  INFO 12572 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 20:44:16.991  INFO 12572 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 25ms. Found 0 JDBC repository interfaces.
2020-02-21 20:44:17.007  INFO 12572 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:44:17.007  INFO 12572 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 20:44:17.022  INFO 12572 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6ms. Found 0 JPA repository interfaces.
2020-02-21 20:44:17.480  INFO 12572 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 20:44:18.089  INFO 12572 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 20:44:18.089  INFO 12572 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 20:44:18.089  INFO 12572 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 20:44:18.292  INFO 12572 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 20:44:18.292  INFO 12572 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2144 ms
2020-02-21 20:44:18.917  INFO 12572 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 20:44:19.042  INFO 12572 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 20:44:19.245  INFO 12572 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 20:44:19.338 ERROR 12572 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 20:44:19.354  INFO 12572 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 20:44:19.448  INFO 12572 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 20:44:20.323  INFO 12572 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 20:44:20.323  INFO 12572 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:44:20.354  INFO 12572 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 20:44:20.635  WARN 12572 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 20:44:20.838  INFO 12572 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 20:44:21.385  INFO 12572 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 20:44:21.400  INFO 12572 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 6.525 seconds (JVM running for 8.092)
2020-02-21 20:45:09.448  INFO 12572 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 20:45:09.448  INFO 12572 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 20:45:09.464  INFO 12572 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 16 ms
2020-02-21 20:45:09.592  INFO 12572 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 20:45:09.983  INFO 12572 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 20:45:10.678  INFO 12572 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 20:45:10.696  INFO 12572 --- [http-nio-8080-exec-10] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 20:45:10.770  INFO 12572 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 20:45:10.791  INFO 12572 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 20:45:21.331  INFO 12572 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/postComment, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.post, args=[Comment(id=null, nickName=asd, email=675767206@qq.com, avatar=null, content=asd, createDate=null, rObject=, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=1, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), {comment=Comment(id=null, nickName=asd, email=675767206@qq.com, avatar=null, content=asd, createDate=null, rObject=, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=1, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), org.springframework.validation.BindingResult.comment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}])
2020-02-21 20:45:21.344  INFO 12572 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 20:45:43.678  INFO 12572 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/postComment, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.post, args=[Comment(id=null, nickName=asd, email=675767206@qq.com, avatar=null, content=asd, createDate=null, rObject=老黄, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=1, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), {comment=Comment(id=null, nickName=asd, email=675767206@qq.com, avatar=null, content=asd, createDate=null, rObject=老黄, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=1, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), org.springframework.validation.BindingResult.comment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}])
2020-02-21 20:45:43.691  INFO 12572 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 20:45:58.361  INFO 12572 --- [Thread-16] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 20:45:58.361  INFO 12572 --- [Thread-16] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:45:58.376  INFO 12572 --- [Thread-16] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-02-21 20:45:59.171  INFO 12572 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 12572 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 20:45:59.171  INFO 12572 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 20:45:59.999  INFO 12572 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:45:59.999  INFO 12572 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 20:46:00.014  INFO 12572 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17ms. Found 0 JDBC repository interfaces.
2020-02-21 20:46:00.108  INFO 12572 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:46:00.108  INFO 12572 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 20:46:00.124  INFO 12572 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 8ms. Found 0 JPA repository interfaces.
2020-02-21 20:46:00.249  INFO 12572 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 20:46:00.374  WARN 12572 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 20:46:00.487  INFO 12572 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 20:46:00.487  INFO 12572 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 20:46:00.487  INFO 12572 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 20:46:00.574  INFO 12572 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 20:46:00.574  INFO 12572 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1403 ms
2020-02-21 20:46:00.762  INFO 12572 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 20:46:00.762 ERROR 12572 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 20:46:00.762  INFO 12572 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-02-21 20:46:00.777  INFO 12572 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 20:46:01.105  INFO 12572 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 20:46:01.105  INFO 12572 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:46:01.121  INFO 12572 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 20:46:01.324  WARN 12572 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 20:46:01.512  INFO 12572 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 20:46:02.277  INFO 12572 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 20:46:02.293  INFO 12572 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 3.213 seconds (JVM running for 108.989)
2020-02-21 20:46:02.293  INFO 12572 --- [restartedMain] .ConditionEvaluationDeltaLoggingListener : Condition evaluation unchanged
2020-02-21 20:46:42.697  INFO 12572 --- [http-nio-8080-exec-10] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 20:46:42.698  INFO 12572 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 20:46:42.713  INFO 12572 --- [http-nio-8080-exec-10] o.s.web.servlet.DispatcherServlet        : Completed initialization in 15 ms
2020-02-21 20:48:13.201  INFO 15196 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 15196 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 20:48:13.216  INFO 15196 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 20:48:13.279  INFO 15196 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 20:48:13.279  INFO 15196 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 20:48:13.279  INFO 15196 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 20:48:14.278  INFO 15196 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:48:14.278  INFO 15196 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 20:48:14.325  INFO 15196 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 41ms. Found 0 JDBC repository interfaces.
2020-02-21 20:48:14.372  INFO 15196 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:48:14.372  INFO 15196 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 20:48:14.388  INFO 15196 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 12ms. Found 0 JPA repository interfaces.
2020-02-21 20:48:14.997  INFO 15196 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 20:48:15.419  INFO 15196 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 20:48:15.434  INFO 15196 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 20:48:15.434  INFO 15196 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 20:48:15.584  INFO 15196 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 20:48:15.584  INFO 15196 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2305 ms
2020-02-21 20:48:15.881  INFO 15196 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 20:48:15.944  INFO 15196 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 20:48:16.084  INFO 15196 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 20:48:16.194 ERROR 15196 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 20:48:16.194  INFO 15196 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 20:48:16.303  INFO 15196 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 20:48:17.209  INFO 15196 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 20:48:17.225  INFO 15196 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:48:17.240  INFO 15196 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 20:48:17.537  WARN 15196 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 20:48:17.725  INFO 15196 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 20:48:18.287  INFO 15196 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 20:48:18.287  INFO 15196 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 5.79 seconds (JVM running for 7.622)
2020-02-21 20:48:22.657  INFO 15196 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 20:48:22.657  INFO 15196 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 20:48:22.668  INFO 15196 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 11 ms
2020-02-21 20:48:22.796  INFO 15196 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 20:48:23.168  INFO 15196 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 20:48:23.937  INFO 15196 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 20:48:23.948  INFO 15196 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 20:48:24.012  INFO 15196 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 20:48:24.039  INFO 15196 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 20:48:32.853  INFO 15196 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/postComment, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.post, args=[Comment(id=null, nickName=asd, email=675767206@qq.com, avatar=null, content=asd, createDate=null, rObject=, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=1, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), {comment=Comment(id=null, nickName=asd, email=675767206@qq.com, avatar=null, content=asd, createDate=null, rObject=, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=1, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), org.springframework.validation.BindingResult.comment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}])
2020-02-21 20:48:32.863  INFO 15196 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 20:48:53.277  INFO 15196 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/postComment, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.post, args=[Comment(id=null, nickName=asd, email=675767206@qq.com, avatar=null, content=asd, createDate=null, rObject=, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=1, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), {comment=Comment(id=null, nickName=asd, email=675767206@qq.com, avatar=null, content=asd, createDate=null, rObject=, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=1, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), org.springframework.validation.BindingResult.comment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}])
2020-02-21 20:48:53.286  INFO 15196 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 20:51:31.865  INFO 15196 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/postComment, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.post, args=[Comment(id=null, nickName=asd, email=675767206@qq.com, avatar=null, content=asd, createDate=null, rObject=, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=1, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), {comment=Comment(id=null, nickName=asd, email=675767206@qq.com, avatar=null, content=asd, createDate=null, rObject=, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=1, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), org.springframework.validation.BindingResult.comment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}])
2020-02-21 20:51:31.877  INFO 15196 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 20:52:15.757  INFO 14752 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 14752 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 20:52:15.772  INFO 14752 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 20:52:15.835  INFO 14752 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 20:52:15.835  INFO 14752 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 20:52:15.835  INFO 14752 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 20:52:16.866  INFO 14752 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:52:16.881  INFO 14752 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 20:52:16.944  INFO 14752 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 54ms. Found 0 JDBC repository interfaces.
2020-02-21 20:52:16.975  INFO 14752 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:52:16.975  INFO 14752 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 20:52:17.006  INFO 14752 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17ms. Found 0 JPA repository interfaces.
2020-02-21 20:52:17.725  INFO 14752 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 20:52:18.381  INFO 14752 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 20:52:18.381  INFO 14752 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 20:52:18.381  INFO 14752 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 20:52:18.537  INFO 14752 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 20:52:18.537  INFO 14752 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2702 ms
2020-02-21 20:52:18.970  INFO 14752 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 20:52:19.079  INFO 14752 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 20:52:19.236  INFO 14752 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 20:52:19.361 ERROR 14752 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 20:52:19.361  INFO 14752 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 20:52:19.517  INFO 14752 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 20:52:21.413  INFO 14752 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 20:52:21.428  INFO 14752 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:52:21.475  INFO 14752 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 20:52:22.115  WARN 14752 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 20:52:22.319  INFO 14752 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 20:52:22.881  INFO 14752 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 20:52:22.881  INFO 14752 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 8.069 seconds (JVM running for 10.66)
2020-02-21 20:52:29.278  INFO 14752 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 20:52:29.278  INFO 14752 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 20:52:29.293  INFO 14752 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 15 ms
2020-02-21 20:52:29.434  INFO 14752 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 20:52:29.841  INFO 14752 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 20:52:30.517  INFO 14752 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 20:52:30.532  INFO 14752 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 20:52:30.617  INFO 14752 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 20:52:30.640  INFO 14752 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 20:52:36.133  INFO 14752 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/postComment, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.post, args=[Comment(id=null, nickName=asd, email=asd, avatar=null, content=asd, createDate=null, rObject=老李, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=1, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), {comment=Comment(id=null, nickName=asd, email=asd, avatar=null, content=asd, createDate=null, rObject=老李, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=1, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), org.springframework.validation.BindingResult.comment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}])
2020-02-21 20:52:36.141  INFO 14752 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 20:52:56.983  INFO 14752 --- [Thread-17] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 20:52:56.983  INFO 14752 --- [Thread-17] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:52:56.998  INFO 14752 --- [Thread-17] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-02-21 20:52:57.850  INFO 14752 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 14752 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 20:52:57.850  INFO 14752 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 20:52:58.288  INFO 14752 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:52:58.288  INFO 14752 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 20:52:58.303  INFO 14752 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 15ms. Found 0 JDBC repository interfaces.
2020-02-21 20:52:58.303  INFO 14752 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:52:58.303  INFO 14752 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 20:52:58.319  INFO 14752 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 9ms. Found 0 JPA repository interfaces.
2020-02-21 20:52:58.475  INFO 14752 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 20:52:58.850  WARN 14752 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 20:52:59.069  INFO 14752 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 20:52:59.069  INFO 14752 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 20:52:59.085  INFO 14752 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 20:52:59.225  INFO 14752 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 20:52:59.225  INFO 14752 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1359 ms
2020-02-21 20:57:47.678  INFO 11064 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 11064 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 20:57:47.678  INFO 11064 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 20:57:47.741  INFO 11064 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 20:57:47.741  INFO 11064 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 20:57:47.741  INFO 11064 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 20:57:48.475  INFO 11064 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:57:48.475  INFO 11064 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 20:57:48.491  INFO 11064 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 17ms. Found 0 JDBC repository interfaces.
2020-02-21 20:57:48.506  INFO 11064 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:57:48.506  INFO 11064 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 20:57:48.506  INFO 11064 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 4ms. Found 0 JPA repository interfaces.
2020-02-21 20:57:48.834  INFO 11064 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 20:57:49.272  INFO 11064 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 20:57:49.272  INFO 11064 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 20:57:49.272  INFO 11064 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 20:57:49.428  INFO 11064 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 20:57:49.428  INFO 11064 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1687 ms
2020-02-21 20:57:49.787  INFO 11064 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 20:57:49.850  INFO 11064 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 20:57:49.959  INFO 11064 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 20:57:50.068 ERROR 11064 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 20:57:50.068  INFO 11064 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 20:57:50.178  INFO 11064 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 20:57:51.070  INFO 11064 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 20:57:51.085  INFO 11064 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:57:51.101  INFO 11064 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 20:57:51.398  WARN 11064 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 20:57:51.585  INFO 11064 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 20:57:52.163  INFO 11064 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 20:57:52.163  INFO 11064 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 5.44 seconds (JVM running for 6.924)
2020-02-21 20:58:06.103  INFO 11064 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 20:58:06.104  INFO 11064 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 20:58:06.122  INFO 11064 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 18 ms
2020-02-21 20:58:06.251  INFO 11064 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 20:58:06.637  INFO 11064 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 20:58:07.577  INFO 11064 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 20:58:07.602  INFO 11064 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 20:58:07.693  INFO 11064 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 20:58:07.709  INFO 11064 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 20:58:18.925  INFO 11064 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/postComment, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.post, args=[Comment(id=null, nickName=asd, email=675767206@qq.com, avatar=null, content=hb , createDate=null, rObject=老李, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=1, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), {comment=Comment(id=null, nickName=asd, email=675767206@qq.com, avatar=null, content=hb , createDate=null, rObject=老李, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=1, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), org.springframework.validation.BindingResult.comment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}])
2020-02-21 20:58:19.152 ERROR 11064 --- [http-nio-8080-exec-4] p.p.e.ControllerExceptionHandler         : Request URL : http://localhost:8080/postComment，Exception : {}

org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may exist in personal/personalblogreturn/mapper/CommentMapper.java (best guess)
### The error may involve personal.personalblogreturn.mapper.CommentMapper.addComment-Inline
### The error occurred while setting parameters
### SQL: Insert into t_comment(content,create_date,email,nick_name,blog_id,parent_comment_id)values(content = ?,create_date=?,nick_name=?,blog_id=?,parent_comment_id=?)
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1
	at org.springframework.jdbc.support.SQLStateSQLExceptionTranslator.doTranslate(SQLStateSQLExceptionTranslator.java:101)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:81)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:88)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:440)
	at com.sun.proxy.$Proxy105.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:271)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:62)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:93)
	at com.sun.proxy.$Proxy123.addComment(Unknown Source)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at com.sun.proxy.$Proxy124.addComment(Unknown Source)
	at personal.personalblogreturn.service.CommentServiceImpl.addComment(CommentServiceImpl.java:41)
	at personal.personalblogreturn.controller.CommentController.post(CommentController.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:344)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:198)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:772)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterAdvice.invoke(AspectJAfterAdvice.java:47)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at personal.personalblogreturn.controller.CommentController$$EnhancerBySpringCGLIB$$515e2f87.post(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.sql.SQLException: Column count doesn't match value count at row 1
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:129)
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:97)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:122)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:953)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:370)
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:493)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:47)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:74)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.apache.ibatis.plugin.Plugin.invoke(Plugin.java:63)
	at com.sun.proxy.$Proxy152.update(Unknown Source)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:426)
	... 91 common frames omitted

2020-02-21 20:58:19.167  WARN 11064 --- [http-nio-8080-exec-4] .m.m.a.ExceptionHandlerExceptionResolver : Resolved [org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLException: Column count doesn't match value count at row 1
### The error may exist in personal/personalblogreturn/mapper/CommentMapper.java (best guess)
### The error may involve personal.personalblogreturn.mapper.CommentMapper.addComment-Inline
### The error occurred while setting parameters
### SQL: Insert into t_comment(content,create_date,email,nick_name,blog_id,parent_comment_id)values(content = ?,create_date=?,nick_name=?,blog_id=?,parent_comment_id=?)
### Cause: java.sql.SQLException: Column count doesn't match value count at row 1
; bad SQL grammar []; nested exception is java.sql.SQLException: Column count doesn't match value count at row 1]
2020-02-21 20:59:35.668  INFO 6644 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 6644 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 20:59:35.684  INFO 6644 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 20:59:35.809  INFO 6644 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 20:59:35.809  INFO 6644 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 20:59:35.809  INFO 6644 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 20:59:36.738  INFO 6644 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:59:36.738  INFO 6644 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 20:59:36.785  INFO 6644 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 28ms. Found 0 JDBC repository interfaces.
2020-02-21 20:59:36.801  INFO 6644 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 20:59:36.801  INFO 6644 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 20:59:36.801  INFO 6644 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 5ms. Found 0 JPA repository interfaces.
2020-02-21 20:59:37.269  INFO 6644 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 20:59:38.097  INFO 6644 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 20:59:38.113  INFO 6644 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 20:59:38.128  INFO 6644 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 20:59:38.441  INFO 6644 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 20:59:38.441  INFO 6644 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2632 ms
2020-02-21 20:59:38.863  INFO 6644 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 20:59:38.941  INFO 6644 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 20:59:39.066  INFO 6644 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 20:59:39.159 ERROR 6644 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 20:59:39.159  INFO 6644 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 20:59:39.269  INFO 6644 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 20:59:40.144  INFO 6644 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 20:59:40.144  INFO 6644 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 20:59:40.175  INFO 6644 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 20:59:40.487  WARN 6644 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 20:59:40.675  INFO 6644 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 20:59:41.268  INFO 6644 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 20:59:41.268  INFO 6644 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 6.56 seconds (JVM running for 7.988)
2020-02-21 20:59:52.250  INFO 6644 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 20:59:52.250  INFO 6644 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 20:59:52.270  INFO 6644 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 19 ms
2020-02-21 20:59:52.395  INFO 6644 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 20:59:52.889  INFO 6644 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 20:59:53.644  INFO 6644 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 20:59:53.657  INFO 6644 --- [http-nio-8080-exec-2] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 20:59:53.716  INFO 6644 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 20:59:53.732  INFO 6644 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 21:00:00.306  INFO 6644 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/postComment, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.post, args=[Comment(id=null, nickName=asd, email=675767206@qq.com, avatar=null, content=asd, createDate=null, rObject=老黄, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=1, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), {comment=Comment(id=null, nickName=asd, email=675767206@qq.com, avatar=null, content=asd, createDate=null, rObject=老黄, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=1, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), org.springframework.validation.BindingResult.comment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}])
2020-02-21 21:00:00.324  INFO 6644 --- [http-nio-8080-exec-6] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 21:00:54.844  INFO 15148 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 15148 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 21:00:54.844 DEBUG 15148 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 21:00:54.844  INFO 15148 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 21:00:54.937  INFO 15148 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 21:00:54.937  INFO 15148 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 21:00:54.937  INFO 15148 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 21:00:55.817  INFO 15148 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 21:00:55.817  INFO 15148 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 21:00:55.849  INFO 15148 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 26ms. Found 0 JDBC repository interfaces.
2020-02-21 21:00:55.864  INFO 15148 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 21:00:55.864  INFO 15148 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 21:00:55.880  INFO 15148 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6ms. Found 0 JPA repository interfaces.
2020-02-21 21:00:56.333  INFO 15148 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 21:00:57.192  INFO 15148 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 21:00:57.208  INFO 15148 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 21:00:57.208  INFO 15148 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 21:00:57.458  INFO 15148 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 21:00:57.458  INFO 15148 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2521 ms
2020-02-21 21:00:57.770  INFO 15148 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 21:00:57.817  INFO 15148 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 21:00:57.926  INFO 15148 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 21:00:58.020 ERROR 15148 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 21:00:58.020  INFO 15148 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 21:00:58.129  INFO 15148 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 21:00:59.004  INFO 15148 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 21:00:59.020  INFO 15148 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 21:00:59.035  INFO 15148 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 21:00:59.348  WARN 15148 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 21:00:59.551  INFO 15148 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 21:01:00.129  INFO 15148 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 21:01:00.129  INFO 15148 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 6.384 seconds (JVM running for 8.169)
2020-02-21 21:01:16.775  INFO 15148 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 21:01:16.775  INFO 15148 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 21:01:16.792  INFO 15148 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 17 ms
2020-02-21 21:01:16.897  INFO 15148 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/postComment, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.post, args=[Comment(id=null, nickName=asdxzc, email=675767206@qq.com, avatar=null, content=sad, createDate=null, rObject=老黄, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=1, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), {comment=Comment(id=null, nickName=asdxzc, email=675767206@qq.com, avatar=null, content=sad, createDate=null, rObject=老黄, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=1, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), org.springframework.validation.BindingResult.comment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}])
2020-02-21 21:01:16.915 DEBUG 15148 --- [http-nio-8080-exec-1] p.p.mapper.CommentMapper.addComment      : ==>  Preparing: Insert into t_comment(content,create_date,email,nick_name,blog_id,parent_comment_id)values(content = ?,create_date=?,email=?,nick_name=?,blog_id=?,parent_comment_id=?) 
2020-02-21 21:01:17.127 DEBUG 15148 --- [http-nio-8080-exec-1] p.p.mapper.CommentMapper.addComment      : ==> Parameters: @老黄:sad(String), 2020-02-21 21:01:16.898(Timestamp), 675767206@qq.com(String), asdxzc(String), 2(Integer), 1(Integer)
2020-02-21 21:01:17.133 DEBUG 15148 --- [http-nio-8080-exec-1] p.p.mapper.CommentMapper.addComment      : <==    Updates: 1
2020-02-21 21:01:17.141 DEBUG 15148 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 21:01:17.141 DEBUG 15148 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 21:01:17.154 TRACE 15148 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 21:01:17.156 TRACE 15148 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 83, 35, 1
2020-02-21 21:01:17.159 DEBUG 15148 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 21:01:17.159 DEBUG 15148 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 21:01:17.160 TRACE 15148 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 21:01:17.160 TRACE 15148 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 21:01:17.161 DEBUG 15148 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 21:01:17.161 DEBUG 15148 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 21:01:17.162 DEBUG 15148 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 21:01:17.163 TRACE 15148 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 21:01:17.163 TRACE 15148 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 21:01:17.163 TRACE 15148 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 21:01:17.163 DEBUG 15148 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 21:01:17.164 DEBUG 15148 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 21:01:17.164 DEBUG 15148 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 21:01:17.165 TRACE 15148 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 21:01:17.166 TRACE 15148 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 21:01:17.166 DEBUG 15148 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 21:01:17.167 DEBUG 15148 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 21:01:17.168 TRACE 15148 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 21:01:17.168 TRACE 15148 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 21:01:17.169 TRACE 15148 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 21:01:17.169 DEBUG 15148 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 21:01:17.170 DEBUG 15148 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 21:01:17.170 DEBUG 15148 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 21:01:17.171  INFO 15148 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 21:02:49.218  INFO 15148 --- [Thread-14] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'applicationTaskExecutor'
2020-02-21 21:02:49.218  INFO 15148 --- [Thread-14] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 21:02:49.234  INFO 15148 --- [Thread-14] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2020-02-21 21:02:50.143  INFO 15148 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 15148 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 21:02:50.143 DEBUG 15148 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 21:02:50.143  INFO 15148 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 21:02:50.549  INFO 15148 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 21:02:50.549  INFO 15148 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 21:02:50.580  INFO 15148 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 13ms. Found 0 JDBC repository interfaces.
2020-02-21 21:02:50.580  INFO 15148 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 21:02:50.580  INFO 15148 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 21:02:50.580  INFO 15148 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6ms. Found 0 JPA repository interfaces.
2020-02-21 21:02:50.705  INFO 15148 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 21:02:50.971  WARN 15148 --- [restartedMain] org.apache.tomcat.util.modeler.Registry  : The MBean registry cannot be disabled because it has already been initialised
2020-02-21 21:02:51.205  INFO 15148 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 21:02:51.205  INFO 15148 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 21:02:51.205  INFO 15148 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 21:02:51.314  INFO 15148 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 21:02:51.314  INFO 15148 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 1171 ms
2020-02-21 21:02:51.830  INFO 15148 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 21:02:51.842 ERROR 15148 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 21:02:51.844  INFO 15148 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} inited
2020-02-21 21:02:51.844  INFO 15148 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 21:02:52.172  INFO 15148 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 21:02:52.172  INFO 15148 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 21:02:52.203  INFO 15148 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 21:02:52.375  WARN 15148 --- [restartedMain] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'commentController': Unsatisfied dependency expressed through field 'commentService'; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'commentServiceImpl': Unsatisfied dependency expressed through field 'commentMapper'; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type 'personal.personalblogreturn.mapper.CommentMapper' available: expected at least 1 bean which qualifies as autowire candidate. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)}
2020-02-21 21:02:52.375  INFO 15148 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 21:02:52.375  INFO 15148 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-2} closed
2020-02-21 21:02:52.375  INFO 15148 --- [restartedMain] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2020-02-21 21:02:52.391  INFO 15148 --- [restartedMain] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-02-21 21:02:52.547 ERROR 15148 --- [restartedMain] o.s.b.d.LoggingFailureAnalysisReporter   : 

***************************
APPLICATION FAILED TO START
***************************

Description:

Field commentMapper in personal.personalblogreturn.service.CommentServiceImpl required a bean of type 'personal.personalblogreturn.mapper.CommentMapper' that could not be found.

The injection point has the following annotations:
	- @org.springframework.beans.factory.annotation.Autowired(required=true)


Action:

Consider defining a bean of type 'personal.personalblogreturn.mapper.CommentMapper' in your configuration.

2020-02-21 21:03:06.245  INFO 14056 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 14056 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 21:03:06.245 DEBUG 14056 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 21:03:06.245  INFO 14056 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 21:03:06.323  INFO 14056 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 21:03:06.323  INFO 14056 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 21:03:06.323  INFO 14056 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 21:03:07.275  INFO 14056 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 21:03:07.275  INFO 14056 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 21:03:07.306  INFO 14056 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 25ms. Found 0 JDBC repository interfaces.
2020-02-21 21:03:07.322  INFO 14056 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 21:03:07.322  INFO 14056 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 21:03:07.322  INFO 14056 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6ms. Found 0 JPA repository interfaces.
2020-02-21 21:03:07.775  INFO 14056 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 21:03:08.634  INFO 14056 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 21:03:08.665  INFO 14056 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 21:03:08.665  INFO 14056 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 21:03:08.962  INFO 14056 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 21:03:08.962  INFO 14056 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2639 ms
2020-02-21 21:03:09.274  INFO 14056 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 21:03:09.339  INFO 14056 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 21:03:09.449  INFO 14056 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 21:03:09.542 ERROR 14056 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 21:03:09.542  INFO 14056 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 21:03:09.652  INFO 14056 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 21:03:10.573  INFO 14056 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 21:03:10.589  INFO 14056 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 21:03:10.605  INFO 14056 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 21:03:10.917  WARN 14056 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 21:03:11.105  INFO 14056 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 21:03:11.698  INFO 14056 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 21:03:11.698  INFO 14056 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 6.465 seconds (JVM running for 7.885)
2020-02-21 21:03:21.644  INFO 14056 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 21:03:21.644  INFO 14056 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 21:03:21.659  INFO 14056 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 15 ms
2020-02-21 21:03:21.760  INFO 14056 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/blog/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.BlogsController.queryBlog, args=[{}, 2])
2020-02-21 21:03:21.793 DEBUG 14056 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 21:03:22.098 DEBUG 14056 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 21:03:22.125 TRACE 14056 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 21:03:22.128 TRACE 14056 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 83, 35, 1
2020-02-21 21:03:22.134 DEBUG 14056 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 21:03:22.135 DEBUG 14056 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 21:03:22.139 TRACE 14056 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 21:03:22.139 TRACE 14056 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 21:03:22.140 DEBUG 14056 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 21:03:22.141 DEBUG 14056 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 21:03:22.142 DEBUG 14056 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 21:03:22.144 TRACE 14056 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 21:03:22.144 TRACE 14056 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 21:03:22.144 TRACE 14056 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 21:03:22.144 DEBUG 14056 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 21:03:22.145 DEBUG 14056 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 21:03:22.145 DEBUG 14056 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 21:03:22.147 TRACE 14056 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 21:03:22.147 TRACE 14056 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 21:03:22.148 DEBUG 14056 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 21:03:22.149 DEBUG 14056 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 21:03:22.153 TRACE 14056 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 21:03:22.154 TRACE 14056 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 21:03:22.156 TRACE 14056 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 21:03:22.157 DEBUG 14056 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 21:03:22.158 DEBUG 14056 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 21:03:22.158 DEBUG 14056 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 21:03:22.161 DEBUG 14056 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==>  Preparing: update t_blog set view_counts = view_counts + 1 where id = ? 
2020-02-21 21:03:22.161 DEBUG 14056 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : ==> Parameters: 2(Integer)
2020-02-21 21:03:22.169 DEBUG 14056 --- [http-nio-8080-exec-1] p.p.m.BlogMapper.updateBlogViewCountS    : <==    Updates: 1
2020-02-21 21:03:22.228  INFO 14056 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog
2020-02-21 21:03:22.874  INFO 14056 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/footer/recommendList, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.IndexController.recommend, args=[{}])
2020-02-21 21:03:22.880 DEBUG 14056 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : ==>  Preparing: select * from t_blog where recommend = ? ORDER BY update_time Limit ? 
2020-02-21 21:03:22.881 DEBUG 14056 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : ==> Parameters: true(Boolean), 3(Integer)
2020-02-21 21:03:22.882 TRACE 14056 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 21:03:22.883 TRACE 14056 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 6, 1, 1, <<BLOB>>, 1, 2019-12-11 20:07:57, <<BLOB>>, [TOC], 原创, 1, 1, Spring入门笔记, 2019-12-11 20:07:57, 1, 2, 1
2020-02-21 21:03:22.888 TRACE 14056 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 7, 1, 1, <<BLOB>>, 1, 2019-12-13 17:00:15, <<BLOB>>, [TOC], 原创, 1, 1, SpringMVC入门（依赖，配置，Controller）, 2019-12-13 17:00:15, 0, 30, 1
2020-02-21 21:03:22.889 TRACE 14056 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==        Row: 8, 1, 1, <<BLOB>>, 1, 2019-12-14 16:28:04, <<BLOB>>, [TOC], 原创, 1, 1, IDEA如何导入以及使用lombok, 2019-12-14 16:28:04, 0, 41, 1
2020-02-21 21:03:22.891 DEBUG 14056 --- [http-nio-8080-exec-3] p.p.m.BlogMapper.queryTitleByRecommend   : <==      Total: 3
2020-02-21 21:03:22.891  INFO 14056 --- [http-nio-8080-exec-3] p.personalblogreturn.aspect.LogAspect    : ===>Result: commons/commons :: recommendList
2020-02-21 21:03:22.971  INFO 14056 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/comment/2, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.index, args=[2, {}])
2020-02-21 21:03:22.972 DEBUG 14056 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 21:03:22.973 DEBUG 14056 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 21:03:22.976 TRACE 14056 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 21:03:22.976 TRACE 14056 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 84, 35, 1
2020-02-21 21:03:22.977 DEBUG 14056 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 21:03:22.978 DEBUG 14056 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 21:03:22.979 TRACE 14056 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 21:03:22.979 TRACE 14056 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 21:03:22.980 DEBUG 14056 --- [http-nio-8080-exec-5] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 21:03:22.981 DEBUG 14056 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 21:03:22.981 DEBUG 14056 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 21:03:22.983 TRACE 14056 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 21:03:22.984 TRACE 14056 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 21:03:22.985 TRACE 14056 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 21:03:22.987 DEBUG 14056 --- [http-nio-8080-exec-5] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 21:03:22.988 DEBUG 14056 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 21:03:22.989 DEBUG 14056 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 21:03:22.991 TRACE 14056 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 21:03:22.991 TRACE 14056 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 21:03:22.992 DEBUG 14056 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 21:03:22.993 DEBUG 14056 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 21:03:22.994 TRACE 14056 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 21:03:22.994 TRACE 14056 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 21:03:22.995 TRACE 14056 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 21:03:22.996 DEBUG 14056 --- [http-nio-8080-exec-5] p.p.m.CommentMapper.querySonComment      : <======      Total: 2
2020-02-21 21:03:22.997 DEBUG 14056 --- [http-nio-8080-exec-5] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 21:03:22.998 DEBUG 14056 --- [http-nio-8080-exec-5] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 21:03:22.998  INFO 14056 --- [http-nio-8080-exec-5] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 21:03:33.837  INFO 14056 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/postComment, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.post, args=[Comment(id=null, nickName=asd, email=asd, avatar=null, content=asd, createDate=null, rObject=, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=1, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), {comment=Comment(id=null, nickName=asd, email=asd, avatar=null, content=asd, createDate=null, rObject=, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=1, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), org.springframework.validation.BindingResult.comment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}])
2020-02-21 21:03:33.838 DEBUG 14056 --- [http-nio-8080-exec-4] p.p.mapper.CommentMapper.addComment      : ==>  Preparing: Insert into t_comment(content,create_date,email,nick_name,blog_id,parent_comment_id)values(?,?,?,?,?,?) 
2020-02-21 21:03:33.840 DEBUG 14056 --- [http-nio-8080-exec-4] p.p.mapper.CommentMapper.addComment      : ==> Parameters: @:asd(String), 2020-02-21 21:03:33.837(Timestamp), asd(String), asd(String), 2(Integer), 1(Integer)
2020-02-21 21:03:33.855 DEBUG 14056 --- [http-nio-8080-exec-4] p.p.mapper.CommentMapper.addComment      : <==    Updates: 1
2020-02-21 21:03:33.855 DEBUG 14056 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 21:03:33.855 DEBUG 14056 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 21:03:33.856 TRACE 14056 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 21:03:33.857 TRACE 14056 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 84, 35, 1
2020-02-21 21:03:33.858 DEBUG 14056 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 21:03:33.858 DEBUG 14056 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 21:03:33.859 TRACE 14056 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 21:03:33.859 TRACE 14056 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 21:03:33.860 DEBUG 14056 --- [http-nio-8080-exec-4] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 21:03:33.860 DEBUG 14056 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 21:03:33.861 DEBUG 14056 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 21:03:33.863 TRACE 14056 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 21:03:33.863 TRACE 14056 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 21:03:33.863 TRACE 14056 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 21:03:33.864 DEBUG 14056 --- [http-nio-8080-exec-4] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 21:03:33.864 DEBUG 14056 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 21:03:33.865 DEBUG 14056 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 21:03:33.866 TRACE 14056 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 21:03:33.867 TRACE 14056 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 21:03:33.868 DEBUG 14056 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 21:03:33.868 DEBUG 14056 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 21:03:33.870 TRACE 14056 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 21:03:33.871 TRACE 14056 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 21:03:33.871 TRACE 14056 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 21:03:33.871 TRACE 14056 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======        Row: 6, null, @:asd, 2020-02-21 21:03:33, asd, asd, 2, 1
2020-02-21 21:03:33.872 DEBUG 14056 --- [http-nio-8080-exec-4] p.p.m.CommentMapper.querySonComment      : <======      Total: 3
2020-02-21 21:03:33.872 DEBUG 14056 --- [http-nio-8080-exec-4] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 21:03:33.873 DEBUG 14056 --- [http-nio-8080-exec-4] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 21:03:33.873  INFO 14056 --- [http-nio-8080-exec-4] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
2020-02-21 21:06:45.463  INFO 908 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Starting PersonalBlogReturnApplication on LAPTOP-EOCRPPN3 with PID 908 (E:\deaProjects\personal-blog-return\target\classes started by 10646 in E:\deaProjects\personal-blog-return)
2020-02-21 21:06:45.472 DEBUG 908 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-02-21 21:06:45.472  INFO 908 --- [restartedMain] p.p.PersonalBlogReturnApplication        : The following profiles are active: dev
2020-02-21 21:06:45.535  INFO 908 --- [restartedMain] o.s.b.devtools.restart.ChangeableUrls    : The Class-Path manifest attribute in E:\Development\Maven_libs\org\glassfish\jaxb\jaxb-runtime\2.3.2\jaxb-runtime-2.3.2.jar referenced one or more files that do not exist: file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.xml.bind-api-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/txw2-2.3.2.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/istack-commons-runtime-3.0.8.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/stax-ex-1.8.1.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/FastInfoset-1.2.16.jar,file:/E:/Development/Maven_libs/org/glassfish/jaxb/jaxb-runtime/2.3.2/jakarta.activation-api-1.2.1.jar
2020-02-21 21:06:45.535  INFO 908 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2020-02-21 21:06:45.535  INFO 908 --- [restartedMain] .e.DevToolsPropertyDefaultsPostProcessor : For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2020-02-21 21:06:46.483  INFO 908 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 21:06:46.483  INFO 908 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2020-02-21 21:06:46.514  INFO 908 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 21ms. Found 0 JDBC repository interfaces.
2020-02-21 21:06:46.530  INFO 908 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2020-02-21 21:06:46.530  INFO 908 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2020-02-21 21:06:46.546  INFO 908 --- [restartedMain] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 6ms. Found 0 JPA repository interfaces.
2020-02-21 21:06:47.017  INFO 908 --- [restartedMain] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-02-21 21:06:47.933  INFO 908 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8080 (http)
2020-02-21 21:06:47.949  INFO 908 --- [restartedMain] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2020-02-21 21:06:47.949  INFO 908 --- [restartedMain] org.apache.catalina.core.StandardEngine  : Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-02-21 21:06:48.216  INFO 908 --- [restartedMain] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2020-02-21 21:06:48.216  INFO 908 --- [restartedMain] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 2681 ms
2020-02-21 21:06:48.630  INFO 908 --- [restartedMain] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2020-02-21 21:06:48.747  INFO 908 --- [restartedMain] org.hibernate.Version                    : HHH000412: Hibernate Core {5.4.9.Final}
2020-02-21 21:06:48.942  INFO 908 --- [restartedMain] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.1.0.Final}
2020-02-21 21:06:49.098 ERROR 908 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : testWhileIdle is true, validationQuery not set
2020-02-21 21:06:49.108  INFO 908 --- [restartedMain] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2020-02-21 21:06:49.241  INFO 908 --- [restartedMain] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.MySQL55Dialect
2020-02-21 21:06:50.095  INFO 908 --- [restartedMain] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2020-02-21 21:06:50.104  INFO 908 --- [restartedMain] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-02-21 21:06:50.131  INFO 908 --- [restartedMain] o.s.b.d.a.OptionalLiveReloadServer       : LiveReload server is running on port 35729
2020-02-21 21:06:50.425  WARN 908 --- [restartedMain] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-02-21 21:06:50.612  INFO 908 --- [restartedMain] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService 'applicationTaskExecutor'
2020-02-21 21:06:51.192  INFO 908 --- [restartedMain] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8080 (http) with context path ''
2020-02-21 21:06:51.192  INFO 908 --- [restartedMain] p.p.PersonalBlogReturnApplication        : Started PersonalBlogReturnApplication in 7.038 seconds (JVM running for 8.599)
2020-02-21 21:06:58.070  INFO 908 --- [http-nio-8080-exec-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-02-21 21:06:58.070  INFO 908 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Initializing Servlet 'dispatcherServlet'
2020-02-21 21:06:58.083  INFO 908 --- [http-nio-8080-exec-1] o.s.web.servlet.DispatcherServlet        : Completed initialization in 13 ms
2020-02-21 21:06:58.164  INFO 908 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Request: RequestLog(url=http://localhost:8080/postComment, ip=0:0:0:0:0:0:0:1, classMethod=personal.personalblogreturn.controller.CommentController.post, args=[Comment(id=null, nickName=阿萨, email=asd, avatar=null, content=mode过去, createDate=null, rObject=asd, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=1, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), {comment=Comment(id=null, nickName=阿萨, email=asd, avatar=null, content=mode过去, createDate=null, rObject=asd, blog=Blog(id=2, title=null, content=null, firstPic=null, flag=null, description=null, viewCounts=null, status=false, appreciateSwitch=false, commentSwitch=false, copyrightSwitch=false, recommend=false, createTime=null, updateTime=null, type=null, tags=null, user=null, comments=null, typeId=null, tagsId=null), sonComment=null, parentComment=Comment(id=1, nickName=null, email=null, avatar=null, content=null, createDate=null, rObject=null, blog=null, sonComment=null, parentComment=null)), org.springframework.validation.BindingResult.comment=org.springframework.validation.BeanPropertyBindingResult: 0 errors}])
2020-02-21 21:06:58.192 DEBUG 908 --- [http-nio-8080-exec-1] p.p.mapper.CommentMapper.addComment      : ==>  Preparing: Insert into t_comment(content,create_date,email,nick_name,blog_id,parent_comment_id)values(?,?,?,?,?,?) 
2020-02-21 21:06:58.427 DEBUG 908 --- [http-nio-8080-exec-1] p.p.mapper.CommentMapper.addComment      : ==> Parameters: @asd : mode过去(String), 2020-02-21 21:06:58.164(Timestamp), asd(String), 阿萨(String), 2(Integer), 1(Integer)
2020-02-21 21:06:58.434 DEBUG 908 --- [http-nio-8080-exec-1] p.p.mapper.CommentMapper.addComment      : <==    Updates: 1
2020-02-21 21:06:58.444 DEBUG 908 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==>  Preparing: select * from t_blog where id = ? 
2020-02-21 21:06:58.444 DEBUG 908 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : ==> Parameters: 2(Integer)
2020-02-21 21:06:58.459 TRACE 908 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==    Columns: id, appreciate_switch, comment_switch, content, copyright_switch, create_time, description, first_pic, flag, recommend, status, title, update_time, view_counts, type_id, user_id
2020-02-21 21:06:58.462 TRACE 908 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==        Row: 2, 1, 1, <<BLOB>>, 1, 2020-02-01 20:30:54, <<BLOB>>, https://i.picsum.photos/id/1006/800/400.jpg, 原创, 1, 1, Springboot使用MD5加密用户密码, 2020-02-01 20:30:54, 84, 35, 1
2020-02-21 21:06:58.468 DEBUG 908 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====>  Preparing: Select * from t_type where id = ? 
2020-02-21 21:06:58.468 DEBUG 908 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : ====> Parameters: 35(Integer)
2020-02-21 21:06:58.469 TRACE 908 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====    Columns: id, name
2020-02-21 21:06:58.469 TRACE 908 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====        Row: 35, 算法
2020-02-21 21:06:58.470 DEBUG 908 --- [http-nio-8080-exec-1] p.p.mapper.TypeMapper.queryTypeByID      : <====      Total: 1
2020-02-21 21:06:58.470 DEBUG 908 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====>  Preparing: SELECT * FROM t_tag where t_tag.id IN (SELECT t_blog_tags.tags_id from t_blog_tags where t_blog_tags.blog_id = ?) 
2020-02-21 21:06:58.471 DEBUG 908 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : ====> Parameters: 2(Integer)
2020-02-21 21:06:58.472 TRACE 908 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====    Columns: id, name
2020-02-21 21:06:58.472 TRACE 908 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 1, SpringBoot
2020-02-21 21:06:58.472 TRACE 908 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====        Row: 6, MD5
2020-02-21 21:06:58.472 DEBUG 908 --- [http-nio-8080-exec-1] p.p.mapper.TagMapper.queryTagByBlogId    : <====      Total: 2
2020-02-21 21:06:58.473 DEBUG 908 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====>  Preparing: SELECT * FROM t_comment WHERE blog_id = ? and parent_comment_id is null; 
2020-02-21 21:06:58.473 DEBUG 908 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : ====> Parameters: 2(Integer)
2020-02-21 21:06:58.474 TRACE 908 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 21:06:58.475 TRACE 908 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====        Row: 1, null, 莫名其妙, 2020-02-21 16:28:11, null, 老刘, 2, null
2020-02-21 21:06:58.476 DEBUG 908 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======>  Preparing: Select * from t_comment where parent_comment_id = ? 
2020-02-21 21:06:58.476 DEBUG 908 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : ======> Parameters: 1(Integer)
2020-02-21 21:06:58.477 TRACE 908 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======    Columns: id, avatar, content, create_date, email, nick_name, blog_id, parent_comment_id
2020-02-21 21:06:58.478 TRACE 908 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 2, null, 我的奇妙, 2020-02-21 16:28:13, null, 老李, 2, 1
2020-02-21 21:06:58.479 TRACE 908 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 3, null, null, 2020-02-21 16:28:15, null, 老黄, 2, 1
2020-02-21 21:06:58.479 TRACE 908 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 6, null, @:asd, 2020-02-21 21:03:33, asd, asd, 2, 1
2020-02-21 21:06:58.480 TRACE 908 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======        Row: 7, null, @asd : mode过去, 2020-02-21 21:06:58, asd, 阿萨, 2, 1
2020-02-21 21:06:58.481 DEBUG 908 --- [http-nio-8080-exec-1] p.p.m.CommentMapper.querySonComment      : <======      Total: 4
2020-02-21 21:06:58.481 DEBUG 908 --- [http-nio-8080-exec-1] p.p.m.C.queryCommentByBlogId             : <====      Total: 1
2020-02-21 21:06:58.481 DEBUG 908 --- [http-nio-8080-exec-1] p.p.mapper.BlogMapper.queryBlogById      : <==      Total: 1
2020-02-21 21:06:58.482  INFO 908 --- [http-nio-8080-exec-1] p.personalblogreturn.aspect.LogAspect    : ===>Result: public/blog :: commentList
